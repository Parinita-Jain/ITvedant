<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Enter Any Amount' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5000.'>
        <calculation class='tableau' formula='5000.' />
      </column>
      <column caption='Top Criteria Number' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='7'>
        <calculation class='tableau' formula='7' />
        <range max='10' min='2' />
      </column>
      <column caption='Select Measure' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
        <calculation class='tableau' formula='&quot;Sales&quot;' />
        <members>
          <member value='&quot;Sales&quot;' />
          <member value='&quot;Profit&quot;' />
          <member value='&quot;Quantity&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Orders+ (Sample - EU Superstore)' inline='true' name='federated.01kznmu1fcml6r17xizj2063xxzg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - EU Superstore' name='excel-direct.09u10np1wyabfe1eseaom1g9jjls'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/FACULTY-CR2/Documents/ParinitaJain/9_11_2025/Tableau/Sample - EU Superstore.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='excel-direct.09u10np1wyabfe1eseaom1g9jjls' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:T10001:no:A1:T10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='City' ordinal='8' />
              <column datatype='string' name='State' ordinal='9' />
              <column datatype='string' name='Country' ordinal='10' />
              <column datatype='string' name='Region' ordinal='11' />
              <column datatype='string' name='Product ID' ordinal='12' />
              <column datatype='string' name='Category' ordinal='13' />
              <column datatype='string' name='Sub-Category' ordinal='14' />
              <column datatype='string' name='Product Name' ordinal='15' />
              <column datatype='real' name='Sales' ordinal='16' />
              <column datatype='integer' name='Quantity' ordinal='17' />
              <column datatype='real' name='Discount' ordinal='18' />
              <column datatype='real' name='Profit' ordinal='19' />
            </columns>
          </relation>
          <relation connection='excel-direct.09u10np1wyabfe1eseaom1g9jjls' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B4:no:A1:B4:0' header='yes' outcome='6'>
              <column datatype='string' name='Region' ordinal='0' />
              <column datatype='string' name='People' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.09u10np1wyabfe1eseaom1g9jjls' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B638:no:A1:B638:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='string' name='Returned' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[People]' value='[People].[People]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:T10001:no:A1:T10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B4:no:A1:B4:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B638:no:A1:B638:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[People_B033A29162DE4EE6B89D233817595093]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People</remote-name>
            <remote-type>130</remote-type>
            <local-name>[People]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>People</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[People_B033A29162DE4EE6B89D233817595093]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Returns_E67E1A2D227E4114A939FFE6191FC946]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Returns_E67E1A2D227E4114A939FFE6191FC946]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='SalesCompare' datatype='boolean' name='[Calculation_250512742146846720]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Sales]&gt;  [Parameters].[Parameter 1]  then True else False end' />
      </column>
      <column caption='Selected Measure' datatype='real' name='[Calculation_250512742152462338]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case [Parameters].[Parameter 3]&#13;&#10;when &quot;Sales&quot; then SUM([Sales])&#13;&#10;when &quot;Profit&quot; then SUM([Profit])&#13;&#10;when &quot;Quantity&quot; then SUM([Quantity])&#13;&#10;END' />
      </column>
      <column caption='ProfitRatio' datatype='real' name='[Calculation_810647945463029761]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Profit]/[Sales]' />
      </column>
      <column caption='HighLowSalesCF' datatype='string' name='[Calculation_810647945463685122]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Sales]&lt;300 THEN &quot;Low&quot; ELSE &quot;High&quot; END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
      <column caption='People (People)' datatype='string' name='[People]' role='dimension' type='nominal' />
      <column datatype='string' name='[Product Name (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Product Name]' default='&quot;Starts with C-Z&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Starts with A&quot;'>
            <value>&quot;Acco 3-Hole Punch, Clear&quot;</value>
            <value>&quot;Acco 3-Hole Punch, Durable&quot;</value>
            <value>&quot;Acco 3-Hole Punch, Economy&quot;</value>
            <value>&quot;Acco 3-Hole Punch, Recycled&quot;</value>
            <value>&quot;Acco Binder Covers, Clear&quot;</value>
            <value>&quot;Acco Binder Covers, Durable&quot;</value>
            <value>&quot;Acco Binder Covers, Economy&quot;</value>
            <value>&quot;Acco Binder Covers, Recycled&quot;</value>
            <value>&quot;Acco Binder, Clear&quot;</value>
            <value>&quot;Acco Binder, Durable&quot;</value>
            <value>&quot;Acco Binder, Economy&quot;</value>
            <value>&quot;Acco Binder, Recycled&quot;</value>
            <value>&quot;Acco Binding Machine, Clear&quot;</value>
            <value>&quot;Acco Binding Machine, Durable&quot;</value>
            <value>&quot;Acco Binding Machine, Economy&quot;</value>
            <value>&quot;Acco Binding Machine, Recycled&quot;</value>
            <value>&quot;Acco Hole Reinforcements, Clear&quot;</value>
            <value>&quot;Acco Hole Reinforcements, Durable&quot;</value>
            <value>&quot;Acco Hole Reinforcements, Economy&quot;</value>
            <value>&quot;Acco Hole Reinforcements, Recycled&quot;</value>
            <value>&quot;Acco Index Tab, Clear&quot;</value>
            <value>&quot;Acco Index Tab, Durable&quot;</value>
            <value>&quot;Acco Index Tab, Economy&quot;</value>
            <value>&quot;Accos Clamps, 12 Pack&quot;</value>
            <value>&quot;Accos Clamps, Assorted Sizes&quot;</value>
            <value>&quot;Accos Clamps, Bulk Pack&quot;</value>
            <value>&quot;Accos Clamps, Metal&quot;</value>
            <value>&quot;Accos Paper Clips, Assorted Sizes&quot;</value>
            <value>&quot;Accos Paper Clips, Bulk Pack&quot;</value>
            <value>&quot;Accos Paper Clips, Metal&quot;</value>
            <value>&quot;Accos Push Pins, 12 Pack&quot;</value>
            <value>&quot;Accos Push Pins, Assorted Sizes&quot;</value>
            <value>&quot;Accos Push Pins, Bulk Pack&quot;</value>
            <value>&quot;Accos Push Pins, Metal&quot;</value>
            <value>&quot;Accos Rubber Bands, 12 Pack&quot;</value>
            <value>&quot;Accos Rubber Bands, Assorted Sizes&quot;</value>
            <value>&quot;Accos Rubber Bands, Bulk Pack&quot;</value>
            <value>&quot;Accos Rubber Bands, Metal&quot;</value>
            <value>&quot;Accos Staples, 12 Pack&quot;</value>
            <value>&quot;Accos Staples, Assorted Sizes&quot;</value>
            <value>&quot;Accos Staples, Bulk Pack&quot;</value>
            <value>&quot;Accos Staples, Metal&quot;</value>
            <value>&quot;Accos Thumb Tacks, 12 Pack&quot;</value>
            <value>&quot;Accos Thumb Tacks, Assorted Sizes&quot;</value>
            <value>&quot;Accos Thumb Tacks, Bulk Pack&quot;</value>
            <value>&quot;Accos Thumb Tacks, Metal&quot;</value>
            <value>&quot;Acme Box Cutter, Easy Grip&quot;</value>
            <value>&quot;Acme Box Cutter, High Speed&quot;</value>
            <value>&quot;Acme Box Cutter, Serrated&quot;</value>
            <value>&quot;Acme Box Cutter, Steel&quot;</value>
            <value>&quot;Acme Letter Opener, Easy Grip&quot;</value>
            <value>&quot;Acme Letter Opener, High Speed&quot;</value>
            <value>&quot;Acme Letter Opener, Serrated&quot;</value>
            <value>&quot;Acme Letter Opener, Steel&quot;</value>
            <value>&quot;Acme Ruler, Easy Grip&quot;</value>
            <value>&quot;Acme Ruler, High Speed&quot;</value>
            <value>&quot;Acme Ruler, Serrated&quot;</value>
            <value>&quot;Acme Ruler, Steel&quot;</value>
            <value>&quot;Acme Scissors, Easy Grip&quot;</value>
            <value>&quot;Acme Scissors, High Speed&quot;</value>
            <value>&quot;Acme Scissors, Serrated&quot;</value>
            <value>&quot;Acme Scissors, Steel&quot;</value>
            <value>&quot;Acme Shears, Easy Grip&quot;</value>
            <value>&quot;Acme Shears, High Speed&quot;</value>
            <value>&quot;Acme Shears, Serrated&quot;</value>
            <value>&quot;Acme Shears, Steel&quot;</value>
            <value>&quot;Acme Trimmer, Easy Grip&quot;</value>
            <value>&quot;Acme Trimmer, High Speed&quot;</value>
            <value>&quot;Acme Trimmer, Serrated&quot;</value>
            <value>&quot;Acme Trimmer, Steel&quot;</value>
            <value>&quot;Advantus Clamps, 12 Pack&quot;</value>
            <value>&quot;Advantus Clamps, Assorted Sizes&quot;</value>
            <value>&quot;Advantus Clamps, Bulk Pack&quot;</value>
            <value>&quot;Advantus Clamps, Metal&quot;</value>
            <value>&quot;Advantus Clock, Black&quot;</value>
            <value>&quot;Advantus Clock, Duo Pack&quot;</value>
            <value>&quot;Advantus Clock, Durable&quot;</value>
            <value>&quot;Advantus Clock, Erganomic&quot;</value>
            <value>&quot;Advantus Door Stop, Black&quot;</value>
            <value>&quot;Advantus Door Stop, Duo Pack&quot;</value>
            <value>&quot;Advantus Door Stop, Durable&quot;</value>
            <value>&quot;Advantus Door Stop, Erganomic&quot;</value>
            <value>&quot;Advantus Frame, Black&quot;</value>
            <value>&quot;Advantus Frame, Duo Pack&quot;</value>
            <value>&quot;Advantus Frame, Durable&quot;</value>
            <value>&quot;Advantus Frame, Erganomic&quot;</value>
            <value>&quot;Advantus Light Bulb, Black&quot;</value>
            <value>&quot;Advantus Light Bulb, Duo Pack&quot;</value>
            <value>&quot;Advantus Light Bulb, Durable&quot;</value>
            <value>&quot;Advantus Light Bulb, Erganomic&quot;</value>
            <value>&quot;Advantus Paper Clips, Assorted Sizes&quot;</value>
            <value>&quot;Advantus Paper Clips, Bulk Pack&quot;</value>
            <value>&quot;Advantus Paper Clips, Metal&quot;</value>
            <value>&quot;Advantus Photo Frame, Black&quot;</value>
            <value>&quot;Advantus Photo Frame, Duo Pack&quot;</value>
            <value>&quot;Advantus Photo Frame, Durable&quot;</value>
            <value>&quot;Advantus Photo Frame, Erganomic&quot;</value>
            <value>&quot;Advantus Push Pins, Assorted Sizes&quot;</value>
            <value>&quot;Advantus Push Pins, Bulk Pack&quot;</value>
            <value>&quot;Advantus Rubber Bands, 12 Pack&quot;</value>
            <value>&quot;Advantus Rubber Bands, Assorted Sizes&quot;</value>
            <value>&quot;Advantus Rubber Bands, Bulk Pack&quot;</value>
            <value>&quot;Advantus Rubber Bands, Metal&quot;</value>
            <value>&quot;Advantus Stacking Tray, Black&quot;</value>
            <value>&quot;Advantus Stacking Tray, Durable&quot;</value>
            <value>&quot;Advantus Stacking Tray, Erganomic&quot;</value>
            <value>&quot;Advantus Staples, 12 Pack&quot;</value>
            <value>&quot;Advantus Staples, Assorted Sizes&quot;</value>
            <value>&quot;Advantus Staples, Bulk Pack&quot;</value>
            <value>&quot;Advantus Staples, Metal&quot;</value>
            <value>&quot;Advantus Thumb Tacks, 12 Pack&quot;</value>
            <value>&quot;Advantus Thumb Tacks, Assorted Sizes&quot;</value>
            <value>&quot;Advantus Thumb Tacks, Bulk Pack&quot;</value>
            <value>&quot;Advantus Thumb Tacks, Metal&quot;</value>
            <value>&quot;Ames Business Envelopes, Recycled&quot;</value>
            <value>&quot;Ames Business Envelopes, Security-Tint&quot;</value>
            <value>&quot;Ames Business Envelopes, Set of 50&quot;</value>
            <value>&quot;Ames Clasp Envelope, Recycled&quot;</value>
            <value>&quot;Ames Clasp Envelope, Security-Tint&quot;</value>
            <value>&quot;Ames Clasp Envelope, Set of 50&quot;</value>
            <value>&quot;Ames Clasp Envelope, with clear poly window&quot;</value>
            <value>&quot;Ames Interoffice Envelope, Recycled&quot;</value>
            <value>&quot;Ames Interoffice Envelope, Security-Tint&quot;</value>
            <value>&quot;Ames Interoffice Envelope, Set of 50&quot;</value>
            <value>&quot;Ames Interoffice Envelope, with clear poly window&quot;</value>
            <value>&quot;Ames Mailers, Recycled&quot;</value>
            <value>&quot;Ames Mailers, Security-Tint&quot;</value>
            <value>&quot;Ames Mailers, Set of 50&quot;</value>
            <value>&quot;Ames Mailers, with clear poly window&quot;</value>
            <value>&quot;Ames Manila Envelope, Recycled&quot;</value>
            <value>&quot;Ames Manila Envelope, Security-Tint&quot;</value>
            <value>&quot;Ames Manila Envelope, Set of 50&quot;</value>
            <value>&quot;Ames Peel and Seal, Recycled&quot;</value>
            <value>&quot;Ames Peel and Seal, Security-Tint&quot;</value>
            <value>&quot;Ames Peel and Seal, Set of 50&quot;</value>
            <value>&quot;Ames Peel and Seal, with clear poly window&quot;</value>
            <value>&quot;Apple Audio Dock, Cordless&quot;</value>
            <value>&quot;Apple Audio Dock, Full Size&quot;</value>
            <value>&quot;Apple Audio Dock, VoIP&quot;</value>
            <value>&quot;Apple Audio Dock, with Caller ID&quot;</value>
            <value>&quot;Apple Headset, Cordless&quot;</value>
            <value>&quot;Apple Headset, Full Size&quot;</value>
            <value>&quot;Apple Headset, VoIP&quot;</value>
            <value>&quot;Apple Headset, with Caller ID&quot;</value>
            <value>&quot;Apple Office Telephone, Cordless&quot;</value>
            <value>&quot;Apple Office Telephone, Full Size&quot;</value>
            <value>&quot;Apple Office Telephone, VoIP&quot;</value>
            <value>&quot;Apple Office Telephone, with Caller ID&quot;</value>
            <value>&quot;Apple Signal Booster, Cordless&quot;</value>
            <value>&quot;Apple Signal Booster, Full Size&quot;</value>
            <value>&quot;Apple Signal Booster, VoIP&quot;</value>
            <value>&quot;Apple Signal Booster, with Caller ID&quot;</value>
            <value>&quot;Apple Smart Phone, Cordless&quot;</value>
            <value>&quot;Apple Smart Phone, Full Size&quot;</value>
            <value>&quot;Apple Smart Phone, with Caller ID&quot;</value>
            <value>&quot;Apple Speaker Phone, Cordless&quot;</value>
            <value>&quot;Apple Speaker Phone, Full Size&quot;</value>
            <value>&quot;Apple Speaker Phone, VoIP&quot;</value>
            <value>&quot;Apple Speaker Phone, with Caller ID&quot;</value>
            <value>&quot;Avery 3-Hole Punch, Clear&quot;</value>
            <value>&quot;Avery 3-Hole Punch, Durable&quot;</value>
            <value>&quot;Avery 3-Hole Punch, Economy&quot;</value>
            <value>&quot;Avery 3-Hole Punch, Recycled&quot;</value>
            <value>&quot;Avery Binder Covers, Clear&quot;</value>
            <value>&quot;Avery Binder Covers, Durable&quot;</value>
            <value>&quot;Avery Binder Covers, Economy&quot;</value>
            <value>&quot;Avery Binder Covers, Recycled&quot;</value>
            <value>&quot;Avery Binder, Clear&quot;</value>
            <value>&quot;Avery Binder, Durable&quot;</value>
            <value>&quot;Avery Binder, Economy&quot;</value>
            <value>&quot;Avery Binder, Recycled&quot;</value>
            <value>&quot;Avery Binding Machine, Clear&quot;</value>
            <value>&quot;Avery Binding Machine, Durable&quot;</value>
            <value>&quot;Avery Binding Machine, Economy&quot;</value>
            <value>&quot;Avery Binding Machine, Recycled&quot;</value>
            <value>&quot;Avery Color Coded Labels, 5000 Label Set&quot;</value>
            <value>&quot;Avery Color Coded Labels, Adjustable&quot;</value>
            <value>&quot;Avery Color Coded Labels, Alphabetical&quot;</value>
            <value>&quot;Avery Color Coded Labels, Laser Printer Compatible&quot;</value>
            <value>&quot;Avery File Folder Labels, 5000 Label Set&quot;</value>
            <value>&quot;Avery File Folder Labels, Adjustable&quot;</value>
            <value>&quot;Avery File Folder Labels, Alphabetical&quot;</value>
            <value>&quot;Avery File Folder Labels, Laser Printer Compatible&quot;</value>
            <value>&quot;Avery Hole Reinforcements, Clear&quot;</value>
            <value>&quot;Avery Hole Reinforcements, Durable&quot;</value>
            <value>&quot;Avery Hole Reinforcements, Economy&quot;</value>
            <value>&quot;Avery Hole Reinforcements, Recycled&quot;</value>
            <value>&quot;Avery Index Tab, Clear&quot;</value>
            <value>&quot;Avery Index Tab, Durable&quot;</value>
            <value>&quot;Avery Index Tab, Economy&quot;</value>
            <value>&quot;Avery Legal Exhibit Labels, 5000 Label Set&quot;</value>
            <value>&quot;Avery Legal Exhibit Labels, Adjustable&quot;</value>
            <value>&quot;Avery Legal Exhibit Labels, Alphabetical&quot;</value>
            <value>&quot;Avery Legal Exhibit Labels, Laser Printer Compatible&quot;</value>
            <value>&quot;Avery Removable Labels, 5000 Label Set&quot;</value>
            <value>&quot;Avery Removable Labels, Adjustable&quot;</value>
            <value>&quot;Avery Removable Labels, Alphabetical&quot;</value>
            <value>&quot;Avery Removable Labels, Laser Printer Compatible&quot;</value>
            <value>&quot;Avery Round Labels, 5000 Label Set&quot;</value>
            <value>&quot;Avery Round Labels, Adjustable&quot;</value>
            <value>&quot;Avery Round Labels, Alphabetical&quot;</value>
            <value>&quot;Avery Round Labels, Laser Printer Compatible&quot;</value>
            <value>&quot;Avery Shipping Labels, 5000 Label Set&quot;</value>
            <value>&quot;Avery Shipping Labels, Adjustable&quot;</value>
            <value>&quot;Avery Shipping Labels, Alphabetical&quot;</value>
            <value>&quot;Avery Shipping Labels, Laser Printer Compatible&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Starts with B&quot;'>
            <value>&quot;Barricks Coffee Table, Adjustable Height&quot;</value>
            <value>&quot;Barricks Coffee Table, Fully Assembled&quot;</value>
            <value>&quot;Barricks Computer Table, Adjustable Height&quot;</value>
            <value>&quot;Barricks Conference Table, Adjustable Height&quot;</value>
            <value>&quot;Barricks Conference Table, Fully Assembled&quot;</value>
            <value>&quot;Barricks Conference Table, Rectangular&quot;</value>
            <value>&quot;Barricks Conference Table, with Bottom Storage&quot;</value>
            <value>&quot;Barricks Round Table, Adjustable Height&quot;</value>
            <value>&quot;Barricks Round Table, Rectangular&quot;</value>
            <value>&quot;Barricks Round Table, with Bottom Storage&quot;</value>
            <value>&quot;Barricks Training Table, Fully Assembled&quot;</value>
            <value>&quot;Barricks Training Table, Rectangular&quot;</value>
            <value>&quot;Barricks Training Table, with Bottom Storage&quot;</value>
            <value>&quot;Barricks Wood Table, Adjustable Height&quot;</value>
            <value>&quot;Belkin Flash Drive, Bluetooth&quot;</value>
            <value>&quot;Belkin Flash Drive, Erganomic&quot;</value>
            <value>&quot;Belkin Flash Drive, Programmable&quot;</value>
            <value>&quot;Belkin Flash Drive, USB&quot;</value>
            <value>&quot;Belkin Keyboard, Bluetooth&quot;</value>
            <value>&quot;Belkin Keyboard, Erganomic&quot;</value>
            <value>&quot;Belkin Keyboard, Programmable&quot;</value>
            <value>&quot;Belkin Keyboard, USB&quot;</value>
            <value>&quot;Belkin Memory Card, Bluetooth&quot;</value>
            <value>&quot;Belkin Memory Card, Erganomic&quot;</value>
            <value>&quot;Belkin Memory Card, Programmable&quot;</value>
            <value>&quot;Belkin Memory Card, USB&quot;</value>
            <value>&quot;Belkin Mouse, Bluetooth&quot;</value>
            <value>&quot;Belkin Mouse, Erganomic&quot;</value>
            <value>&quot;Belkin Mouse, Programmable&quot;</value>
            <value>&quot;Belkin Mouse, USB&quot;</value>
            <value>&quot;Belkin Numeric Keypad, Bluetooth&quot;</value>
            <value>&quot;Belkin Numeric Keypad, Erganomic&quot;</value>
            <value>&quot;Belkin Numeric Keypad, USB&quot;</value>
            <value>&quot;Belkin Router, Bluetooth&quot;</value>
            <value>&quot;Belkin Router, Erganomic&quot;</value>
            <value>&quot;Belkin Router, Programmable&quot;</value>
            <value>&quot;Belkin Router, USB&quot;</value>
            <value>&quot;Bevis Coffee Table, Fully Assembled&quot;</value>
            <value>&quot;Bevis Coffee Table, Rectangular&quot;</value>
            <value>&quot;Bevis Coffee Table, with Bottom Storage&quot;</value>
            <value>&quot;Bevis Computer Table, Fully Assembled&quot;</value>
            <value>&quot;Bevis Computer Table, with Bottom Storage&quot;</value>
            <value>&quot;Bevis Conference Table, Fully Assembled&quot;</value>
            <value>&quot;Bevis Conference Table, with Bottom Storage&quot;</value>
            <value>&quot;Bevis Round Table, Adjustable Height&quot;</value>
            <value>&quot;Bevis Round Table, with Bottom Storage&quot;</value>
            <value>&quot;Bevis Training Table, Adjustable Height&quot;</value>
            <value>&quot;Bevis Training Table, Rectangular&quot;</value>
            <value>&quot;Bevis Training Table, with Bottom Storage&quot;</value>
            <value>&quot;Bevis Wood Table, Rectangular&quot;</value>
            <value>&quot;BIC Canvas, Blue&quot;</value>
            <value>&quot;BIC Canvas, Easy-Erase&quot;</value>
            <value>&quot;BIC Canvas, Fluorescent&quot;</value>
            <value>&quot;BIC Canvas, Water Color&quot;</value>
            <value>&quot;BIC Highlighters, Blue&quot;</value>
            <value>&quot;BIC Highlighters, Easy-Erase&quot;</value>
            <value>&quot;BIC Highlighters, Fluorescent&quot;</value>
            <value>&quot;BIC Highlighters, Water Color&quot;</value>
            <value>&quot;BIC Markers, Blue&quot;</value>
            <value>&quot;BIC Markers, Easy-Erase&quot;</value>
            <value>&quot;BIC Markers, Fluorescent&quot;</value>
            <value>&quot;BIC Markers, Water Color&quot;</value>
            <value>&quot;BIC Pencil Sharpener, Blue&quot;</value>
            <value>&quot;BIC Pencil Sharpener, Easy-Erase&quot;</value>
            <value>&quot;BIC Pencil Sharpener, Fluorescent&quot;</value>
            <value>&quot;BIC Pencil Sharpener, Water Color&quot;</value>
            <value>&quot;BIC Pens, Blue&quot;</value>
            <value>&quot;BIC Pens, Easy-Erase&quot;</value>
            <value>&quot;BIC Pens, Fluorescent&quot;</value>
            <value>&quot;BIC Pens, Water Color&quot;</value>
            <value>&quot;BIC Sketch Pad, Blue&quot;</value>
            <value>&quot;BIC Sketch Pad, Easy-Erase&quot;</value>
            <value>&quot;BIC Sketch Pad, Fluorescent&quot;</value>
            <value>&quot;BIC Sketch Pad, Water Color&quot;</value>
            <value>&quot;Binney &amp; Smith Canvas, Blue&quot;</value>
            <value>&quot;Binney &amp; Smith Canvas, Easy-Erase&quot;</value>
            <value>&quot;Binney &amp; Smith Canvas, Fluorescent&quot;</value>
            <value>&quot;Binney &amp; Smith Canvas, Water Color&quot;</value>
            <value>&quot;Binney &amp; Smith Highlighters, Blue&quot;</value>
            <value>&quot;Binney &amp; Smith Highlighters, Easy-Erase&quot;</value>
            <value>&quot;Binney &amp; Smith Highlighters, Fluorescent&quot;</value>
            <value>&quot;Binney &amp; Smith Highlighters, Water Color&quot;</value>
            <value>&quot;Binney &amp; Smith Markers, Blue&quot;</value>
            <value>&quot;Binney &amp; Smith Markers, Easy-Erase&quot;</value>
            <value>&quot;Binney &amp; Smith Markers, Fluorescent&quot;</value>
            <value>&quot;Binney &amp; Smith Markers, Water Color&quot;</value>
            <value>&quot;Binney &amp; Smith Pencil Sharpener, Easy-Erase&quot;</value>
            <value>&quot;Binney &amp; Smith Pencil Sharpener, Fluorescent&quot;</value>
            <value>&quot;Binney &amp; Smith Pencil Sharpener, Water Color&quot;</value>
            <value>&quot;Binney &amp; Smith Pens, Blue&quot;</value>
            <value>&quot;Binney &amp; Smith Pens, Easy-Erase&quot;</value>
            <value>&quot;Binney &amp; Smith Pens, Fluorescent&quot;</value>
            <value>&quot;Binney &amp; Smith Pens, Water Color&quot;</value>
            <value>&quot;Binney &amp; Smith Sketch Pad, Blue&quot;</value>
            <value>&quot;Binney &amp; Smith Sketch Pad, Easy-Erase&quot;</value>
            <value>&quot;Binney &amp; Smith Sketch Pad, Fluorescent&quot;</value>
            <value>&quot;Binney &amp; Smith Sketch Pad, Water Color&quot;</value>
            <value>&quot;Boston Canvas, Blue&quot;</value>
            <value>&quot;Boston Canvas, Easy-Erase&quot;</value>
            <value>&quot;Boston Canvas, Fluorescent&quot;</value>
            <value>&quot;Boston Canvas, Water Color&quot;</value>
            <value>&quot;Boston Highlighters, Blue&quot;</value>
            <value>&quot;Boston Highlighters, Easy-Erase&quot;</value>
            <value>&quot;Boston Highlighters, Fluorescent&quot;</value>
            <value>&quot;Boston Highlighters, Water Color&quot;</value>
            <value>&quot;Boston Markers, Blue&quot;</value>
            <value>&quot;Boston Markers, Easy-Erase&quot;</value>
            <value>&quot;Boston Markers, Fluorescent&quot;</value>
            <value>&quot;Boston Markers, Water Color&quot;</value>
            <value>&quot;Boston Pencil Sharpener, Easy-Erase&quot;</value>
            <value>&quot;Boston Pencil Sharpener, Fluorescent&quot;</value>
            <value>&quot;Boston Pencil Sharpener, Water Color&quot;</value>
            <value>&quot;Boston Pens, Blue&quot;</value>
            <value>&quot;Boston Pens, Easy-Erase&quot;</value>
            <value>&quot;Boston Pens, Fluorescent&quot;</value>
            <value>&quot;Boston Pens, Water Color&quot;</value>
            <value>&quot;Boston Sketch Pad, Blue&quot;</value>
            <value>&quot;Boston Sketch Pad, Easy-Erase&quot;</value>
            <value>&quot;Boston Sketch Pad, Fluorescent&quot;</value>
            <value>&quot;Boston Sketch Pad, Water Color&quot;</value>
            <value>&quot;Breville Blender, Black&quot;</value>
            <value>&quot;Breville Blender, White&quot;</value>
            <value>&quot;Breville Coffee Grinder, Black&quot;</value>
            <value>&quot;Breville Coffee Grinder, Silver&quot;</value>
            <value>&quot;Breville Coffee Grinder, White&quot;</value>
            <value>&quot;Breville Microwave, Black&quot;</value>
            <value>&quot;Breville Microwave, Red&quot;</value>
            <value>&quot;Breville Microwave, Silver&quot;</value>
            <value>&quot;Breville Microwave, White&quot;</value>
            <value>&quot;Breville Refrigerator, Black&quot;</value>
            <value>&quot;Breville Refrigerator, Red&quot;</value>
            <value>&quot;Breville Refrigerator, Silver&quot;</value>
            <value>&quot;Breville Refrigerator, White&quot;</value>
            <value>&quot;Breville Stove, Black&quot;</value>
            <value>&quot;Breville Stove, Red&quot;</value>
            <value>&quot;Breville Stove, Silver&quot;</value>
            <value>&quot;Breville Stove, White&quot;</value>
            <value>&quot;Breville Toaster, Black&quot;</value>
            <value>&quot;Breville Toaster, Red&quot;</value>
            <value>&quot;Breville Toaster, Silver&quot;</value>
            <value>&quot;Brother Copy Machine, Color&quot;</value>
            <value>&quot;Brother Copy Machine, High-Speed&quot;</value>
            <value>&quot;Brother Copy Machine, Laser&quot;</value>
            <value>&quot;Brother Fax and Copier, Color&quot;</value>
            <value>&quot;Brother Fax and Copier, Digital&quot;</value>
            <value>&quot;Brother Fax and Copier, High-Speed&quot;</value>
            <value>&quot;Brother Fax and Copier, Laser&quot;</value>
            <value>&quot;Brother Fax Machine, Color&quot;</value>
            <value>&quot;Brother Fax Machine, Digital&quot;</value>
            <value>&quot;Brother Fax Machine, High-Speed&quot;</value>
            <value>&quot;Brother Fax Machine, Laser&quot;</value>
            <value>&quot;Brother Ink, Color&quot;</value>
            <value>&quot;Brother Ink, Digital&quot;</value>
            <value>&quot;Brother Ink, High-Speed&quot;</value>
            <value>&quot;Brother Ink, Laser&quot;</value>
            <value>&quot;Brother Personal Copier, Digital&quot;</value>
            <value>&quot;Brother Personal Copier, High-Speed&quot;</value>
            <value>&quot;Brother Personal Copier, Laser&quot;</value>
            <value>&quot;Brother Wireless Fax, Color&quot;</value>
            <value>&quot;Brother Wireless Fax, Digital&quot;</value>
            <value>&quot;Brother Wireless Fax, High-Speed&quot;</value>
            <value>&quot;Brother Wireless Fax, Laser&quot;</value>
            <value>&quot;Bush 3-Shelf Cabinet, Metal&quot;</value>
            <value>&quot;Bush 3-Shelf Cabinet, Mobile&quot;</value>
            <value>&quot;Bush 3-Shelf Cabinet, Pine&quot;</value>
            <value>&quot;Bush 3-Shelf Cabinet, Traditional&quot;</value>
            <value>&quot;Bush Classic Bookcase, Metal&quot;</value>
            <value>&quot;Bush Classic Bookcase, Mobile&quot;</value>
            <value>&quot;Bush Classic Bookcase, Pine&quot;</value>
            <value>&quot;Bush Classic Bookcase, Traditional&quot;</value>
            <value>&quot;Bush Corner Shelving, Metal&quot;</value>
            <value>&quot;Bush Corner Shelving, Mobile&quot;</value>
            <value>&quot;Bush Corner Shelving, Pine&quot;</value>
            <value>&quot;Bush Corner Shelving, Traditional&quot;</value>
            <value>&quot;Bush Floating Shelf Set, Metal&quot;</value>
            <value>&quot;Bush Floating Shelf Set, Mobile&quot;</value>
            <value>&quot;Bush Floating Shelf Set, Pine&quot;</value>
            <value>&quot;Bush Floating Shelf Set, Traditional&quot;</value>
            <value>&quot;Bush Library with Doors, Metal&quot;</value>
            <value>&quot;Bush Library with Doors, Mobile&quot;</value>
            <value>&quot;Bush Library with Doors, Pine&quot;</value>
            <value>&quot;Bush Library with Doors, Traditional&quot;</value>
            <value>&quot;Bush Stackable Bookrack, Mobile&quot;</value>
            <value>&quot;Bush Stackable Bookrack, Pine&quot;</value>
            <value>&quot;Bush Stackable Bookrack, Traditional&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Product Name (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Product Name]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Binder&quot;'>
            <value>&quot;Acco Binder Covers, Clear&quot;</value>
            <value>&quot;Acco Binder Covers, Durable&quot;</value>
            <value>&quot;Acco Binder Covers, Economy&quot;</value>
            <value>&quot;Acco Binder Covers, Recycled&quot;</value>
            <value>&quot;Acco Binder, Clear&quot;</value>
            <value>&quot;Acco Binder, Durable&quot;</value>
            <value>&quot;Acco Binder, Economy&quot;</value>
            <value>&quot;Acco Binder, Recycled&quot;</value>
            <value>&quot;Avery Binder Covers, Clear&quot;</value>
            <value>&quot;Avery Binder Covers, Durable&quot;</value>
            <value>&quot;Avery Binder Covers, Economy&quot;</value>
            <value>&quot;Avery Binder Covers, Recycled&quot;</value>
            <value>&quot;Avery Binder, Clear&quot;</value>
            <value>&quot;Avery Binder, Durable&quot;</value>
            <value>&quot;Avery Binder, Economy&quot;</value>
            <value>&quot;Avery Binder, Recycled&quot;</value>
            <value>&quot;Cardinal Binder Covers, Clear&quot;</value>
            <value>&quot;Cardinal Binder Covers, Durable&quot;</value>
            <value>&quot;Cardinal Binder Covers, Economy&quot;</value>
            <value>&quot;Cardinal Binder Covers, Recycled&quot;</value>
            <value>&quot;Cardinal Binder, Clear&quot;</value>
            <value>&quot;Cardinal Binder, Durable&quot;</value>
            <value>&quot;Cardinal Binder, Economy&quot;</value>
            <value>&quot;Cardinal Binder, Recycled&quot;</value>
            <value>&quot;Ibico Binder Covers, Clear&quot;</value>
            <value>&quot;Ibico Binder Covers, Durable&quot;</value>
            <value>&quot;Ibico Binder Covers, Economy&quot;</value>
            <value>&quot;Ibico Binder Covers, Recycled&quot;</value>
            <value>&quot;Ibico Binder, Clear&quot;</value>
            <value>&quot;Ibico Binder, Durable&quot;</value>
            <value>&quot;Ibico Binder, Economy&quot;</value>
            <value>&quot;Ibico Binder, Recycled&quot;</value>
            <value>&quot;Wilson Jones Binder Covers, Clear&quot;</value>
            <value>&quot;Wilson Jones Binder Covers, Durable&quot;</value>
            <value>&quot;Wilson Jones Binder Covers, Economy&quot;</value>
            <value>&quot;Wilson Jones Binder Covers, Recycled&quot;</value>
            <value>&quot;Wilson Jones Binder, Clear&quot;</value>
            <value>&quot;Wilson Jones Binder, Durable&quot;</value>
            <value>&quot;Wilson Jones Binder, Economy&quot;</value>
            <value>&quot;Wilson Jones Binder, Recycled&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Punch&quot;'>
            <value>&quot;Acco 3-Hole Punch, Clear&quot;</value>
            <value>&quot;Acco 3-Hole Punch, Durable&quot;</value>
            <value>&quot;Acco 3-Hole Punch, Economy&quot;</value>
            <value>&quot;Acco 3-Hole Punch, Recycled&quot;</value>
            <value>&quot;Avery 3-Hole Punch, Clear&quot;</value>
            <value>&quot;Avery 3-Hole Punch, Durable&quot;</value>
            <value>&quot;Avery 3-Hole Punch, Economy&quot;</value>
            <value>&quot;Avery 3-Hole Punch, Recycled&quot;</value>
            <value>&quot;Cardinal 3-Hole Punch, Clear&quot;</value>
            <value>&quot;Cardinal 3-Hole Punch, Durable&quot;</value>
            <value>&quot;Cardinal 3-Hole Punch, Economy&quot;</value>
            <value>&quot;Cardinal 3-Hole Punch, Recycled&quot;</value>
            <value>&quot;Ibico 3-Hole Punch, Clear&quot;</value>
            <value>&quot;Ibico 3-Hole Punch, Durable&quot;</value>
            <value>&quot;Ibico 3-Hole Punch, Economy&quot;</value>
            <value>&quot;Ibico 3-Hole Punch, Recycled&quot;</value>
            <value>&quot;Wilson Jones 3-Hole Punch, Clear&quot;</value>
            <value>&quot;Wilson Jones 3-Hole Punch, Durable&quot;</value>
            <value>&quot;Wilson Jones 3-Hole Punch, Economy&quot;</value>
            <value>&quot;Wilson Jones 3-Hole Punch, Recycled&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Product Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Product Name]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Clock&quot;'>
            <value>&quot;Advantus Clock, Black&quot;</value>
            <value>&quot;Advantus Clock, Duo Pack&quot;</value>
            <value>&quot;Advantus Clock, Durable&quot;</value>
            <value>&quot;Advantus Clock, Erganomic&quot;</value>
            <value>&quot;Deflect-O Clock, Black&quot;</value>
            <value>&quot;Deflect-O Clock, Duo Pack&quot;</value>
            <value>&quot;Deflect-O Clock, Durable&quot;</value>
            <value>&quot;Deflect-O Clock, Erganomic&quot;</value>
            <value>&quot;Eldon Clock, Black&quot;</value>
            <value>&quot;Eldon Clock, Duo Pack&quot;</value>
            <value>&quot;Eldon Clock, Durable&quot;</value>
            <value>&quot;Eldon Clock, Erganomic&quot;</value>
            <value>&quot;Rubbermaid Clock, Black&quot;</value>
            <value>&quot;Rubbermaid Clock, Duo Pack&quot;</value>
            <value>&quot;Rubbermaid Clock, Durable&quot;</value>
            <value>&quot;Rubbermaid Clock, Erganomic&quot;</value>
            <value>&quot;Tenex Clock, Black&quot;</value>
            <value>&quot;Tenex Clock, Duo Pack&quot;</value>
            <value>&quot;Tenex Clock, Durable&quot;</value>
            <value>&quot;Tenex Clock, Erganomic&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Letter&quot;'>
            <value>&quot;Acme Letter Opener, Easy Grip&quot;</value>
            <value>&quot;Acme Letter Opener, High Speed&quot;</value>
            <value>&quot;Acme Letter Opener, Serrated&quot;</value>
            <value>&quot;Acme Letter Opener, Steel&quot;</value>
            <value>&quot;Elite Letter Opener, Easy Grip&quot;</value>
            <value>&quot;Elite Letter Opener, High Speed&quot;</value>
            <value>&quot;Elite Letter Opener, Steel&quot;</value>
            <value>&quot;Fiskars Letter Opener, Easy Grip&quot;</value>
            <value>&quot;Fiskars Letter Opener, High Speed&quot;</value>
            <value>&quot;Fiskars Letter Opener, Steel&quot;</value>
            <value>&quot;Kleencut Letter Opener, Easy Grip&quot;</value>
            <value>&quot;Kleencut Letter Opener, High Speed&quot;</value>
            <value>&quot;Kleencut Letter Opener, Steel&quot;</value>
            <value>&quot;Stiletto Letter Opener, Easy Grip&quot;</value>
            <value>&quot;Stiletto Letter Opener, High Speed&quot;</value>
            <value>&quot;Stiletto Letter Opener, Steel&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Trimmer&quot;'>
            <value>&quot;Acme Trimmer, Easy Grip&quot;</value>
            <value>&quot;Acme Trimmer, High Speed&quot;</value>
            <value>&quot;Acme Trimmer, Serrated&quot;</value>
            <value>&quot;Acme Trimmer, Steel&quot;</value>
            <value>&quot;Elite Trimmer, Easy Grip&quot;</value>
            <value>&quot;Elite Trimmer, High Speed&quot;</value>
            <value>&quot;Elite Trimmer, Serrated&quot;</value>
            <value>&quot;Elite Trimmer, Steel&quot;</value>
            <value>&quot;Fiskars Trimmer, Easy Grip&quot;</value>
            <value>&quot;Fiskars Trimmer, High Speed&quot;</value>
            <value>&quot;Fiskars Trimmer, Serrated&quot;</value>
            <value>&quot;Fiskars Trimmer, Steel&quot;</value>
            <value>&quot;Kleencut Trimmer, Easy Grip&quot;</value>
            <value>&quot;Kleencut Trimmer, High Speed&quot;</value>
            <value>&quot;Kleencut Trimmer, Serrated&quot;</value>
            <value>&quot;Kleencut Trimmer, Steel&quot;</value>
            <value>&quot;Stiletto Trimmer, Easy Grip&quot;</value>
            <value>&quot;Stiletto Trimmer, High Speed&quot;</value>
            <value>&quot;Stiletto Trimmer, Serrated&quot;</value>
            <value>&quot;Stiletto Trimmer, Steel&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Sales (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sales]' default='&quot;above 6&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;2 to 6&quot;'>
            <value>2.9550000000000001</value>
            <value>3.3299999999999996</value>
            <value>3.9900000000000002</value>
            <value>4.0800000000000001</value>
            <value>4.2450000000000001</value>
            <value>4.4550000000000001</value>
            <value>4.5</value>
            <value>4.5300000000000011</value>
            <value>4.5600000000000005</value>
            <value>4.6500000000000004</value>
            <value>4.8000000000000007</value>
            <value>4.8900000000000006</value>
            <value>5.0250000000000004</value>
            <value>5.04</value>
            <value>5.085</value>
            <value>5.5949999999999998</value>
            <value>5.7000000000000002</value>
            <value>5.7450000000000001</value>
            <value>5.9100000000000001</value>
            <value>6.0</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sales (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sales]' default='&quot;greater than 10&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;less than 10&quot;'>
            <value>2.9550000000000001</value>
            <value>3.3299999999999996</value>
            <value>3.9900000000000002</value>
            <value>4.0800000000000001</value>
            <value>4.2450000000000001</value>
            <value>4.4550000000000001</value>
            <value>4.5</value>
            <value>4.5300000000000011</value>
            <value>4.5600000000000005</value>
            <value>4.6500000000000004</value>
            <value>4.8000000000000007</value>
            <value>4.8900000000000006</value>
            <value>5.0250000000000004</value>
            <value>5.04</value>
            <value>5.085</value>
            <value>5.5949999999999998</value>
            <value>5.7000000000000002</value>
            <value>5.7450000000000001</value>
            <value>5.9100000000000001</value>
            <value>6.0</value>
            <value>6.2699999999999996</value>
            <value>6.3179999999999996</value>
            <value>6.4499999999999993</value>
            <value>6.4800000000000004</value>
            <value>6.5099999999999998</value>
            <value>6.5700000000000003</value>
            <value>6.6299999999999999</value>
            <value>6.6599999999999993</value>
            <value>6.6600000000000001</value>
            <value>6.6899999999999995</value>
            <value>6.7199999999999989</value>
            <value>6.8100000000000005</value>
            <value>6.8400000000000007</value>
            <value>6.8550000000000004</value>
            <value>6.9299999999999997</value>
            <value>7.0500000000000007</value>
            <value>7.2149999999999999</value>
            <value>7.2599999999999998</value>
            <value>7.3350000000000009</value>
            <value>7.4789999999999992</value>
            <value>7.5600000000000005</value>
            <value>7.6200000000000001</value>
            <value>7.7850000000000001</value>
            <value>7.8719999999999999</value>
            <value>7.8749999999999982</value>
            <value>7.9800000000000004</value>
            <value>8.0100000000000016</value>
            <value>8.0249999999999986</value>
            <value>8.0399999999999991</value>
            <value>8.0700000000000003</value>
            <value>8.1600000000000001</value>
            <value>8.25</value>
            <value>8.3100000000000005</value>
            <value>8.3399999999999999</value>
            <value>8.343</value>
            <value>8.370000000000001</value>
            <value>8.5500000000000007</value>
            <value>8.6400000000000006</value>
            <value>8.6999999999999993</value>
            <value>8.7599999999999998</value>
            <value>8.8200000000000003</value>
            <value>8.8500000000000014</value>
            <value>8.8559999999999999</value>
            <value>8.9100000000000001</value>
            <value>8.9399999999999977</value>
            <value>8.9849999999999994</value>
            <value>9.0</value>
            <value>9.0450000000000017</value>
            <value>9.0600000000000023</value>
            <value>9.120000000000001</value>
            <value>9.1349999999999998</value>
            <value>9.2339999999999982</value>
            <value>9.3299999999999983</value>
            <value>9.3419999999999987</value>
            <value>9.4500000000000011</value>
            <value>9.495000000000001</value>
            <value>9.5099999999999998</value>
            <value>9.5400000000000009</value>
            <value>9.6000000000000014</value>
            <value>9.6750000000000007</value>
            <value>9.6929999999999996</value>
            <value>9.7050000000000018</value>
            <value>9.7200000000000006</value>
            <value>9.7800000000000011</value>
            <value>9.870000000000001</value>
            <value>9.8849999999999998</value>
            <value>9.8999999999999986</value>
          </bin>
        </calculation>
      </column>
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_3CE1191D3F724472840A035A8FFD3264]' role='measure' type='quantitative' />
      <column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_B033A29162DE4EE6B89D233817595093]' role='measure' type='quantitative' />
      <column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_E67E1A2D227E4114A939FFE6191FC946]' role='measure' type='quantitative' />
      <column-instance column='[Positive Set]' derivation='InOut' name='[io:Positive Set:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_810647945463685122]' derivation='None' name='[none:Calculation_810647945463685122:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <group caption='Fixed Set' name='[Fixed Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Accessories&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Art&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Phones&quot;' />
        </groupfilter>
      </group>
      <group caption='Positive Set' name='[Positive Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='SUM([Profit]) &gt;= 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Sub-Category]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='Combined Set' delimiter=',' name='[Set 1]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[Fixed Set]' function='reference' />
          <groupfilter field='[Sub-Category Set]' function='reference' />
        </groupfilter>
      </group>
      <group caption='Sub-Category Set' name='[Sub-Category Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='3' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Sub-Category]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Region'>
          <field>[Region]</field>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/FACULT~1/AppData/Local/Temp/TableauTemp/#TableauTemp_046y5r11oa984x1f09wo31o8azen.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/23/2025 04:09:50 AM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='Orders_3CE1191D3F724472840A035A8FFD3264' table='[Extract].[Orders_3CE1191D3F724472840A035A8FFD3264]' type='table' />
            <relation name='People_B033A29162DE4EE6B89D233817595093' table='[Extract].[People_B033A29162DE4EE6B89D233817595093]' type='table' />
            <relation name='Returns_E67E1A2D227E4114A939FFE6191FC946' table='[Extract].[Returns_E67E1A2D227E4114A939FFE6191FC946]' type='table' />
          </relation>
          <cols>
            <map key='[Category]' value='[Orders_3CE1191D3F724472840A035A8FFD3264].[Category]' />
            <map key='[City]' value='[Orders_3CE1191D3F724472840A035A8FFD3264].[City]' />
            <map key='[Country]' value='[Orders_3CE1191D3F724472840A035A8FFD3264].[Country]' />
            <map key='[Customer ID]' value='[Orders_3CE1191D3F724472840A035A8FFD3264].[Customer ID]' />
            <map key='[Customer Name]' value='[Orders_3CE1191D3F724472840A035A8FFD3264].[Customer Name]' />
            <map key='[Discount]' value='[Orders_3CE1191D3F724472840A035A8FFD3264].[Discount]' />
            <map key='[Order Date]' value='[Orders_3CE1191D3F724472840A035A8FFD3264].[Order Date]' />
            <map key='[Order ID (Returns)]' value='[Returns_E67E1A2D227E4114A939FFE6191FC946].[Order ID]' />
            <map key='[Order ID]' value='[Orders_3CE1191D3F724472840A035A8FFD3264].[Order ID]' />
            <map key='[People]' value='[People_B033A29162DE4EE6B89D233817595093].[People]' />
            <map key='[Product ID]' value='[Orders_3CE1191D3F724472840A035A8FFD3264].[Product ID]' />
            <map key='[Product Name]' value='[Orders_3CE1191D3F724472840A035A8FFD3264].[Product Name]' />
            <map key='[Profit]' value='[Orders_3CE1191D3F724472840A035A8FFD3264].[Profit]' />
            <map key='[Quantity]' value='[Orders_3CE1191D3F724472840A035A8FFD3264].[Quantity]' />
            <map key='[Region (People)]' value='[People_B033A29162DE4EE6B89D233817595093].[Region]' />
            <map key='[Region]' value='[Orders_3CE1191D3F724472840A035A8FFD3264].[Region]' />
            <map key='[Returned]' value='[Returns_E67E1A2D227E4114A939FFE6191FC946].[Returned]' />
            <map key='[Row ID]' value='[Orders_3CE1191D3F724472840A035A8FFD3264].[Row ID]' />
            <map key='[Sales]' value='[Orders_3CE1191D3F724472840A035A8FFD3264].[Sales]' />
            <map key='[Segment]' value='[Orders_3CE1191D3F724472840A035A8FFD3264].[Segment]' />
            <map key='[Ship Date]' value='[Orders_3CE1191D3F724472840A035A8FFD3264].[Ship Date]' />
            <map key='[Ship Mode]' value='[Orders_3CE1191D3F724472840A035A8FFD3264].[Ship Mode]' />
            <map key='[State]' value='[Orders_3CE1191D3F724472840A035A8FFD3264].[State]' />
            <map key='[Sub-Category]' value='[Orders_3CE1191D3F724472840A035A8FFD3264].[Sub-Category]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Orders_3CE1191D3F724472840A035A8FFD3264]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10000</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Orders_3CE1191D3F724472840A035A8FFD3264]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3220</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Orders_3CE1191D3F724472840A035A8FFD3264]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1400</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Orders_3CE1191D3F724472840A035A8FFD3264]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1577</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Orders_3CE1191D3F724472840A035A8FFD3264]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Orders_3CE1191D3F724472840A035A8FFD3264]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1098</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Orders_3CE1191D3F724472840A035A8FFD3264]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1098</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Orders_3CE1191D3F724472840A035A8FFD3264]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Orders_3CE1191D3F724472840A035A8FFD3264]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1050</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Orders_3CE1191D3F724472840A035A8FFD3264]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>123</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Orders_3CE1191D3F724472840A035A8FFD3264]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Orders_3CE1191D3F724472840A035A8FFD3264]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Orders_3CE1191D3F724472840A035A8FFD3264]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2015</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Orders_3CE1191D3F724472840A035A8FFD3264]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Orders_3CE1191D3F724472840A035A8FFD3264]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Orders_3CE1191D3F724472840A035A8FFD3264]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1956</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Orders_3CE1191D3F724472840A035A8FFD3264]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3784</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Orders_3CE1191D3F724472840A035A8FFD3264]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Orders_3CE1191D3F724472840A035A8FFD3264]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Orders_3CE1191D3F724472840A035A8FFD3264]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3215</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_3CE1191D3F724472840A035A8FFD3264]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region (People)]</local-name>
              <parent-name>[People_B033A29162DE4EE6B89D233817595093]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>20</ordinal>
              <family>People</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[People_B033A29162DE4EE6B89D233817595093]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>People</remote-name>
              <remote-type>129</remote-type>
              <local-name>[People]</local-name>
              <parent-name>[People_B033A29162DE4EE6B89D233817595093]</parent-name>
              <remote-alias>People</remote-alias>
              <ordinal>21</ordinal>
              <family>People</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[People_B033A29162DE4EE6B89D233817595093]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID (Returns)]</local-name>
              <parent-name>[Returns_E67E1A2D227E4114A939FFE6191FC946]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>22</ordinal>
              <family>Returns</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>284</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Returns_E67E1A2D227E4114A939FFE6191FC946]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Returned</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Returned]</local-name>
              <parent-name>[Returns_E67E1A2D227E4114A939FFE6191FC946]</parent-name>
              <remote-alias>Returned</remote-alias>
              <ordinal>23</ordinal>
              <family>Returns</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Returns_E67E1A2D227E4114A939FFE6191FC946]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[io:Positive Set:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>true</bucket>
            </map>
            <map to='#e15759'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_810647945463685122:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;High&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Low&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Enter Any Amount' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5000.'>
          <calculation class='tableau' formula='5000.' />
        </column>
        <column caption='Select Measure' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
          <calculation class='tableau' formula='&quot;Sales&quot;' />
        </column>
      </datasource-dependencies>
      <filter class='categorical' column='[Customer ID]' filter-group='2'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Customer ID]' member='&quot;AA-10315&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AA-10375&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AA-10480&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AA-10645&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AB-10015&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AB-10060&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AB-10105&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AB-10150&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AB-10165&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AB-10255&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AB-10600&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AC-10420&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AC-10450&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AC-10615&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AC-10660&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AD-10180&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AF-10870&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AF-10885&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AG-10270&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AG-10300&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AG-10330&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AG-10390&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AG-10495&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AG-10525&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AG-10675&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AG-10765&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AG-10900&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AH-10030&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AH-10075&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AH-10120&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AH-10195&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AH-10210&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AH-10465&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AH-10585&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AH-10690&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AI-10855&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AJ-10780&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AJ-10795&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AJ-10945&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AJ-10960&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AM-10360&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AM-10705&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AO-10810&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AP-10720&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AP-10915&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AR-10345&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AR-10405&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AR-10510&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AR-10540&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AR-10570&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AR-10825&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AS-10045&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AS-10090&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AS-10135&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AS-10225&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AS-10240&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AS-10285&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AS-10630&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AT-10435&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AT-10735&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AW-10840&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AW-10930&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AY-10555&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;AZ-10750&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BB-10990&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BB-11545&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BC-11125&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BD-11320&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BD-11500&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BD-11560&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BD-11605&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BD-11620&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BD-11635&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BD-11725&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BD-11770&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BE-11335&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BE-11410&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BE-11455&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BF-10975&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BF-11005&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BF-11020&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BF-11080&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BF-11170&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BF-11215&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BF-11275&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BG-11035&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BG-11695&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BG-11740&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BH-11710&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BK-11260&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BM-11140&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BM-11575&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BM-11650&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BM-11785&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BN-11470&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BN-11515&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BO-11350&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BO-11425&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BP-11050&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BP-11095&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BP-11155&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BP-11185&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BP-11230&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BP-11290&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BS-11365&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BS-11380&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BS-11590&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BS-11665&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BS-11755&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BS-11800&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BT-11305&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BT-11395&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BT-11440&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BT-11485&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BT-11530&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BT-11680&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BV-11245&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BW-11065&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BW-11110&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;BW-11200&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CA-11965&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CA-12055&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CA-12265&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CA-12310&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CA-12775&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CB-12025&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CB-12415&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CB-12535&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CC-12100&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CC-12145&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CC-12220&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CC-12370&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CC-12430&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CC-12475&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CC-12550&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CC-12610&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CC-12670&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CC-12685&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CD-11920&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CD-11980&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CD-12280&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CD-12790&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CG-12040&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CG-12520&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CH-12070&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CJ-11875&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CJ-12010&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CK-12205&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CK-12325&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CK-12595&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CK-12760&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CL-11890&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CL-12565&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CL-12700&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CM-11815&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CM-11830&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CM-11935&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CM-12115&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CM-12160&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CM-12190&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CM-12235&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CM-12385&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CM-12445&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CM-12655&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CM-12715&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;Co-12640&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CP-12085&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CP-12340&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CR-12580&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CR-12625&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CR-12730&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CR-12820&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CS-11845&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CS-11860&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CS-11950&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CS-12130&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CS-12175&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CS-12250&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CS-12355&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CS-12400&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CS-12460&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CS-12490&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CS-12505&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CT-11995&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CV-12295&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CV-12805&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CW-11905&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;CY-12745&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DA-13450&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DB-12910&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DB-12970&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DB-13060&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DB-13120&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DB-13210&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DB-13270&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DB-13360&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DB-13405&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DB-13555&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DB-13615&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DB-13660&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DC-12850&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DC-13285&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DD-13570&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DE-13255&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DF-13135&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DG-13300&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DH-13075&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DH-13675&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DJ-13420&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DJ-13510&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DJ-13630&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DK-12835&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DK-12895&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DK-12985&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DK-13090&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DK-13150&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DK-13225&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DK-13375&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DL-12865&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DL-12925&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DL-13315&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DL-13330&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DL-13495&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;Dl-13600&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DM-12955&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DM-13015&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DM-13345&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DM-13525&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DN-13690&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DO-13435&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DO-13645&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DP-13000&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DP-13105&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DP-13165&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;Dp-13240&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DP-13390&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DR-12880&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DR-12940&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DS-13030&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DS-13180&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DV-13045&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DV-13465&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DW-13195&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DW-13480&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DW-13540&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;DW-13585&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EA-14035&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EB-13705&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EB-13750&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EB-13840&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EB-13870&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EB-13930&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EB-13975&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EB-14110&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EB-14170&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EC-14050&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ED-13885&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EG-13900&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EH-13765&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EH-13945&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EH-13990&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EH-14005&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EH-14125&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EH-14185&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EJ-13720&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EJ-14155&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EK-13795&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EL-13735&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EM-13810&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EM-13825&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EM-13960&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EM-14065&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EM-14095&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EM-14140&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EM-14200&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EN-13780&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;EP-13915&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ER-13855&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ES-14020&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ES-14080&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;FA-14230&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;FC-14245&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;FC-14335&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;FG-14260&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;FH-14275&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;FH-14350&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;FH-14365&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;FM-14215&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;FM-14290&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;FM-14380&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;FO-14305&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;FP-14320&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;FW-14395&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GA-14515&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GA-14725&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GB-14530&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GB-14575&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GD-14590&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GG-14650&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GH-14410&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GH-14425&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GH-14485&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GH-14665&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GK-14620&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GM-14440&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GM-14455&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GM-14500&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GM-14680&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GM-14695&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GP-14740&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GR-14560&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GT-14635&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GT-14710&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GT-14755&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GW-14605&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GZ-14470&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;GZ-14545&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HA-14905&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HA-14920&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HD-14785&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HE-14800&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HF-14995&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HG-14845&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HG-14965&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HG-15025&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HH-15010&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HJ-14875&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HK-14890&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HL-15040&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HM-14860&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HM-14980&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HP-14815&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HR-14770&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HR-14830&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HW-14935&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;HZ-14950&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;IG-15085&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;IL-15100&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;IM-15055&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;IM-15070&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JA-15970&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JB-15400&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JB-15925&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JB-16000&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JB-16045&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JC-15340&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JC-15385&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JC-15775&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JC-16105&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JD-15790&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JD-15895&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JD-16015&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JD-16060&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JD-16150&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JE-15475&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JE-15610&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JE-15715&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JE-15745&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JE-16165&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JF-15190&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JF-15295&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JF-15355&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JF-15415&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JF-15490&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JF-15565&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JG-15115&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JG-15160&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JG-15310&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JG-15805&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JH-15430&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JH-15820&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JH-15910&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JH-15985&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JH-16180&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JJ-15445&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JJ-15760&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JK-15205&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JK-15325&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JK-15370&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JK-15625&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JK-15640&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JK-15730&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JK-16090&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JK-16120&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JL-15130&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JL-15175&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JL-15235&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JL-15505&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JL-15835&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JL-15850&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JM-15250&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JM-15265&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JM-15535&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JM-15580&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JM-15655&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JM-15865&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JM-16195&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JO-15145&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JO-15280&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JO-15550&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JP-15460&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JP-15520&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JP-16135&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JR-15670&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JR-15700&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JR-16210&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JS-15595&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JS-15685&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JS-15880&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JS-15940&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JS-16030&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JW-15220&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JW-15955&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;JW-16075&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KA-16525&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KB-16240&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KB-16315&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KB-16405&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KB-16585&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KB-16600&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KC-16255&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KC-16540&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KC-16675&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KD-16270&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KD-16345&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KD-16495&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KD-16615&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KE-16420&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KF-16285&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KH-16330&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KH-16360&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KH-16510&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KH-16630&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KH-16690&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KL-16555&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KL-16645&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KM-16225&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KM-16375&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KM-16660&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KM-16720&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KN-16390&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KN-16450&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KN-16705&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KS-16300&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KT-16465&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KT-16480&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KW-16435&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;KW-16570&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LA-16780&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LB-16735&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LB-16795&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LC-16870&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LC-16885&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LC-16930&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LC-16960&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LC-17050&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LC-17140&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LD-16855&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LD-17005&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LE-16810&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LF-17185&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LH-16750&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LH-16900&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LH-17020&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LH-17155&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LL-16840&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LM-17065&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LO-17170&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LP-17080&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LP-17095&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LR-16915&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LR-17035&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LS-16945&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LS-16975&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LS-17200&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LS-17230&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LS-17245&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LT-16765&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LT-17110&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LW-16825&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LW-16990&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LW-17125&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;LW-17215&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MA-17560&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MA-17995&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MB-17305&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MB-18085&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MC-17275&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MC-17425&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MC-17575&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MC-17590&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MC-17605&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MC-17635&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MC-17845&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MC-18100&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MC-18130&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MD-17350&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MD-17860&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ME-17320&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ME-17725&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ME-18010&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MF-17665&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MF-18250&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MG-17650&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MG-17680&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MG-17695&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MG-17875&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MG-17890&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MG-18145&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MG-18205&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MH-17290&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MH-17440&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MH-17455&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MH-17620&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MH-17785&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MH-18025&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MH-18115&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MJ-17740&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MK-17905&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MK-18160&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ML-17395&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ML-17410&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ML-17755&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ML-18040&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ML-18265&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MM-17260&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MM-17920&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MM-18055&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MM-18280&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MN-17935&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MO-17500&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MO-17800&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MO-17950&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MP-17470&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MP-17965&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MP-18175&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MR-17545&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MS-17365&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MS-17530&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MS-17710&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MS-17770&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MS-17830&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MS-17980&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MT-17815&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MT-18070&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MV-17485&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MV-18190&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MW-18220&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MW-18235&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MY-17380&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MY-18295&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MZ-17335&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;MZ-17515&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NB-18580&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NB-18655&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NC-18340&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NC-18415&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NC-18535&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NC-18625&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ND-18370&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ND-18460&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NF-18385&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NF-18475&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NF-18595&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NG-18355&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NG-18430&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NH-18610&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NK-18490&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NL-18310&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NM-18445&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NM-18520&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NP-18325&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NP-18670&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NP-18685&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NP-18700&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NR-18550&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NS-18505&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NS-18640&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NW-18400&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;NZ-18565&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ON-18715&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;OT-18730&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PA-19060&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PB-18805&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PB-19105&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PB-19150&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PB-19210&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PC-18745&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PC-19000&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PF-19120&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PF-19165&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PF-19225&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PG-18820&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PG-18895&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PH-18790&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PJ-18835&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PJ-19015&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PK-18910&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PK-19075&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PL-18925&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PM-18940&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PM-19135&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PN-18775&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PO-18850&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PO-18865&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PO-19180&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PO-19195&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PP-18955&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PR-18880&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PS-18760&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PS-18970&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PS-19045&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PT-19090&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PV-18985&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PW-19030&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;PW-19240&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;QJ-19255&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RA-19285&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RA-19885&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RA-19915&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RA-19945&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RB-19330&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RB-19360&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RB-19435&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RB-19465&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RB-19570&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RB-19645&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RB-19705&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RB-19795&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RC-19825&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RC-19960&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RD-19480&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RD-19585&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RD-19660&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RD-19720&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RD-19810&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RD-19900&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RD-19930&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RE-19405&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RE-19450&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RF-19345&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RF-19735&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RF-19840&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RH-19495&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RH-19510&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RH-19555&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RH-19600&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RK-19300&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RL-19615&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RM-19375&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RM-19675&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RM-19750&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RO-19780&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RP-19270&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RP-19390&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RP-19855&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RR-19315&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RR-19525&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RS-19420&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RS-19765&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RS-19870&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RW-19540&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RW-19630&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;RW-19690&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SA-20830&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SB-20170&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SB-20185&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SB-20290&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20020&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20050&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20095&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20230&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20260&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20305&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20380&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20440&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20575&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20680&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20695&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20725&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20770&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20800&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SC-20845&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SD-20485&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SE-20110&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SF-20065&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SF-20200&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SF-20965&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SG-20080&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SG-20470&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SG-20605&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SG-20890&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SH-19975&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SH-20395&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SH-20635&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SJ-20125&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SJ-20215&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SJ-20500&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SK-19990&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SL-20155&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SM-20005&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SM-20320&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SM-20905&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SM-20950&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SN-20560&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SN-20710&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SO-20335&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SP-20545&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SP-20620&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SP-20650&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SP-20860&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SP-20920&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SR-20425&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SR-20740&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SS-20140&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SS-20410&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SS-20515&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SS-20590&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SS-20875&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ST-20530&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SU-20665&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SV-20365&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SV-20785&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SV-20815&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SV-20935&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SW-20245&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SW-20275&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SW-20350&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SW-20455&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SW-20755&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;SZ-20035&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TA-21385&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TB-21055&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TB-21175&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TB-21190&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TB-21250&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TB-21280&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TB-21355&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TB-21400&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TB-21520&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TB-21595&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TB-21625&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TC-20980&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TC-21145&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TC-21295&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TC-21475&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TC-21535&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TD-20995&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TG-21310&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TG-21640&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TH-21100&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TH-21115&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TH-21235&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TH-21550&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TM-21010&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TM-21490&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TN-21040&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TP-21130&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TP-21415&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TP-21565&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TR-21325&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TS-21085&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TS-21160&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TS-21205&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TS-21340&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TS-21370&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TS-21430&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TS-21505&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TS-21610&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TS-21655&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TT-21070&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TT-21220&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TT-21265&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TT-21460&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TW-21025&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TZ-21445&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;TZ-21580&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VB-21745&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VD-21670&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VF-21715&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VG-21790&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VG-21805&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VM-21685&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VM-21835&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VP-21730&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VP-21760&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VS-21820&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VT-21700&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;VW-21775&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;WB-21850&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;XP-21865&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;YC-21895&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;YS-21880&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ZC-21910&quot;' />
          <groupfilter function='member' level='[Customer ID]' member='&quot;ZD-21925&quot;' />
        </groupfilter>
      </filter>
      <object-graph>
        <objects>
          <object caption='Orders' id='Orders_3CE1191D3F724472840A035A8FFD3264'>
            <properties context=''>
              <relation connection='excel-direct.09u10np1wyabfe1eseaom1g9jjls' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:T10001:no:A1:T10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='City' ordinal='8' />
                  <column datatype='string' name='State' ordinal='9' />
                  <column datatype='string' name='Country' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                  <column datatype='string' name='Product ID' ordinal='12' />
                  <column datatype='string' name='Category' ordinal='13' />
                  <column datatype='string' name='Sub-Category' ordinal='14' />
                  <column datatype='string' name='Product Name' ordinal='15' />
                  <column datatype='real' name='Sales' ordinal='16' />
                  <column datatype='integer' name='Quantity' ordinal='17' />
                  <column datatype='real' name='Discount' ordinal='18' />
                  <column datatype='real' name='Profit' ordinal='19' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Orders_3CE1191D3F724472840A035A8FFD3264' table='[Extract].[Orders_3CE1191D3F724472840A035A8FFD3264]' type='table' />
            </properties>
          </object>
          <object caption='People' id='People_B033A29162DE4EE6B89D233817595093'>
            <properties context=''>
              <relation connection='excel-direct.09u10np1wyabfe1eseaom1g9jjls' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B4:no:A1:B4:0' header='yes' outcome='6'>
                  <column datatype='string' name='Region' ordinal='0' />
                  <column datatype='string' name='People' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='People_B033A29162DE4EE6B89D233817595093' table='[Extract].[People_B033A29162DE4EE6B89D233817595093]' type='table' />
            </properties>
          </object>
          <object caption='Returns' id='Returns_E67E1A2D227E4114A939FFE6191FC946'>
            <properties context=''>
              <relation connection='excel-direct.09u10np1wyabfe1eseaom1g9jjls' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:B638:no:A1:B638:0' header='yes' outcome='6'>
                  <column datatype='string' name='Order ID' ordinal='0' />
                  <column datatype='string' name='Returned' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Returns_E67E1A2D227E4114A939FFE6191FC946' table='[Extract].[Returns_E67E1A2D227E4114A939FFE6191FC946]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (People)]' />
            </expression>
            <first-end-point object-id='Orders_3CE1191D3F724472840A035A8FFD3264' />
            <second-end-point object-id='People_B033A29162DE4EE6B89D233817595093' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns)]' />
            </expression>
            <first-end-point object-id='Orders_3CE1191D3F724472840A035A8FFD3264' />
            <second-end-point object-id='Returns_E67E1A2D227E4114A939FFE6191FC946' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='CF2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - EU Superstore)' name='federated.01kznmu1fcml6r17xizj2063xxzg' />
          </datasources>
          <datasource-dependencies datasource='federated.01kznmu1fcml6r17xizj2063xxzg'>
            <column caption='HighLowSalesCF' datatype='string' name='[Calculation_810647945463685122]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Sales]&lt;300 THEN &quot;Low&quot; ELSE &quot;High&quot; END' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_810647945463685122]' derivation='None' name='[none:Calculation_810647945463685122:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Calculation_810647945463685122:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_810647945463685122:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Calculation_810647945463685122:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Calculation_810647945463685122:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01kznmu1fcml6r17xizj2063xxzg].[avg:Sales:qk]</rows>
        <cols>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{6DFB66CD-D36A-4209-9812-B856453D5AEC}' />
    </worksheet>
    <worksheet name='CF3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - EU Superstore)' name='federated.01kznmu1fcml6r17xizj2063xxzg' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Enter Any Amount' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5000.'>
              <calculation class='tableau' formula='5000.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.01kznmu1fcml6r17xizj2063xxzg'>
            <column caption='SalesCompare' datatype='boolean' name='[Calculation_250512742146846720]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Sales]&gt;  [Parameters].[Parameter 1]  then True else False end' />
            </column>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_250512742146846720]' derivation='None' name='[none:Calculation_250512742146846720:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Calculation_250512742146846720:nk]'>
            <groupfilter function='member' level='[none:Calculation_250512742146846720:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Calculation_250512742146846720:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01kznmu1fcml6r17xizj2063xxzg].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.01kznmu1fcml6r17xizj2063xxzg].[none:Product Name:nk] / [federated.01kznmu1fcml6r17xizj2063xxzg].[none:Calculation_250512742146846720:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{9F0262DC-27ED-4C85-A0AE-6C14FD5F39F2}' />
    </worksheet>
    <worksheet name='CalculatedField1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - EU Superstore)' name='federated.01kznmu1fcml6r17xizj2063xxzg' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Measure' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.01kznmu1fcml6r17xizj2063xxzg'>
            <column caption='Selected Measure' datatype='real' name='[Calculation_250512742152462338]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 3]&#13;&#10;when &quot;Sales&quot; then SUM([Sales])&#13;&#10;when &quot;Profit&quot; then SUM([Profit])&#13;&#10;when &quot;Quantity&quot; then SUM([Quantity])&#13;&#10;END' />
            </column>
            <column caption='ProfitRatio' datatype='real' name='[Calculation_810647945463029761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Profit]/[Sales]' />
            </column>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_3CE1191D3F724472840A035A8FFD3264]' role='measure' type='quantitative' />
            <column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_B033A29162DE4EE6B89D233817595093]' role='measure' type='quantitative' />
            <column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_E67E1A2D227E4114A939FFE6191FC946]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_3CE1191D3F724472840A035A8FFD3264]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_3CE1191D3F724472840A035A8FFD3264:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[People_B033A29162DE4EE6B89D233817595093]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:People_B033A29162DE4EE6B89D233817595093:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Returns_E67E1A2D227E4114A939FFE6191FC946]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Returns_E67E1A2D227E4114A939FFE6191FC946:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_810647945463029761]' derivation='Sum' name='[sum:Calculation_810647945463029761:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_250512742152462338]' derivation='User' name='[usr:Calculation_250512742152462338:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01kznmu1fcml6r17xizj2063xxzg].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.01kznmu1fcml6r17xizj2063xxzg].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01kznmu1fcml6r17xizj2063xxzg].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01kznmu1fcml6r17xizj2063xxzg].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{F344CC3C-B044-4653-92F2-5AE8BFAAAC24}' />
    </worksheet>
    <worksheet name='Combined Set'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - EU Superstore)' name='federated.01kznmu1fcml6r17xizj2063xxzg' />
          </datasources>
          <datasource-dependencies datasource='federated.01kznmu1fcml6r17xizj2063xxzg'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.01kznmu1fcml6r17xizj2063xxzg].[sum:Discount:qk]</rows>
        <cols>([federated.01kznmu1fcml6r17xizj2063xxzg].[io:Set 1:nk] / [federated.01kznmu1fcml6r17xizj2063xxzg].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{768D2CF0-0665-489F-AB58-11B5523F4642}' />
    </worksheet>
    <worksheet name='DateHierarchy'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - EU Superstore)' name='federated.01kznmu1fcml6r17xizj2063xxzg' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Measure' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.01kznmu1fcml6r17xizj2063xxzg'>
            <column caption='Selected Measure' datatype='real' name='[Calculation_250512742152462338]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 3]&#13;&#10;when &quot;Sales&quot; then SUM([Sales])&#13;&#10;when &quot;Profit&quot; then SUM([Profit])&#13;&#10;when &quot;Quantity&quot; then SUM([Quantity])&#13;&#10;END' />
            </column>
            <column caption='ProfitRatio' datatype='real' name='[Calculation_810647945463029761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Profit]/[Sales]' />
            </column>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_3CE1191D3F724472840A035A8FFD3264]' role='measure' type='quantitative' />
            <column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_B033A29162DE4EE6B89D233817595093]' role='measure' type='quantitative' />
            <column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_E67E1A2D227E4114A939FFE6191FC946]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_3CE1191D3F724472840A035A8FFD3264]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_3CE1191D3F724472840A035A8FFD3264:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[People_B033A29162DE4EE6B89D233817595093]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:People_B033A29162DE4EE6B89D233817595093:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Returns_E67E1A2D227E4114A939FFE6191FC946]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Returns_E67E1A2D227E4114A939FFE6191FC946:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_810647945463029761]' derivation='Sum' name='[sum:Calculation_810647945463029761:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_250512742152462338]' derivation='User' name='[usr:Calculation_250512742152462338:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01kznmu1fcml6r17xizj2063xxzg].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.01kznmu1fcml6r17xizj2063xxzg].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01kznmu1fcml6r17xizj2063xxzg].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01kznmu1fcml6r17xizj2063xxzg].[mn:Order Date:ok]</rows>
        <cols>[federated.01kznmu1fcml6r17xizj2063xxzg].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EA551908-055E-4580-A026-F894310884AE}' />
    </worksheet>
    <worksheet name='DiscreteContinuousAxis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - EU Superstore)' name='federated.01kznmu1fcml6r17xizj2063xxzg' />
          </datasources>
          <datasource-dependencies datasource='federated.01kznmu1fcml6r17xizj2063xxzg'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.01kznmu1fcml6r17xizj2063xxzg].[sum:Sales:qk]</rows>
        <cols>[federated.01kznmu1fcml6r17xizj2063xxzg].[yr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{62C40578-F539-416D-A741-B2BFFA1AA37D}' />
    </worksheet>
    <worksheet name='FilterSort'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - EU Superstore)' name='federated.01kznmu1fcml6r17xizj2063xxzg' />
          </datasources>
          <datasource-dependencies datasource='federated.01kznmu1fcml6r17xizj2063xxzg'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Sub-Category:nk]'>
            <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Sub-Category:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.01kznmu1fcml6r17xizj2063xxzg].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.01kznmu1fcml6r17xizj2063xxzg].[sum:Sales:qk]</rows>
        <cols>([federated.01kznmu1fcml6r17xizj2063xxzg].[none:Ship Mode:nk] / [federated.01kznmu1fcml6r17xizj2063xxzg].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{2477F895-232B-4C3A-8A66-9EEEEF3C1632}' />
    </worksheet>
    <worksheet name='Group1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - EU Superstore)' name='federated.01kznmu1fcml6r17xizj2063xxzg' />
          </datasources>
          <datasource-dependencies datasource='federated.01kznmu1fcml6r17xizj2063xxzg'>
            <column datatype='string' name='[Product Name (group) 2]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Product Name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Binder&quot;'>
                  <value>&quot;Acco Binder Covers, Clear&quot;</value>
                  <value>&quot;Acco Binder Covers, Durable&quot;</value>
                  <value>&quot;Acco Binder Covers, Economy&quot;</value>
                  <value>&quot;Acco Binder Covers, Recycled&quot;</value>
                  <value>&quot;Acco Binder, Clear&quot;</value>
                  <value>&quot;Acco Binder, Durable&quot;</value>
                  <value>&quot;Acco Binder, Economy&quot;</value>
                  <value>&quot;Acco Binder, Recycled&quot;</value>
                  <value>&quot;Avery Binder Covers, Clear&quot;</value>
                  <value>&quot;Avery Binder Covers, Durable&quot;</value>
                  <value>&quot;Avery Binder Covers, Economy&quot;</value>
                  <value>&quot;Avery Binder Covers, Recycled&quot;</value>
                  <value>&quot;Avery Binder, Clear&quot;</value>
                  <value>&quot;Avery Binder, Durable&quot;</value>
                  <value>&quot;Avery Binder, Economy&quot;</value>
                  <value>&quot;Avery Binder, Recycled&quot;</value>
                  <value>&quot;Cardinal Binder Covers, Clear&quot;</value>
                  <value>&quot;Cardinal Binder Covers, Durable&quot;</value>
                  <value>&quot;Cardinal Binder Covers, Economy&quot;</value>
                  <value>&quot;Cardinal Binder Covers, Recycled&quot;</value>
                  <value>&quot;Cardinal Binder, Clear&quot;</value>
                  <value>&quot;Cardinal Binder, Durable&quot;</value>
                  <value>&quot;Cardinal Binder, Economy&quot;</value>
                  <value>&quot;Cardinal Binder, Recycled&quot;</value>
                  <value>&quot;Ibico Binder Covers, Clear&quot;</value>
                  <value>&quot;Ibico Binder Covers, Durable&quot;</value>
                  <value>&quot;Ibico Binder Covers, Economy&quot;</value>
                  <value>&quot;Ibico Binder Covers, Recycled&quot;</value>
                  <value>&quot;Ibico Binder, Clear&quot;</value>
                  <value>&quot;Ibico Binder, Durable&quot;</value>
                  <value>&quot;Ibico Binder, Economy&quot;</value>
                  <value>&quot;Ibico Binder, Recycled&quot;</value>
                  <value>&quot;Wilson Jones Binder Covers, Clear&quot;</value>
                  <value>&quot;Wilson Jones Binder Covers, Durable&quot;</value>
                  <value>&quot;Wilson Jones Binder Covers, Economy&quot;</value>
                  <value>&quot;Wilson Jones Binder Covers, Recycled&quot;</value>
                  <value>&quot;Wilson Jones Binder, Clear&quot;</value>
                  <value>&quot;Wilson Jones Binder, Durable&quot;</value>
                  <value>&quot;Wilson Jones Binder, Economy&quot;</value>
                  <value>&quot;Wilson Jones Binder, Recycled&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Punch&quot;'>
                  <value>&quot;Acco 3-Hole Punch, Clear&quot;</value>
                  <value>&quot;Acco 3-Hole Punch, Durable&quot;</value>
                  <value>&quot;Acco 3-Hole Punch, Economy&quot;</value>
                  <value>&quot;Acco 3-Hole Punch, Recycled&quot;</value>
                  <value>&quot;Avery 3-Hole Punch, Clear&quot;</value>
                  <value>&quot;Avery 3-Hole Punch, Durable&quot;</value>
                  <value>&quot;Avery 3-Hole Punch, Economy&quot;</value>
                  <value>&quot;Avery 3-Hole Punch, Recycled&quot;</value>
                  <value>&quot;Cardinal 3-Hole Punch, Clear&quot;</value>
                  <value>&quot;Cardinal 3-Hole Punch, Durable&quot;</value>
                  <value>&quot;Cardinal 3-Hole Punch, Economy&quot;</value>
                  <value>&quot;Cardinal 3-Hole Punch, Recycled&quot;</value>
                  <value>&quot;Ibico 3-Hole Punch, Clear&quot;</value>
                  <value>&quot;Ibico 3-Hole Punch, Durable&quot;</value>
                  <value>&quot;Ibico 3-Hole Punch, Economy&quot;</value>
                  <value>&quot;Ibico 3-Hole Punch, Recycled&quot;</value>
                  <value>&quot;Wilson Jones 3-Hole Punch, Clear&quot;</value>
                  <value>&quot;Wilson Jones 3-Hole Punch, Durable&quot;</value>
                  <value>&quot;Wilson Jones 3-Hole Punch, Economy&quot;</value>
                  <value>&quot;Wilson Jones 3-Hole Punch, Recycled&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01kznmu1fcml6r17xizj2063xxzg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01kznmu1fcml6r17xizj2063xxzg].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01kznmu1fcml6r17xizj2063xxzg].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.01kznmu1fcml6r17xizj2063xxzg].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01kznmu1fcml6r17xizj2063xxzg].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01kznmu1fcml6r17xizj2063xxzg].[Product Name (group) 2]</rows>
        <cols>[federated.01kznmu1fcml6r17xizj2063xxzg].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E85DC84B-163F-4759-AEE8-0A7C48DCAD66}' />
    </worksheet>
    <worksheet name='Group2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - EU Superstore)' name='federated.01kznmu1fcml6r17xizj2063xxzg' />
          </datasources>
          <datasource-dependencies datasource='federated.01kznmu1fcml6r17xizj2063xxzg'>
            <column datatype='string' name='[Product Name (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Product Name]' default='&quot;Starts with C-Z&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Starts with A&quot;'>
                  <value>&quot;Acco 3-Hole Punch, Clear&quot;</value>
                  <value>&quot;Acco 3-Hole Punch, Durable&quot;</value>
                  <value>&quot;Acco 3-Hole Punch, Economy&quot;</value>
                  <value>&quot;Acco 3-Hole Punch, Recycled&quot;</value>
                  <value>&quot;Acco Binder Covers, Clear&quot;</value>
                  <value>&quot;Acco Binder Covers, Durable&quot;</value>
                  <value>&quot;Acco Binder Covers, Economy&quot;</value>
                  <value>&quot;Acco Binder Covers, Recycled&quot;</value>
                  <value>&quot;Acco Binder, Clear&quot;</value>
                  <value>&quot;Acco Binder, Durable&quot;</value>
                  <value>&quot;Acco Binder, Economy&quot;</value>
                  <value>&quot;Acco Binder, Recycled&quot;</value>
                  <value>&quot;Acco Binding Machine, Clear&quot;</value>
                  <value>&quot;Acco Binding Machine, Durable&quot;</value>
                  <value>&quot;Acco Binding Machine, Economy&quot;</value>
                  <value>&quot;Acco Binding Machine, Recycled&quot;</value>
                  <value>&quot;Acco Hole Reinforcements, Clear&quot;</value>
                  <value>&quot;Acco Hole Reinforcements, Durable&quot;</value>
                  <value>&quot;Acco Hole Reinforcements, Economy&quot;</value>
                  <value>&quot;Acco Hole Reinforcements, Recycled&quot;</value>
                  <value>&quot;Acco Index Tab, Clear&quot;</value>
                  <value>&quot;Acco Index Tab, Durable&quot;</value>
                  <value>&quot;Acco Index Tab, Economy&quot;</value>
                  <value>&quot;Accos Clamps, 12 Pack&quot;</value>
                  <value>&quot;Accos Clamps, Assorted Sizes&quot;</value>
                  <value>&quot;Accos Clamps, Bulk Pack&quot;</value>
                  <value>&quot;Accos Clamps, Metal&quot;</value>
                  <value>&quot;Accos Paper Clips, Assorted Sizes&quot;</value>
                  <value>&quot;Accos Paper Clips, Bulk Pack&quot;</value>
                  <value>&quot;Accos Paper Clips, Metal&quot;</value>
                  <value>&quot;Accos Push Pins, 12 Pack&quot;</value>
                  <value>&quot;Accos Push Pins, Assorted Sizes&quot;</value>
                  <value>&quot;Accos Push Pins, Bulk Pack&quot;</value>
                  <value>&quot;Accos Push Pins, Metal&quot;</value>
                  <value>&quot;Accos Rubber Bands, 12 Pack&quot;</value>
                  <value>&quot;Accos Rubber Bands, Assorted Sizes&quot;</value>
                  <value>&quot;Accos Rubber Bands, Bulk Pack&quot;</value>
                  <value>&quot;Accos Rubber Bands, Metal&quot;</value>
                  <value>&quot;Accos Staples, 12 Pack&quot;</value>
                  <value>&quot;Accos Staples, Assorted Sizes&quot;</value>
                  <value>&quot;Accos Staples, Bulk Pack&quot;</value>
                  <value>&quot;Accos Staples, Metal&quot;</value>
                  <value>&quot;Accos Thumb Tacks, 12 Pack&quot;</value>
                  <value>&quot;Accos Thumb Tacks, Assorted Sizes&quot;</value>
                  <value>&quot;Accos Thumb Tacks, Bulk Pack&quot;</value>
                  <value>&quot;Accos Thumb Tacks, Metal&quot;</value>
                  <value>&quot;Acme Box Cutter, Easy Grip&quot;</value>
                  <value>&quot;Acme Box Cutter, High Speed&quot;</value>
                  <value>&quot;Acme Box Cutter, Serrated&quot;</value>
                  <value>&quot;Acme Box Cutter, Steel&quot;</value>
                  <value>&quot;Acme Letter Opener, Easy Grip&quot;</value>
                  <value>&quot;Acme Letter Opener, High Speed&quot;</value>
                  <value>&quot;Acme Letter Opener, Serrated&quot;</value>
                  <value>&quot;Acme Letter Opener, Steel&quot;</value>
                  <value>&quot;Acme Ruler, Easy Grip&quot;</value>
                  <value>&quot;Acme Ruler, High Speed&quot;</value>
                  <value>&quot;Acme Ruler, Serrated&quot;</value>
                  <value>&quot;Acme Ruler, Steel&quot;</value>
                  <value>&quot;Acme Scissors, Easy Grip&quot;</value>
                  <value>&quot;Acme Scissors, High Speed&quot;</value>
                  <value>&quot;Acme Scissors, Serrated&quot;</value>
                  <value>&quot;Acme Scissors, Steel&quot;</value>
                  <value>&quot;Acme Shears, Easy Grip&quot;</value>
                  <value>&quot;Acme Shears, High Speed&quot;</value>
                  <value>&quot;Acme Shears, Serrated&quot;</value>
                  <value>&quot;Acme Shears, Steel&quot;</value>
                  <value>&quot;Acme Trimmer, Easy Grip&quot;</value>
                  <value>&quot;Acme Trimmer, High Speed&quot;</value>
                  <value>&quot;Acme Trimmer, Serrated&quot;</value>
                  <value>&quot;Acme Trimmer, Steel&quot;</value>
                  <value>&quot;Advantus Clamps, 12 Pack&quot;</value>
                  <value>&quot;Advantus Clamps, Assorted Sizes&quot;</value>
                  <value>&quot;Advantus Clamps, Bulk Pack&quot;</value>
                  <value>&quot;Advantus Clamps, Metal&quot;</value>
                  <value>&quot;Advantus Clock, Black&quot;</value>
                  <value>&quot;Advantus Clock, Duo Pack&quot;</value>
                  <value>&quot;Advantus Clock, Durable&quot;</value>
                  <value>&quot;Advantus Clock, Erganomic&quot;</value>
                  <value>&quot;Advantus Door Stop, Black&quot;</value>
                  <value>&quot;Advantus Door Stop, Duo Pack&quot;</value>
                  <value>&quot;Advantus Door Stop, Durable&quot;</value>
                  <value>&quot;Advantus Door Stop, Erganomic&quot;</value>
                  <value>&quot;Advantus Frame, Black&quot;</value>
                  <value>&quot;Advantus Frame, Duo Pack&quot;</value>
                  <value>&quot;Advantus Frame, Durable&quot;</value>
                  <value>&quot;Advantus Frame, Erganomic&quot;</value>
                  <value>&quot;Advantus Light Bulb, Black&quot;</value>
                  <value>&quot;Advantus Light Bulb, Duo Pack&quot;</value>
                  <value>&quot;Advantus Light Bulb, Durable&quot;</value>
                  <value>&quot;Advantus Light Bulb, Erganomic&quot;</value>
                  <value>&quot;Advantus Paper Clips, Assorted Sizes&quot;</value>
                  <value>&quot;Advantus Paper Clips, Bulk Pack&quot;</value>
                  <value>&quot;Advantus Paper Clips, Metal&quot;</value>
                  <value>&quot;Advantus Photo Frame, Black&quot;</value>
                  <value>&quot;Advantus Photo Frame, Duo Pack&quot;</value>
                  <value>&quot;Advantus Photo Frame, Durable&quot;</value>
                  <value>&quot;Advantus Photo Frame, Erganomic&quot;</value>
                  <value>&quot;Advantus Push Pins, Assorted Sizes&quot;</value>
                  <value>&quot;Advantus Push Pins, Bulk Pack&quot;</value>
                  <value>&quot;Advantus Rubber Bands, 12 Pack&quot;</value>
                  <value>&quot;Advantus Rubber Bands, Assorted Sizes&quot;</value>
                  <value>&quot;Advantus Rubber Bands, Bulk Pack&quot;</value>
                  <value>&quot;Advantus Rubber Bands, Metal&quot;</value>
                  <value>&quot;Advantus Stacking Tray, Black&quot;</value>
                  <value>&quot;Advantus Stacking Tray, Durable&quot;</value>
                  <value>&quot;Advantus Stacking Tray, Erganomic&quot;</value>
                  <value>&quot;Advantus Staples, 12 Pack&quot;</value>
                  <value>&quot;Advantus Staples, Assorted Sizes&quot;</value>
                  <value>&quot;Advantus Staples, Bulk Pack&quot;</value>
                  <value>&quot;Advantus Staples, Metal&quot;</value>
                  <value>&quot;Advantus Thumb Tacks, 12 Pack&quot;</value>
                  <value>&quot;Advantus Thumb Tacks, Assorted Sizes&quot;</value>
                  <value>&quot;Advantus Thumb Tacks, Bulk Pack&quot;</value>
                  <value>&quot;Advantus Thumb Tacks, Metal&quot;</value>
                  <value>&quot;Ames Business Envelopes, Recycled&quot;</value>
                  <value>&quot;Ames Business Envelopes, Security-Tint&quot;</value>
                  <value>&quot;Ames Business Envelopes, Set of 50&quot;</value>
                  <value>&quot;Ames Clasp Envelope, Recycled&quot;</value>
                  <value>&quot;Ames Clasp Envelope, Security-Tint&quot;</value>
                  <value>&quot;Ames Clasp Envelope, Set of 50&quot;</value>
                  <value>&quot;Ames Clasp Envelope, with clear poly window&quot;</value>
                  <value>&quot;Ames Interoffice Envelope, Recycled&quot;</value>
                  <value>&quot;Ames Interoffice Envelope, Security-Tint&quot;</value>
                  <value>&quot;Ames Interoffice Envelope, Set of 50&quot;</value>
                  <value>&quot;Ames Interoffice Envelope, with clear poly window&quot;</value>
                  <value>&quot;Ames Mailers, Recycled&quot;</value>
                  <value>&quot;Ames Mailers, Security-Tint&quot;</value>
                  <value>&quot;Ames Mailers, Set of 50&quot;</value>
                  <value>&quot;Ames Mailers, with clear poly window&quot;</value>
                  <value>&quot;Ames Manila Envelope, Recycled&quot;</value>
                  <value>&quot;Ames Manila Envelope, Security-Tint&quot;</value>
                  <value>&quot;Ames Manila Envelope, Set of 50&quot;</value>
                  <value>&quot;Ames Peel and Seal, Recycled&quot;</value>
                  <value>&quot;Ames Peel and Seal, Security-Tint&quot;</value>
                  <value>&quot;Ames Peel and Seal, Set of 50&quot;</value>
                  <value>&quot;Ames Peel and Seal, with clear poly window&quot;</value>
                  <value>&quot;Apple Audio Dock, Cordless&quot;</value>
                  <value>&quot;Apple Audio Dock, Full Size&quot;</value>
                  <value>&quot;Apple Audio Dock, VoIP&quot;</value>
                  <value>&quot;Apple Audio Dock, with Caller ID&quot;</value>
                  <value>&quot;Apple Headset, Cordless&quot;</value>
                  <value>&quot;Apple Headset, Full Size&quot;</value>
                  <value>&quot;Apple Headset, VoIP&quot;</value>
                  <value>&quot;Apple Headset, with Caller ID&quot;</value>
                  <value>&quot;Apple Office Telephone, Cordless&quot;</value>
                  <value>&quot;Apple Office Telephone, Full Size&quot;</value>
                  <value>&quot;Apple Office Telephone, VoIP&quot;</value>
                  <value>&quot;Apple Office Telephone, with Caller ID&quot;</value>
                  <value>&quot;Apple Signal Booster, Cordless&quot;</value>
                  <value>&quot;Apple Signal Booster, Full Size&quot;</value>
                  <value>&quot;Apple Signal Booster, VoIP&quot;</value>
                  <value>&quot;Apple Signal Booster, with Caller ID&quot;</value>
                  <value>&quot;Apple Smart Phone, Cordless&quot;</value>
                  <value>&quot;Apple Smart Phone, Full Size&quot;</value>
                  <value>&quot;Apple Smart Phone, with Caller ID&quot;</value>
                  <value>&quot;Apple Speaker Phone, Cordless&quot;</value>
                  <value>&quot;Apple Speaker Phone, Full Size&quot;</value>
                  <value>&quot;Apple Speaker Phone, VoIP&quot;</value>
                  <value>&quot;Apple Speaker Phone, with Caller ID&quot;</value>
                  <value>&quot;Avery 3-Hole Punch, Clear&quot;</value>
                  <value>&quot;Avery 3-Hole Punch, Durable&quot;</value>
                  <value>&quot;Avery 3-Hole Punch, Economy&quot;</value>
                  <value>&quot;Avery 3-Hole Punch, Recycled&quot;</value>
                  <value>&quot;Avery Binder Covers, Clear&quot;</value>
                  <value>&quot;Avery Binder Covers, Durable&quot;</value>
                  <value>&quot;Avery Binder Covers, Economy&quot;</value>
                  <value>&quot;Avery Binder Covers, Recycled&quot;</value>
                  <value>&quot;Avery Binder, Clear&quot;</value>
                  <value>&quot;Avery Binder, Durable&quot;</value>
                  <value>&quot;Avery Binder, Economy&quot;</value>
                  <value>&quot;Avery Binder, Recycled&quot;</value>
                  <value>&quot;Avery Binding Machine, Clear&quot;</value>
                  <value>&quot;Avery Binding Machine, Durable&quot;</value>
                  <value>&quot;Avery Binding Machine, Economy&quot;</value>
                  <value>&quot;Avery Binding Machine, Recycled&quot;</value>
                  <value>&quot;Avery Color Coded Labels, 5000 Label Set&quot;</value>
                  <value>&quot;Avery Color Coded Labels, Adjustable&quot;</value>
                  <value>&quot;Avery Color Coded Labels, Alphabetical&quot;</value>
                  <value>&quot;Avery Color Coded Labels, Laser Printer Compatible&quot;</value>
                  <value>&quot;Avery File Folder Labels, 5000 Label Set&quot;</value>
                  <value>&quot;Avery File Folder Labels, Adjustable&quot;</value>
                  <value>&quot;Avery File Folder Labels, Alphabetical&quot;</value>
                  <value>&quot;Avery File Folder Labels, Laser Printer Compatible&quot;</value>
                  <value>&quot;Avery Hole Reinforcements, Clear&quot;</value>
                  <value>&quot;Avery Hole Reinforcements, Durable&quot;</value>
                  <value>&quot;Avery Hole Reinforcements, Economy&quot;</value>
                  <value>&quot;Avery Hole Reinforcements, Recycled&quot;</value>
                  <value>&quot;Avery Index Tab, Clear&quot;</value>
                  <value>&quot;Avery Index Tab, Durable&quot;</value>
                  <value>&quot;Avery Index Tab, Economy&quot;</value>
                  <value>&quot;Avery Legal Exhibit Labels, 5000 Label Set&quot;</value>
                  <value>&quot;Avery Legal Exhibit Labels, Adjustable&quot;</value>
                  <value>&quot;Avery Legal Exhibit Labels, Alphabetical&quot;</value>
                  <value>&quot;Avery Legal Exhibit Labels, Laser Printer Compatible&quot;</value>
                  <value>&quot;Avery Removable Labels, 5000 Label Set&quot;</value>
                  <value>&quot;Avery Removable Labels, Adjustable&quot;</value>
                  <value>&quot;Avery Removable Labels, Alphabetical&quot;</value>
                  <value>&quot;Avery Removable Labels, Laser Printer Compatible&quot;</value>
                  <value>&quot;Avery Round Labels, 5000 Label Set&quot;</value>
                  <value>&quot;Avery Round Labels, Adjustable&quot;</value>
                  <value>&quot;Avery Round Labels, Alphabetical&quot;</value>
                  <value>&quot;Avery Round Labels, Laser Printer Compatible&quot;</value>
                  <value>&quot;Avery Shipping Labels, 5000 Label Set&quot;</value>
                  <value>&quot;Avery Shipping Labels, Adjustable&quot;</value>
                  <value>&quot;Avery Shipping Labels, Alphabetical&quot;</value>
                  <value>&quot;Avery Shipping Labels, Laser Printer Compatible&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Starts with B&quot;'>
                  <value>&quot;Barricks Coffee Table, Adjustable Height&quot;</value>
                  <value>&quot;Barricks Coffee Table, Fully Assembled&quot;</value>
                  <value>&quot;Barricks Computer Table, Adjustable Height&quot;</value>
                  <value>&quot;Barricks Conference Table, Adjustable Height&quot;</value>
                  <value>&quot;Barricks Conference Table, Fully Assembled&quot;</value>
                  <value>&quot;Barricks Conference Table, Rectangular&quot;</value>
                  <value>&quot;Barricks Conference Table, with Bottom Storage&quot;</value>
                  <value>&quot;Barricks Round Table, Adjustable Height&quot;</value>
                  <value>&quot;Barricks Round Table, Rectangular&quot;</value>
                  <value>&quot;Barricks Round Table, with Bottom Storage&quot;</value>
                  <value>&quot;Barricks Training Table, Fully Assembled&quot;</value>
                  <value>&quot;Barricks Training Table, Rectangular&quot;</value>
                  <value>&quot;Barricks Training Table, with Bottom Storage&quot;</value>
                  <value>&quot;Barricks Wood Table, Adjustable Height&quot;</value>
                  <value>&quot;Belkin Flash Drive, Bluetooth&quot;</value>
                  <value>&quot;Belkin Flash Drive, Erganomic&quot;</value>
                  <value>&quot;Belkin Flash Drive, Programmable&quot;</value>
                  <value>&quot;Belkin Flash Drive, USB&quot;</value>
                  <value>&quot;Belkin Keyboard, Bluetooth&quot;</value>
                  <value>&quot;Belkin Keyboard, Erganomic&quot;</value>
                  <value>&quot;Belkin Keyboard, Programmable&quot;</value>
                  <value>&quot;Belkin Keyboard, USB&quot;</value>
                  <value>&quot;Belkin Memory Card, Bluetooth&quot;</value>
                  <value>&quot;Belkin Memory Card, Erganomic&quot;</value>
                  <value>&quot;Belkin Memory Card, Programmable&quot;</value>
                  <value>&quot;Belkin Memory Card, USB&quot;</value>
                  <value>&quot;Belkin Mouse, Bluetooth&quot;</value>
                  <value>&quot;Belkin Mouse, Erganomic&quot;</value>
                  <value>&quot;Belkin Mouse, Programmable&quot;</value>
                  <value>&quot;Belkin Mouse, USB&quot;</value>
                  <value>&quot;Belkin Numeric Keypad, Bluetooth&quot;</value>
                  <value>&quot;Belkin Numeric Keypad, Erganomic&quot;</value>
                  <value>&quot;Belkin Numeric Keypad, USB&quot;</value>
                  <value>&quot;Belkin Router, Bluetooth&quot;</value>
                  <value>&quot;Belkin Router, Erganomic&quot;</value>
                  <value>&quot;Belkin Router, Programmable&quot;</value>
                  <value>&quot;Belkin Router, USB&quot;</value>
                  <value>&quot;Bevis Coffee Table, Fully Assembled&quot;</value>
                  <value>&quot;Bevis Coffee Table, Rectangular&quot;</value>
                  <value>&quot;Bevis Coffee Table, with Bottom Storage&quot;</value>
                  <value>&quot;Bevis Computer Table, Fully Assembled&quot;</value>
                  <value>&quot;Bevis Computer Table, with Bottom Storage&quot;</value>
                  <value>&quot;Bevis Conference Table, Fully Assembled&quot;</value>
                  <value>&quot;Bevis Conference Table, with Bottom Storage&quot;</value>
                  <value>&quot;Bevis Round Table, Adjustable Height&quot;</value>
                  <value>&quot;Bevis Round Table, with Bottom Storage&quot;</value>
                  <value>&quot;Bevis Training Table, Adjustable Height&quot;</value>
                  <value>&quot;Bevis Training Table, Rectangular&quot;</value>
                  <value>&quot;Bevis Training Table, with Bottom Storage&quot;</value>
                  <value>&quot;Bevis Wood Table, Rectangular&quot;</value>
                  <value>&quot;BIC Canvas, Blue&quot;</value>
                  <value>&quot;BIC Canvas, Easy-Erase&quot;</value>
                  <value>&quot;BIC Canvas, Fluorescent&quot;</value>
                  <value>&quot;BIC Canvas, Water Color&quot;</value>
                  <value>&quot;BIC Highlighters, Blue&quot;</value>
                  <value>&quot;BIC Highlighters, Easy-Erase&quot;</value>
                  <value>&quot;BIC Highlighters, Fluorescent&quot;</value>
                  <value>&quot;BIC Highlighters, Water Color&quot;</value>
                  <value>&quot;BIC Markers, Blue&quot;</value>
                  <value>&quot;BIC Markers, Easy-Erase&quot;</value>
                  <value>&quot;BIC Markers, Fluorescent&quot;</value>
                  <value>&quot;BIC Markers, Water Color&quot;</value>
                  <value>&quot;BIC Pencil Sharpener, Blue&quot;</value>
                  <value>&quot;BIC Pencil Sharpener, Easy-Erase&quot;</value>
                  <value>&quot;BIC Pencil Sharpener, Fluorescent&quot;</value>
                  <value>&quot;BIC Pencil Sharpener, Water Color&quot;</value>
                  <value>&quot;BIC Pens, Blue&quot;</value>
                  <value>&quot;BIC Pens, Easy-Erase&quot;</value>
                  <value>&quot;BIC Pens, Fluorescent&quot;</value>
                  <value>&quot;BIC Pens, Water Color&quot;</value>
                  <value>&quot;BIC Sketch Pad, Blue&quot;</value>
                  <value>&quot;BIC Sketch Pad, Easy-Erase&quot;</value>
                  <value>&quot;BIC Sketch Pad, Fluorescent&quot;</value>
                  <value>&quot;BIC Sketch Pad, Water Color&quot;</value>
                  <value>&quot;Binney &amp; Smith Canvas, Blue&quot;</value>
                  <value>&quot;Binney &amp; Smith Canvas, Easy-Erase&quot;</value>
                  <value>&quot;Binney &amp; Smith Canvas, Fluorescent&quot;</value>
                  <value>&quot;Binney &amp; Smith Canvas, Water Color&quot;</value>
                  <value>&quot;Binney &amp; Smith Highlighters, Blue&quot;</value>
                  <value>&quot;Binney &amp; Smith Highlighters, Easy-Erase&quot;</value>
                  <value>&quot;Binney &amp; Smith Highlighters, Fluorescent&quot;</value>
                  <value>&quot;Binney &amp; Smith Highlighters, Water Color&quot;</value>
                  <value>&quot;Binney &amp; Smith Markers, Blue&quot;</value>
                  <value>&quot;Binney &amp; Smith Markers, Easy-Erase&quot;</value>
                  <value>&quot;Binney &amp; Smith Markers, Fluorescent&quot;</value>
                  <value>&quot;Binney &amp; Smith Markers, Water Color&quot;</value>
                  <value>&quot;Binney &amp; Smith Pencil Sharpener, Easy-Erase&quot;</value>
                  <value>&quot;Binney &amp; Smith Pencil Sharpener, Fluorescent&quot;</value>
                  <value>&quot;Binney &amp; Smith Pencil Sharpener, Water Color&quot;</value>
                  <value>&quot;Binney &amp; Smith Pens, Blue&quot;</value>
                  <value>&quot;Binney &amp; Smith Pens, Easy-Erase&quot;</value>
                  <value>&quot;Binney &amp; Smith Pens, Fluorescent&quot;</value>
                  <value>&quot;Binney &amp; Smith Pens, Water Color&quot;</value>
                  <value>&quot;Binney &amp; Smith Sketch Pad, Blue&quot;</value>
                  <value>&quot;Binney &amp; Smith Sketch Pad, Easy-Erase&quot;</value>
                  <value>&quot;Binney &amp; Smith Sketch Pad, Fluorescent&quot;</value>
                  <value>&quot;Binney &amp; Smith Sketch Pad, Water Color&quot;</value>
                  <value>&quot;Boston Canvas, Blue&quot;</value>
                  <value>&quot;Boston Canvas, Easy-Erase&quot;</value>
                  <value>&quot;Boston Canvas, Fluorescent&quot;</value>
                  <value>&quot;Boston Canvas, Water Color&quot;</value>
                  <value>&quot;Boston Highlighters, Blue&quot;</value>
                  <value>&quot;Boston Highlighters, Easy-Erase&quot;</value>
                  <value>&quot;Boston Highlighters, Fluorescent&quot;</value>
                  <value>&quot;Boston Highlighters, Water Color&quot;</value>
                  <value>&quot;Boston Markers, Blue&quot;</value>
                  <value>&quot;Boston Markers, Easy-Erase&quot;</value>
                  <value>&quot;Boston Markers, Fluorescent&quot;</value>
                  <value>&quot;Boston Markers, Water Color&quot;</value>
                  <value>&quot;Boston Pencil Sharpener, Easy-Erase&quot;</value>
                  <value>&quot;Boston Pencil Sharpener, Fluorescent&quot;</value>
                  <value>&quot;Boston Pencil Sharpener, Water Color&quot;</value>
                  <value>&quot;Boston Pens, Blue&quot;</value>
                  <value>&quot;Boston Pens, Easy-Erase&quot;</value>
                  <value>&quot;Boston Pens, Fluorescent&quot;</value>
                  <value>&quot;Boston Pens, Water Color&quot;</value>
                  <value>&quot;Boston Sketch Pad, Blue&quot;</value>
                  <value>&quot;Boston Sketch Pad, Easy-Erase&quot;</value>
                  <value>&quot;Boston Sketch Pad, Fluorescent&quot;</value>
                  <value>&quot;Boston Sketch Pad, Water Color&quot;</value>
                  <value>&quot;Breville Blender, Black&quot;</value>
                  <value>&quot;Breville Blender, White&quot;</value>
                  <value>&quot;Breville Coffee Grinder, Black&quot;</value>
                  <value>&quot;Breville Coffee Grinder, Silver&quot;</value>
                  <value>&quot;Breville Coffee Grinder, White&quot;</value>
                  <value>&quot;Breville Microwave, Black&quot;</value>
                  <value>&quot;Breville Microwave, Red&quot;</value>
                  <value>&quot;Breville Microwave, Silver&quot;</value>
                  <value>&quot;Breville Microwave, White&quot;</value>
                  <value>&quot;Breville Refrigerator, Black&quot;</value>
                  <value>&quot;Breville Refrigerator, Red&quot;</value>
                  <value>&quot;Breville Refrigerator, Silver&quot;</value>
                  <value>&quot;Breville Refrigerator, White&quot;</value>
                  <value>&quot;Breville Stove, Black&quot;</value>
                  <value>&quot;Breville Stove, Red&quot;</value>
                  <value>&quot;Breville Stove, Silver&quot;</value>
                  <value>&quot;Breville Stove, White&quot;</value>
                  <value>&quot;Breville Toaster, Black&quot;</value>
                  <value>&quot;Breville Toaster, Red&quot;</value>
                  <value>&quot;Breville Toaster, Silver&quot;</value>
                  <value>&quot;Brother Copy Machine, Color&quot;</value>
                  <value>&quot;Brother Copy Machine, High-Speed&quot;</value>
                  <value>&quot;Brother Copy Machine, Laser&quot;</value>
                  <value>&quot;Brother Fax and Copier, Color&quot;</value>
                  <value>&quot;Brother Fax and Copier, Digital&quot;</value>
                  <value>&quot;Brother Fax and Copier, High-Speed&quot;</value>
                  <value>&quot;Brother Fax and Copier, Laser&quot;</value>
                  <value>&quot;Brother Fax Machine, Color&quot;</value>
                  <value>&quot;Brother Fax Machine, Digital&quot;</value>
                  <value>&quot;Brother Fax Machine, High-Speed&quot;</value>
                  <value>&quot;Brother Fax Machine, Laser&quot;</value>
                  <value>&quot;Brother Ink, Color&quot;</value>
                  <value>&quot;Brother Ink, Digital&quot;</value>
                  <value>&quot;Brother Ink, High-Speed&quot;</value>
                  <value>&quot;Brother Ink, Laser&quot;</value>
                  <value>&quot;Brother Personal Copier, Digital&quot;</value>
                  <value>&quot;Brother Personal Copier, High-Speed&quot;</value>
                  <value>&quot;Brother Personal Copier, Laser&quot;</value>
                  <value>&quot;Brother Wireless Fax, Color&quot;</value>
                  <value>&quot;Brother Wireless Fax, Digital&quot;</value>
                  <value>&quot;Brother Wireless Fax, High-Speed&quot;</value>
                  <value>&quot;Brother Wireless Fax, Laser&quot;</value>
                  <value>&quot;Bush 3-Shelf Cabinet, Metal&quot;</value>
                  <value>&quot;Bush 3-Shelf Cabinet, Mobile&quot;</value>
                  <value>&quot;Bush 3-Shelf Cabinet, Pine&quot;</value>
                  <value>&quot;Bush 3-Shelf Cabinet, Traditional&quot;</value>
                  <value>&quot;Bush Classic Bookcase, Metal&quot;</value>
                  <value>&quot;Bush Classic Bookcase, Mobile&quot;</value>
                  <value>&quot;Bush Classic Bookcase, Pine&quot;</value>
                  <value>&quot;Bush Classic Bookcase, Traditional&quot;</value>
                  <value>&quot;Bush Corner Shelving, Metal&quot;</value>
                  <value>&quot;Bush Corner Shelving, Mobile&quot;</value>
                  <value>&quot;Bush Corner Shelving, Pine&quot;</value>
                  <value>&quot;Bush Corner Shelving, Traditional&quot;</value>
                  <value>&quot;Bush Floating Shelf Set, Metal&quot;</value>
                  <value>&quot;Bush Floating Shelf Set, Mobile&quot;</value>
                  <value>&quot;Bush Floating Shelf Set, Pine&quot;</value>
                  <value>&quot;Bush Floating Shelf Set, Traditional&quot;</value>
                  <value>&quot;Bush Library with Doors, Metal&quot;</value>
                  <value>&quot;Bush Library with Doors, Mobile&quot;</value>
                  <value>&quot;Bush Library with Doors, Pine&quot;</value>
                  <value>&quot;Bush Library with Doors, Traditional&quot;</value>
                  <value>&quot;Bush Stackable Bookrack, Mobile&quot;</value>
                  <value>&quot;Bush Stackable Bookrack, Pine&quot;</value>
                  <value>&quot;Bush Stackable Bookrack, Traditional&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01kznmu1fcml6r17xizj2063xxzg].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01kznmu1fcml6r17xizj2063xxzg].[Product Name (group) 1]</rows>
        <cols />
      </table>
      <simple-id uuid='{D25FFC48-41F4-49B0-8683-AEE809A9B245}' />
    </worksheet>
    <worksheet name='Group3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - EU Superstore)' name='federated.01kznmu1fcml6r17xizj2063xxzg' />
          </datasources>
          <datasource-dependencies datasource='federated.01kznmu1fcml6r17xizj2063xxzg'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sales (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sales]' default='&quot;above 6&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;2 to 6&quot;'>
                  <value>2.9550000000000001</value>
                  <value>3.3299999999999996</value>
                  <value>3.9900000000000002</value>
                  <value>4.0800000000000001</value>
                  <value>4.2450000000000001</value>
                  <value>4.4550000000000001</value>
                  <value>4.5</value>
                  <value>4.5300000000000011</value>
                  <value>4.5600000000000005</value>
                  <value>4.6500000000000004</value>
                  <value>4.8000000000000007</value>
                  <value>4.8900000000000006</value>
                  <value>5.0250000000000004</value>
                  <value>5.04</value>
                  <value>5.085</value>
                  <value>5.5949999999999998</value>
                  <value>5.7000000000000002</value>
                  <value>5.7450000000000001</value>
                  <value>5.9100000000000001</value>
                  <value>6.0</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01kznmu1fcml6r17xizj2063xxzg].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.01kznmu1fcml6r17xizj2063xxzg].[Sales (group) 1] / [federated.01kznmu1fcml6r17xizj2063xxzg].[none:Category:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{A0B4F315-59EC-42FD-A8BE-199140B68CC7}' />
    </worksheet>
    <worksheet name='MeasureNamesValues'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - EU Superstore)' name='federated.01kznmu1fcml6r17xizj2063xxzg' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Measure' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.01kznmu1fcml6r17xizj2063xxzg'>
            <column caption='Selected Measure' datatype='real' name='[Calculation_250512742152462338]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 3]&#13;&#10;when &quot;Sales&quot; then SUM([Sales])&#13;&#10;when &quot;Profit&quot; then SUM([Profit])&#13;&#10;when &quot;Quantity&quot; then SUM([Quantity])&#13;&#10;END' />
            </column>
            <column caption='ProfitRatio' datatype='real' name='[Calculation_810647945463029761]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Profit]/[Sales]' />
            </column>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_3CE1191D3F724472840A035A8FFD3264]' role='measure' type='quantitative' />
            <column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_B033A29162DE4EE6B89D233817595093]' role='measure' type='quantitative' />
            <column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_E67E1A2D227E4114A939FFE6191FC946]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_3CE1191D3F724472840A035A8FFD3264]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_3CE1191D3F724472840A035A8FFD3264:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[People_B033A29162DE4EE6B89D233817595093]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:People_B033A29162DE4EE6B89D233817595093:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Returns_E67E1A2D227E4114A939FFE6191FC946]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Returns_E67E1A2D227E4114A939FFE6191FC946:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_810647945463029761]' derivation='Sum' name='[sum:Calculation_810647945463029761:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_250512742152462338]' derivation='User' name='[usr:Calculation_250512742152462338:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01kznmu1fcml6r17xizj2063xxzg].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.01kznmu1fcml6r17xizj2063xxzg].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01kznmu1fcml6r17xizj2063xxzg].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01kznmu1fcml6r17xizj2063xxzg].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{A076A290-D3BF-4D4A-B669-9B40E14F06D8}' />
    </worksheet>
    <worksheet name='P2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - EU Superstore)' name='federated.01kznmu1fcml6r17xizj2063xxzg' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Measure' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.01kznmu1fcml6r17xizj2063xxzg'>
            <column caption='Selected Measure' datatype='real' name='[Calculation_250512742152462338]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 3]&#13;&#10;when &quot;Sales&quot; then SUM([Sales])&#13;&#10;when &quot;Profit&quot; then SUM([Profit])&#13;&#10;when &quot;Quantity&quot; then SUM([Quantity])&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_250512742152462338]' derivation='User' name='[usr:Calculation_250512742152462338:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01kznmu1fcml6r17xizj2063xxzg].[usr:Calculation_250512742152462338:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01kznmu1fcml6r17xizj2063xxzg].[usr:Calculation_250512742152462338:qk]</rows>
        <cols>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{C5BF8E6F-B90C-429A-A3AF-917943D5592C}' />
    </worksheet>
    <worksheet name='Parameter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - EU Superstore)' name='federated.01kznmu1fcml6r17xizj2063xxzg' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top Criteria Number' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='7'>
              <calculation class='tableau' formula='7' />
              <range max='10' min='2' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.01kznmu1fcml6r17xizj2063xxzg'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Country:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.01kznmu1fcml6r17xizj2063xxzg].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01kznmu1fcml6r17xizj2063xxzg].[sum:Sales:qk]</rows>
        <cols>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{17D9129E-052A-43B0-B1F4-C33E441D245E}' />
    </worksheet>
    <worksheet name='Positive Set'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - EU Superstore)' name='federated.01kznmu1fcml6r17xizj2063xxzg' />
          </datasources>
          <datasource-dependencies datasource='federated.01kznmu1fcml6r17xizj2063xxzg'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Positive Set]' derivation='InOut' name='[io:Positive Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01kznmu1fcml6r17xizj2063xxzg].[io:Positive Set:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01kznmu1fcml6r17xizj2063xxzg].[sum:Profit:qk]</rows>
        <cols>([federated.01kznmu1fcml6r17xizj2063xxzg].[io:Positive Set:nk] / [federated.01kznmu1fcml6r17xizj2063xxzg].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{C4786EC6-87C0-42A9-9C06-DCE238085E20}' />
    </worksheet>
    <worksheet name='Region Wise Count Of Orders'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - EU Superstore)' name='federated.01kznmu1fcml6r17xizj2063xxzg' />
          </datasources>
          <datasource-dependencies datasource='federated.01kznmu1fcml6r17xizj2063xxzg'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_3CE1191D3F724472840A035A8FFD3264]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_3CE1191D3F724472840A035A8FFD3264]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_3CE1191D3F724472840A035A8FFD3264:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01kznmu1fcml6r17xizj2063xxzg].[__tableau_internal_object_id__].[cnt:Orders_3CE1191D3F724472840A035A8FFD3264:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.01kznmu1fcml6r17xizj2063xxzg].[none:Region:nk] / [federated.01kznmu1fcml6r17xizj2063xxzg].[none:City:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{778BD270-B6B9-4152-80B6-FF749F9CE59D}' />
    </worksheet>
    <worksheet name='RelativeDateFiltering'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - EU Superstore)' name='federated.01kznmu1fcml6r17xizj2063xxzg' />
          </datasources>
          <datasource-dependencies datasource='federated.01kznmu1fcml6r17xizj2063xxzg'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Order Date:qk]' included-values='in-range'>
            <min>#2015-08-15#</min>
            <max>#2016-07-18#</max>
          </filter>
          <slices>
            <column>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Order Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01kznmu1fcml6r17xizj2063xxzg].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{50330D83-34DB-4D0A-A9E0-5E23369836E3}' />
    </worksheet>
    <worksheet name='Top/Bottom Set'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - EU Superstore)' name='federated.01kznmu1fcml6r17xizj2063xxzg' />
          </datasources>
          <datasource-dependencies datasource='federated.01kznmu1fcml6r17xizj2063xxzg'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01kznmu1fcml6r17xizj2063xxzg].[Sub-Category Set]' />
          <slices>
            <column>[federated.01kznmu1fcml6r17xizj2063xxzg].[Sub-Category Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.01kznmu1fcml6r17xizj2063xxzg].[sum:Profit:qk]</rows>
        <cols>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{A13489AD-1954-4320-ACA0-B12F5F345F03}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Group1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[:Measure Names]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[Product Name (group) 2]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[Product Name (group)]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Product Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC988A29-7E8D-406C-BE7A-81010F28B49B}' />
    </window>
    <window class='worksheet' name='Group2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[Product Name (group) 1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C35009B1-7926-4D2C-AFE3-CF276A3D8F59}' />
    </window>
    <window class='worksheet' name='Group3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[Sales (group) 1]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[Sales (group)]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Category:nk]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1AC44EC-CFAB-445A-BC2A-49AD2BCAA056}' />
    </window>
    <window class='worksheet' name='Top/Bottom Set'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.01kznmu1fcml6r17xizj2063xxzg].[Sub-Category Set]' type='setMembership' />
            <card param='[federated.01kznmu1fcml6r17xizj2063xxzg].[Sub-Category Set]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[Sub-Category Set]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[io:Sub-Category Set:nk]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{53083F70-0B36-463B-A6C8-5286006FC1EB}' />
    </window>
    <window class='worksheet' name='Positive Set'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01kznmu1fcml6r17xizj2063xxzg].[io:Positive Set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[Sub-Category Set]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[io:Positive Set:nk]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[io:Sub-Category Set:nk]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93C10625-2283-41DB-9998-5B22766BECBF}' />
    </window>
    <window class='worksheet' name='Combined Set'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[io:Fixed Set:nk]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[io:Set 1:nk]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[io:Sub-Category Set:nk]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B0E59B80-6EAE-438E-9C20-9FDC0ACC9E66}' />
    </window>
    <window class='worksheet' name='DateHierarchy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[:Measure Names]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF1EDB1C-776B-45B1-8126-8E0CD6996AEF}' />
    </window>
    <window class='worksheet' name='Region Wise Count Of Orders'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{292C70E3-CB26-4799-97E1-6CA113B66A10}' />
    </window>
    <window class='worksheet' name='FilterSort'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Sub-Category:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.01kznmu1fcml6r17xizj2063xxzg].[sum:Sales:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Ship Mode:nk]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1EF90FCB-E64C-4459-95E1-7E26F58BF620}' />
    </window>
    <window class='worksheet' name='DiscreteContinuousAxis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[qr:Order Date:qk]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[tqr:Order Date:qk]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D06F6EB6-FF4D-4B2A-8DF2-F0E803611E09}' />
    </window>
    <window class='worksheet' name='MeasureNamesValues'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.01kznmu1fcml6r17xizj2063xxzg].[:Measure Names]' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2A87A6F0-96BF-44F8-B3C9-E20C17FE4453}' />
    </window>
    <window class='worksheet' name='RelativeDateFiltering'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[dy:Order Date:ok]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Order Date:qk]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7BDDA989-55E0-4D55-A70A-314FB512A155}' />
    </window>
    <window class='worksheet' name='CalculatedField1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{411680C0-D32C-46C8-B0F9-048B80792FB7}' />
    </window>
    <window class='worksheet' name='CF2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Calculation_810647945463685122:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Calculation_810647945463685122:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Calculation_810647945463685122:nk]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4550BCA9-C869-4473-ACA1-D0980FED6AE4}' />
    </window>
    <window class='worksheet' name='CF3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Calculation_250512742146846720:nk]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Product Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C99F3405-DA8D-4F53-8D80-FC0AE5024269}' />
    </window>
    <window class='worksheet' name='Parameter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='0' param='[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{560730D5-A3EA-4F7E-AEFE-E102B4C49EAD}' />
    </window>
    <window class='worksheet' maximized='true' name='P2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 3]</field>
            <field>[federated.01kznmu1fcml6r17xizj2063xxzg].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{161F03F8-E24F-4299-8535-75459EB1EAE5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='CF2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CF3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd5gc1ZW336qu6py7Z6Yn56RRGklIKOcAIkmAwKQFYxuM4+7a611/u7Z3
      nbC9OLDONhgwUUIEARISEspoNIqjOJqcQ8/0hM65vz9GBAlJYEnI7E6/zzPPI3VV1z116/5u
      3Xv7nHuERCKRIEmSUYr49zYgSZK/J0kBJBnVJAWQZFSTFECSUU1SAElGNUkBJBnVJAWQZFST
      FECSUU1SAElGNUkBJBnVJAWQZFSTFECSUU1SAElGNUkBJBnVJAWQZFSTFECSUU1SAElGNUkB
      JBnVJAWQZFSTFECSUU1SAElGNUkBJBnVJAWQZFSTFECSUU1SAElGNdKFDg4NDTEwMHClbEmS
      5IojXGhrxGAwSDAYvJL2JElyRbmgAJIk+b9Ocg6QZFSTFECSUU1SAElGNRdcBTo/Xaz5yn08
      ejiIKAqIkobU8qu59fNfY8UEM4pLMilBLBohEo2jkFXICuGcZ1X9bBl/TH2Ux/+h5G+8fJyI
      6ygvPPooz+9pwq+wMW7hg3zrm4vIuAhbE9EgHXue4AePrKXPNoG7vvkIK8v+5gt9wrjY/j8/
      4PdvHKTLF8YfFlCrZZQqLSt+tIEvTzn3twYPvsB/bx1g1uKVXDM+7cyDbc9y3z0tPLjt20y7
      TFa624+xZe2f2NacIB6Lk0BEoRCwTLqJe5bPoMCuukwlvc9FCmCERd9dz3cXaYn6nOx7+mf8
      /rH1THj0DoovyaQgHQff4JW3Wym67nMsH2u6pKudTdzfwAsPP8xG42389tXrycRHx6FaLnat
      K+x3svP19Tjuf5LfXJ95aRX6iWFj7ld+wdyvAAd+y/V/VPLwI3czRq/i3N3L3wdj9lhWfP1X
      rKCPwztP4RMzqJxZgPYTLPOSn1ciAYJCwpiZhf2kAMSJBHwMufpxB2MkBBmdxYbNpEMZGaJj
      II7FLOHpHyCizyBD66OnJ4rRocLX7yaht+GoWMideVHUZhMkYgQ9g7gG3QQiCRRaK+mpJhLv
      lR8n7OmjzyNhc5iRwj4G+l14QjEESYvZZsVsUL/3VnLtXs0rnll8+9+WkqVRIApGcmdOhUSc
      aMjHYF8/7lAMUanHbLVi0imJ+wfo9UaQ4xECwRCRuIQpLQObNkh34zHae0FDgPa2Tiwpaaij
      w7hcQwSiAkq9BbvViEYZYahzkITJiMI3gCusIyvLghgcord3gEAUZLUBS4odoxTBPejGF4qQ
      IEIwEEXUWUmzG1HLIjHfAL3OIQKxBAqVidQMO+p4EHe/kwFfBCQNJqsNi0HNeV6gH3iAcaIh
      N86eAQLROChU6M1WbCbdyPFYCHdfFy1NHmKCBmtaKiaNdMbYORGPEfYP4uwbJhQTUOnNWK1m
      dMrLOcIO4XbH0arieIbd+CUT6WYB90AMvV2PRJxoKEQwGENl0iNFQ/i8Hrz+EHFBic5sQq+W
      UQhnVsglCWCw9QiHD6sIDLZwYH8XGUtuIJcoA62HeOOFtezr9BKNSNimLOczNy9kXN/r/Mef
      nSybb6d1735CM7/BP+Zt5nvfaGX+v5XRtrUB3cybuVa9nzd2Oan4zDeYZWqhav0rbKg6hcsv
      oC+7li99bvF7Agj1N7L79dW87argns/NQTy+kWeee5vOAIi6Ihasuolls0oZeY/EaWuqQ1ly
      J3lqCfG9ukgQC3to2v86a9bsoCUQQ9RmUDn/Oq5fMAnVkRf50ZvdFKgTuJzdtHYMkXPPD/ne
      smHW/+qv7GwZgGd+TN/BchbdeCvmpnW8sfUYPcEE2sxJXL/yBmZVDPLq9x/HNXs6Kd2H2eu7
      im//6xzcW57n6c019HpjaG1FTL/hDm4YF2Dnsy+zo9mHIS1Md20Lg5b5PPTVW5maFuLQG3/l
      hbcbGY7GMWXN5q6vriKz9x3WrXmN/e1eEnIKY+Zew43XTCffKF/4IcYjDLfs5K9/3EjTcJCI
      Qk/+1EXcdssyUgA8HRzY9BwHvS66hzVMuONBPruwHPN7VRcn4uumZsOLrN11Epc/gTG7kkU3
      rmTB+DTUl00DHWzf2ktpqpdDx2rpcCzmS4sCrH/WzZKvzsNOFFfLKU6eHKboxhkYnc3UVFdz
      tKWPoMJCwaRZzJlUgEUjnfHWuyQBNG17hiePSAgKLanl05idrSKSAJUlgwnzV1AsKAi3VbGm
      +jgnWsZTqgN8zVQdtXPHV37EZIcO/4k4wWAndc3jWPHQvzIuNUrzzv2nSwjRtudNtpyCWfd/
      j0Vj7USG/UgGFf2At+Ugb60+yjbPVXzx6zdREGxmW1MjgzlL+fLKadgUAgqTHuV7FseIRRNo
      1GrEM3qCOL6+Rqo27UJa+E/8/JosBqrW8uTb29mdns1cAAyULL2VRRMdtD/3VR441ICwfDH3
      /fLfkL/9nyQ+/xhfmOijuWo9a3a34Zh3K4vNQxzc8DZ7qgvJz80AfDRVHyf1M1/gp1OykAc2
      8+s/7Sf1/rtZpvfRtH83+159i/KiWQBoMytZ8flrKHbv5L//q5pW1zCFztf47QY/N3/rJ1xb
      oicyPIA37OTQW2s4JM3llrsc+Bv2sv3IDvbml5E/NfXCD1EQURtzuPr625ghx3DV7aWqYQ+H
      mmaxBEBOZdI1q1hxVSrtGx7hu6/uYN7UPCrf/X4izEDzHl59vZW82+5guezk8Pb97N26l+Ky
      GyhWX0oLOwtfJ8ea9Iy7/n5uTdMSDh4693kRF431zbjIZOq8iUiRLg4erKUzLwVjpuWMRn9J
      Apj8Dz/huwu1xAJ91Lz9FE//vg/dD27H0HiE7Zv30RdXoPB20zOURTyRGOm1hQzm3bacCekG
      ROKAgFrnYMYNK5lgVQDRD5Tgwdnjx5E/nvL8DDQSaGwjzVkAhut2s6UlTNadE8lQgiiYyM4v
      IL3uKG+u68fmyGLs5MkYjebTdypjsZkZOtrFUDSGKSExooMowUA/HreN8ZWlGGQw5BfjMLhw
      ugYJGgG9lTSLHo0ko9NpEIRzjC3iAdwDnbSc6kSQttEjA2orOek2NOKI1Zmzb+a6iVnoJJFQ
      Vx0nhty4qzbjEgHU5FdkoI2P/NtotmI2qVFGNKglCQXQ19IIU25hXp4eSZSQLHaiPSdpa6jD
      GTCy3T9SP9q0MTgMH939xqNhumr3sGVjC3FZIjjUhUtyEE8kRipZZ8Ck16CStRRVTiDtyaP0
      RqLE371ALEKwp4lapxPPO2/RKQCCifz8FNTx85d7USSsjJ8/jfw0HaJwgd9vvUMM9HdS3x7F
      5WoZ+UxKJyGLnP2tS5+zCSAo1RhNeiRvP0N9fTiPnaTbPJsvPjgfW90b/HR16/vnG2zYtKeH
      HwkAEYXCjs16rrUjNQajjLulix7XMLl6HdFgBIVaRQLIWPwQ/5j3No+ue46d+V9hYbaW1KKZ
      3J42gd7WI2zduImNQ2BxXEfp6bl0VuVc8rbsZdOBSm6bVYKBCJ5eJz5Zj1rjo7Ojl2CGBb/L
      iTsYJ0Wn/fiVJMiotVYyS8cz4d4vsKTUjBhy440o0aibAT12qw6FYqRhCqYUMi25zL/nn7ih
      xIIiEsAfDCPGndSfpwi9zQ4HT1HvmsTEDIF4wE8EFbb0XIoyVvG12yZhl6N4fUFQfPSqSTTo
      o7ZqM4Ol3+ZHd5bTv/9V1mw98v4J8TjxeIJ4zEvnqSaGLGaskoQQefeeFUjGFHIzK1hy/5dY
      mGeAkI9ABGTlOYu8eIw2bBrpvXmNkAAhFiESSxCL+hge6Gc4JIOsRGPNYkJ2OdMnZqOX4gSH
      vUT12g+tUF7aEGj7MzzRIZOIBhnq6sAwYyEFKXp6U8yI9fvY8LKH9EATLu/FrjXoyK2cTGbH
      Tna98hQnTTokSzmLF1eSAARBQeb0W1nZ9j9sWLse+80zULfs4p2WMJIYRNCasZp1qD7QEWpK
      FnDX0g5e3fYqzzSnohEUqORsrrqxjDGTM3hz09M8VWsg0N9PIrWCyuI0VE0f01xRR1pBGfkZ
      J3lnzRN0ZVlRKgRSymYybdyHT1dkTGXplF1sffpJBgosKEUZS1Ypk8Ybz1uEffw1zK9+hdde
      eJrDFhmVJospC6dSVjmFqk0v8ZdADalqCcGcw6RJkxinu7AIREkmJSuL6LFtvLS2HmGolYEQ
      ZAMgYQj3cmjHOvoOhOio76V46UqK9GrEwLs3ocSUN4EpucfY+vSTtGcZkRVqHCXjmTTGSv3h
      /fRpx1A5toBI3Xp2dNiZvWAiaRrlJa9AiaKNVONhdm3aiEFI4HMNEBKzQJdClqWVg7VVvNV7
      Aq1SQhRMFE2tQGOWz5jAK773ve9972IKV8h6VFKCBAKCQoW9YDLzFs+gwKpDbzCgF0OE0ZGW
      U0hBcQllRVmkmHSoTOmUFaZjVJ2ejIgSKnMmJWMy0Z++tiDK6K0ZZOVk40hzkJViIBEKEIgI
      aFNyKMpNQa9RY80ZR1m6hZScbLRBP5qsPGzKMENDbsIxGWveBK6aOoG8FA3Su7UtaEgvLiZN
      FWLYEyCu0JBSOJaKgnQcjkyMcR/uIBizxjJj5tWUZRpQiAq01kyKstMwaCQEUcKQVsi4HAuC
      ICKrLWQWlePQi6j0ZlLT7ChjQcJRUOjt5OTlk2EzoFYZySgpwGFSI4kgKExkFqajjgYIRhJI
      aiOO7AJyMy1o1AZSs7PIdJhQIaDQWskuzibVkUdZgYX4sBt/FNTmbIrK88lMzyZdnyAYDJMQ
      1VgcOeTlpGHSnNXHiQqUliwqihxoFSKiQsJkS0MO+YkqjTjyiikrLaQgN49UgwajUYdEgmhM
      Jm3MbK6dP55UnRJRFJH16ZSOz8WqtpKebUOKBAhFQamzkpGbR6ZFYLCrC7+cQnqqhbirnla3
      ltx8B3pZcQEBCAiiEoPZjNH47gqegChqsdn0SNJIExYFLUZDhKHhMAqNmfScAgqyU7GnpGIz
      GlBLMQKBMHFBQp+SQbbDiuascpPOcElGNUlXiCSjmqQAkoxqkgJIMqq54CpQX18fTqfzStmS
      JMkV54KT4FgsRjQaPd/hJEkumk9LqO0F3wAKhQKF4tKcm5MkORexWOzvbQKQnAMkGeUkBZBk
      VHMJrhAJIt5+epxuQnGQVDosqamYVJ+spuIhN/39A3gCURBltCY7KVbd+7/0XkHi3l6aejwj
      /xFEZI0Bq82GQYrgHvQQFtWYrHo+wiH5k7KOSMDD0MAQnkCEhEKNOSUFs1aF4qIfUQBX2yCC
      PRWzRsLvbMStziHDdHnuMBYJ4h0ewBc+83OFxojFoEUpXf62ddECiHnaqXr5CVbv6sCfAFP6
      GObfcT9LskI4+9wo7dmkGS7zo497aHnnVV7YtJ/Wfh9xpZmcMfP5zGeXU6i5vEWNEGSws4+A
      ZMRqN6E+azoU2fc77vzPQ5QU2lGJItqUIqZfczvXjw+z67n1nFJPYNXn55H5SZh2QRJEfX2c
      2LmBN97eT8tgGIXWztW3PMBNU3MxXXRk4Sle+JfHUH7ju9wzyU7V7+9jXcWzPHpL1mWxOjjY
      Tc321zjcHcXvCRBDic6gwlQ8i6XTx5JhvtzedRctAC8Nb/yO3281c893fs6iXBU+Vztd/hDu
      nlNUbT+JZdZtpJVeZgF4j7D2LwfQ3ftlfjanEFWoh2ObdjPg5xMSQC9VLzxHo/lqrr9tHrm6
      sw4LCvRj7uDh364izdfDgdf/ytp1r5Cbfe0nYczHJ+an8+AW3tjeiHX+A3xhfjmmQCONbsvf
      6W308dCl5jPn1q8yBxdH99ThF9MZNy3vUxgS6T/JuhebGPvV37I0f8SFzZhSgJEYvoFsJlxl
      QJdhgJgfZ2sD9c3deKIiamse48bkYtEJeNpqOVLXhS+mQJdSQmVlJpLHSdOJWjqGw0j6VPKK
      islO1SO/O7wJhgkmJFSxIMFoHL02nUkrbgWiBIY7qTvYTsgg4Rt0g8FOqlFFcKCXfr9ASuEY
      SnNS0CUGOXXkJB0uL5GEAm1aMZXj8tDGvPS01dOTSCE90U2HJ4YoDFLb0ka7TsXOzQGcFVOp
      yLWh/VArEpB0FrLKS8iueQfnACiJ4nO1cax6BycHg6gyyhhXlIFJIxEdbKTmaAv9/ghKYwbF
      Y8vJ1sUY7G6lscWLZAgx0OsFUyYlJYVkWNTE3R2cPNFI91AA1DaKJ04kzySdOy7B18GRw81E
      M6axcHYFdrUI6lLKLCOHI4ONHD7SgisQRWXMoHhsGVm6GINd7bT3gzk1RndXCHtuEXn6AK0N
      9bT0DBOVe2j3hcj/UIEJIv5B2k8do8EZQFRbyS4qJj/DjPKyDU29dHVFsRkidHd0M6DOYkKO
      QGdThLTiVFTECHo8uN0R9JkpqMNeXD1d9Az4iIpaUrOzSTVpkMXLERLpaqfJncuysrO7xAgD
      LdVsWldD/l3jselq2bllE0fbw6i1KkRrmLRcB6qBI7z49CZaYjI6WY0hTUVumZaB3S/z6s5u
      JKOaaDDOkaZpLFs2h7KU02FFlhLmLaji9a0beLHrOBmZBYybNJECa4zBrr28+IuNKK+5GkNf
      A83DcSxZpWSpPTSfOI6n+Hoeum0JZepOThyuobHfQyQWY2BoO0Of/zZLrU4ObvwzL7rGszw9
      hNdgQScF6ezrp9ctcfJIEMleTnHWuQSQIB72M9TjZChuY6weAoRw97VRd9RDsKWOhnArd3xh
      JdMzA+xdu5oN7TF0aoFEcA8HG6/l7pUF9B7YyFMv9VG6NItQQyNNLjNXr1jFTTOM1O/azu4T
      nXijUeJ+L3tbBb5892Qs54rL8Qzj8gvIeQ6s+rPGzcEO9rz4Ahs6EhjUEA9GONh0DXetyKd7
      /waeeH2I8iVpBPypTDUaiR7bw5vv1DOEjMYQwBkMk3t2eSEvnce2sX57Hd5YgkgwxtG2PpYs
      W0BFyuUKCevjyMFOHBovHR4/oXQzFY5Bqt92M/+0ANw97Zyqc1OYYUTV20FTXSM97iAxQaLb
      E2fqhEJseuVlCIlMJEigQPyIOUlkoItWpxd17kwWTS/GptdjNUm0r36OXYG5fOMfb2CMWSQ0
      7GVwoIHDO09gWfgvfG5uKp6aN3hiQw3VtWUUpOSMhDXKmcxcdTfad6o4eLKVIw2HOHyilzvu
      W4QOEaUhnYlL72SZupbVq9/glKmU5Z+5muiu3/Lj6n6GvUHQ6EhJT8ev0hEKeek/voUdJ4ZZ
      OgsIBwn6Etgn38Q1E7MwKNoxtrvOPwRKxAl17WXtE370kSDD/cOYJy6gPBUOImPMKmXJbcso
      HN7FIz+opmvQjS9WxdN74aZvfpHFRQZch1fzi0efZ++Mb5OHgNqSy9TldzIxcoo1v9tEf08/
      wz1NrH9rH0OWHIqzbMTam1j73BaW3zUJy3mcihOCgCAIHzoaad3BX/cK3PyvD7K4QIfz4Gp+
      9dvV7Jv+LbII4w8EUKZN5fop43GEDvGXtY3EChfxuRum4VAe5jfvPPGhRhPy9HJ481r29k9g
      VoWVYOdxag7tx1E6iYoUx8duVh+Jf4B+OY1xc+eRbVYRCQ6e+7ygi5a6U9T3RLGlmVBEB2g8
      VEt6ngOTXnnGMPDiptWWNLI0bdQ1BC54mjajghkTyzF46tnx5ku8vKGalkEPXV3dpFdeRZFR
      iSDKqC06pNAQPp+BouIctJKaNEcmNp3EkNtN6IMG67KYvPgW7v/ig9x/6xT8O55i/QkvICDJ
      GnR6LbIoIMpadAY9OrWMVqNFlBQkAOfJHWzeX8dwMAaiBo0K4vHTsXuykfSSSVxdmYPhb1oq
      EVCoLRRevYQbrqnEoQBQotMb0euVSColSkGARIKIs5vutGLGZxhQiBKG/LEU6trp6QOQUKmN
      mEwaZFlClmUUQGzQhTMqotQoUYgKNLmzuOv2aaSca/gDiDo9ZmWUUF8fg/4zf+iPOrvpTith
      YoYBUZQx5o+hUNtOT/+IzdbMUiZNnUCGXoHoHqIvYSIlJx2LTkIhS0gfKjNBJOLH1T+I2mBA
      pZAw5UxgzpzZjE2/zKN32U5p5ViyzWrECw2tgl78kQhxlQZZAFG2UlyWi+Uc28Bc3BvAMIZr
      Fpn56Uuvsi97FZPSlQSHe3AG1GdcMJDQkj1mKmllcVxtu3jxL7s4PG4M4zIy6ajeTe1cB+Mt
      CoKDXqIqK3qDm1Mnm5mb4cDd2UafN0K22cx7ixbdNWxpkygsKSDbrMZiM6KIBonGP35jdZ54
      h3p5Offftgx7oIW/Hn6G2ncPyjKyXof2vcspkKQIXr+XQChMTCMjCgLvtQFBRJUxjZvvve3M
      lR7P+ctXOrLI6j7J/vZ5XFtiZLj+EKe8ecx3AL3n/o5ks5OqVKMtmsENy8Zjl6O42pznbwT6
      TMrL0jm66wB7DpZgvyoXbaiNDm8KKfZMsrpOsK99HtcU6Rmur6HOm8f8NKBLRinr0L5bAXoD
      lqiHwR4X7mA2ioAbdzSG7YzCBJSyjhRHBjptGQtumUOWOszgkA9RvsxTbo0Bg1LxgfsWEKJh
      wrGRrV36ezpxBQ0UqjRoNAYchkImTynALMfx9Q0SUUuXSQBYGX/rF1j1yius/dUPeUUporVk
      U3ntCj4Y+RcZbmXf5s0cbvMTjnvx2ovIspooyr2bpT2v8+wj/8kaUY05ey633jOeyfMm8vKm
      3/HDXRLxuIqMsXO4ujzl/V0dEmH6at5m+xv9xOIJFLE4yiUPcMMYLXR9PMvTx16FY/82fv2T
      GjILxhK4YOC2jYKKLKrf3MQfHq6icvlnuX5aAZZLGNYqsudw7/wWXnryF+xVJBATMtnX3cm0
      1PPfgiJ1ItfMPMnLu5/jZ9VrkZVKzCnTWfXFDFTdu1j9/ClK7niAme9ubScZyZ+6gIX+Tex4
      6zF+skFEVmkoW3Q3146dx30LWnnpLz9njyKBmFCSfd0dTE2BjrMLNhczfdIR1u1+nkcOvk5a
      vpYObwjLWacpjamMnTGfmpde5hc/fAu9rMGQX8miBbMJNb7F64cCTFi4mIl5HrY+uprGslv4
      zPRUlB+5adFH1KWYRpZtHxueew61Uo0UB1llAHUKuRkW+g/vZd0LVSgkJVpjDhNnjcegOnMp
      9RIiwuIEXS3U1vfgjSZQ6e1kFRVgjvXT2+tGm1mKBRfd7W10D/gJJ0S01hyK89MwqMHb3URd
      i5NATIHGmkd5eRoKn4uOxmZ6vREUWisZObmkW7Xv/8gV8eLs7KC9d4BAJIYoG0kvLiPXKhH2
      Oulo9GIuK8bOMJ3dLoIqGznpJhIDbdQNCmQ6HJgVg9SdaKE/EENny8YY7yBonUiZNU5fdysD
      chblGYb37jLs6aGtpR3ncBhTXgWFDjPq091G3FVPdZeOieMyOEMTUR/ODide0UhGjg11eICm
      ukFUWemkmbXgbqe2rpOhYBRZl0pucQEObQy3s4fuIZnMsgz0EQ/drX2EtBbSM8wI7h5aWzrp
      84xM6gzWPEqKLPRu+D4/2j+Rf/3mLRTqP2hEnOCwk862DpzuEAlZT0ZBEZlWHYK3jdpTXQyF
      osj6VHKLCnBoYrj7eugeUpJVls7IdCdBeLiH1tZ2+jxRVBYTkjuKuaycbJOSgfo99BomUuFQ
      EQkM093cROeQn7igRGvLIDfbgcrTSqMzSmpOLimmMO0H6xiyllCYIl9g064wnkEfUVQYLe8G
      svvp64tiNuuQZQWQIBGP4etro8MVBFmDVqNFLcsY06wow14G+vpwuQPEkFDprTjSLGiVyZDI
      /zNE/fW8+PCLGO77MsvyDZe4J+uVxe/3/71NAJIC+F9NIh5ksMeLxmE/ve/Q/x6SAkgyqvm0
      COB/Wb+RJMnl5YKrQD09PXR3d18pW5IkueIkh0BJRjXJIVCSUU1SAElGNUkBJBnVXKQrhJ+2
      /VUMZ81hnEMC4oR8fTSfaCSRPYlyx+XMigC4Ozjc7Meek0W65cNbXF8acUK+Do7tOM7IDkgi
      CpWWlOwCCnMyMKoul0P7ME3VTcRzislN1SOfs+uJE/YO0NFYR0uvh6hCgzWzgKJcBybNh/1Y
      rgSJsJvOpnqaOvrxxxUY7LmUlOVj10jv+0QRxTfYSWudD/uEMaRe5OMP+wbpbq2j5yxfKpUt
      h8KsVAxnh+RdBi5SAEPsffInnLhx2nsC8PXXsuHJx4it+O/LIIAIg22nqO8Jk1Y0ltz+Azz/
      YgfTb72JZRYtrqMbOSFNZnapDcUF3QI/DlG8rgOs+dlTeGZNJUsD0YCXsLGAOdfexPwxtsuU
      +K6DHY8/S3jVQ9xuO7cA4oEhmg5s5vUdpwjJKhSigNgwSGLRLCYWCjRuryVeNJaidCOXNf3W
      eQnQdXQb67cdoz8oICgEZMVRXKr7uabciLd2C7tdecyf5aC/pYrXHmtj+g8vXgCxkI/+jgYa
      +oK4eoaICDpS0gwYI0Yy0uyfJgF80sSJBL0MDwUxRj7srda67U88o01lerH1MggAQMKQUsH8
      L/0bS1OjeBt28uSLuzhS38WMyyaAjyYy3M2xIzUMZN3AN++ciiE6QENdH7JGIEE3e559icjt
      GWSnXiEBxPo5tnM/feqp3HzvUoqNYfrrqmk5/TaKeF04B1K5XDv8aKxZTF5yJ5P/N2WJPCdB
      Fw1Hq9l9qAVvBDRp5cycNZlChwFn9Yvs7teiHuqhczCEKruSSY4Bjh1qxaOyU371AmaWjXh1
      aTRq1Go1DL97YS+1bz3HxppBuoSX+J1vN/oJ13P/LAdDbYd4e3sNvX4Bc3YFU6ZPpsieoOvQ
      O5zqCxP0eXH2OgnpSph/7SyKrJpzOmPFYxG87mEighKz2YhEhIH6/eyqPkb7YBRtxkQWLZ5E
      pl6Fr34L63bUMxCMoTI5GDN1AVeXWlCE3bTXHmDv/lqcQRnH2BnMnhQDIgy17GN9+1ZcniDG
      imWsml/wvru3ICAmwnhdvTiHQxhtKZRNTAFfCztf2cz+ziZC65/Be9TImKWfZ0mxjLtpB29u
      rcUVlbDmjmPa9MlkRtvYf7IVRcYEriqyofA1s3NzG8bJ4ylLCXFk02YOtg0RVc+EX/wAACAA
      SURBVFopm30N88ss55kMiigU4BvoxTnoId9sIa1iPmkftNdixgicJzTlMuLi5MkQOfYQtcdO
      0qEfz/KJAseqQxTPLEBHFG9fH05nAFtFAXq/i9a6k9S1uwgrLBROGE+Rw4TqrId+Sf3IiVd/
      zo9//GN+/OOf8ugf13J4YOTzeCRMOBJHZbKTmqrGdWQL2/fV0e+H3po3eGNPIyGVmRTrELsf
      f4F3uhOYjBpCTdWsf7OGPiK4mg+xv/oQne4PlqhAY7Jj1iqQDVYcDgepBpnA0Ck2P/cyx9xa
      7GaZgZM72PhmFW3eEN3Hd7F9dw09YQ0Wm0jb9jW8fXyQ8BndVhRP33HW/ebH/OQnP+cPr59A
      KpjM7AoHiY7DbK8+gTOqIyXVRODE67ywq5lAJE5w2INgsuNINaPwnGL72q00eP10ntjJ+td3
      0hrUYbcZkUVIxBNABLc3hNJoI8XYz47HXqJm+H0rZFMGE6bMoMBfzVO/+yW/eeIl9tQ58SdU
      GK0m9Eo1eoud1LR0zBqB6MBB1v55PQ0JIzajxMDRrax7Yx894WFaDu6jan8jgzHwNlez6VAd
      Lp+buo2vsrc3jjklDavKye5nX+Cg6zwPWGFn3LyZlGg62PTU//CL3z7B6wc68EXiJADX0fWs
      2fcx/dAvmSEaThyhevtBeqNqzDqZaLSXEwfaGAnLiuMb6KWtvh1PwkdvZye9AxG0JgsmbZDG
      E824PEHOHk9c0hvAkjeeygoVEMPbr8HdNZK1L6FQkIh46W08icvrprP+FMa02cw/vR2kKrWU
      GYvmkaa1UfP7J9CWzmNZrp+T6mGe2t2L+7wlasiduphpe/9AjXYeK1ZOQCVEcNZsZk9bOrf8
      161Ms8Ro3Pkir1bv5WRXCXZAbc1lwszFVKb3kTi4jWODEWJn1ISIUm0ht6KScfoYIY+TzuFu
      Gtp6YKCaXdvfYViVQapBZLDxEPWRGdw/pxBRJTDUfJyeYT/u/m6GIiK9A1fRV9tMn3IMK26/
      jnKTgkg0gSTVAUps+ZXMWTQGq2ji6J+fptULU0/nLxPVJvImLeJWWw51jS00njzKa2sG8a+8
      nllzrqLsmWNEpi/lxll5GGQY2vU2b/oq+MFtt1Kk8VO3cy2vbN1B4+zPUZKpo6engXZXKeKR
      BtS5U8g2DrLjjW3siqaQm2ZACHbTUDtMRteDTLF9uLZBRdqY2VxnyKK+qYW25hq2/vWPDN/1
      ZVZVplxK07k4fAHIL2XyxBJS9TKhYOd5zuuj6cQB9tZ50Ju1iHEP3d0W7KU52M0aPhgRcEkC
      SJ+wiGWLdECUgVY97VWHiBHF1XKCqn3HEXKmszBHoE7y0PGB4CBJrUUtiQiiiEKQ0Rt0SIog
      CqUK+d1skh+XRJyYz4NPnUFG6kg6HaPFilZuwueLYAeUag0alQqFQkYpfSCi6z1EVIYMJsxb
      xpLUGGHnEV599i1OHG5AZfaiSi9lVuUsCm0ycB3YitCp2njlL6/RO/ZWFk6XGGw7SNWWKIlI
      iEBQQGV2kGYdsWdke1UBkNDpdCglEVFWIpPgzN/hBRRqE5mlU0gvHEdlsYkn/rSdYyfaGHuO
      fV+iQ4N47FPINilRkMBot2EUG/CGLIwvzGBHeyctJ/fjblSRPSMLm97N0JCRsdctY2auAUkA
      hawiI/sC9avQYs+rwJ5TxsRJ41F1/DPP7z7JTePOqZhPFp2D0rICUvRKhAtliQwFiKot5Eyo
      oPS9BRk96Xb9h1YQP4GpVBTfkJMhj0j2+BlMrsjGrBRJXMaUmSq1hsHubtzRBDEElI4sHENV
      7KkZJOLvobWuDqcvDUeq/qMvdhYCEPF5GRocIiwqcaQ7EPwhQvpMxk2byfQppdhlEHDRdGyQ
      lMrZzJg8lkxdfCTBq8aIzRxnuGEfh04NEQ77GBz2EAx99FTR09tK1Ztr2d86RBSJRCiAL5xA
      0iiRJSUqtfd0NvYI0VgCbUEJWce3sa3FQ9jrou1YLW3RfDIdCiz5hWQJ0Lp9M0eNDvKyHJh0
      OeTn+WjtipM/aTqzZk6lIktP/HwbgHsa2b1tO+8c6cITBUnhxT0Qxagznns7lk8apQaNJL4X
      EikkBISIn0A0TtjTT0dTHR1eQGdAK4CcUJFWVMG4ijJyTDJxIf4JpEn9sJWkZReTqdnJcz/8
      Gm+XlWEfDiJcxs0BSubcRPFPn+ahe58mdfm3+dUt01l5UyN//sVXeD0kYMipZMnN11GZpuDE
      x7pihIH2XTz60G08LgmIkpbMCQtYOXcixakFLG9xseaF/+LBP0eRNRmU3HAv/5RbwsLrbfzg
      R/dzKL2AolINMgqQbJTPWMScgZdY96Mv8nhEQ+HCO/jsjfaPtEKWRSKDtaz58Sv8fDCGoEth
      3LzrWDS1GJMoMm1pCXvXPMyX1krM/aff8YXxN/DQit/wh/94kKdiCmx5U1h66w1U6EFBEeV5
      29jz7BHEpQvJSDOjEBMsuO8zNPxxLf9+/9NERTWpY6bxmftLsLQd5JVn1xGe/iAPzD2905us
      RxNo5LXH/srvnF5ikpa0ilU8eG0xKvn8AnAe28Sa16owTv8MK+cp2f3oX3hHns29q2aTZ7t8
      u7tJUi6lWVv5y8MHUert2E1WrAZAlUZZWQ7923fw+M/XERU12HImsfhaK7azXqQX6QwXxT8w
      QERrx6QWgQSxaAif2wtaCwY5RsDnwROIIsoqZGIISi1ajYZEwIUXPSatElEI4Xb6kG02tIoY
      kaAfX1BEZ9FAYCTXrEprQJXwM+SLodRq0CglhGiQ4SE3gWgcUWslxSARC/kYdvuJxEFSadDp
      9ahlCPs8hOIyGq0WWREjMDRIWGnGoDmdq5gEsWgAd/8Hdp8QFCg1OvQ6DUoxQSTow+P1E44l
      QJBQ6Y2YtDIx/yADnjAoZFQqCSKgNptQCVHCAR9eX4BIXEDWGjDqJELDPtAa0KokRCHEcK8X
      yWZDd7obSsRPf88fJBJLIIgyGr0enVqJQhSIhTwMu0fs0JhTMaoEYiE3Q8MBogkBSaVFb9Ch
      lkaeSSTgweMNImiMGLQjmSkTsRBetxt/KEYCAYVKg1ELnQde5alXQ1z/rXuZbH3XoBjhYACf
      z084GichiCg1Box6NQpRIOp1MRjXk2qUiYYD+L0xlCYjUtSP1xdEVOvRawWCQ24CggajXoP8
      seKAY4SDERKChKySTg9TIvj9CdRqGfF0kulEIkE04METjCGIEpIkoRBFlFo1iliEYMBPMHz6
      PmU1Wq0KSSEmQyKTfJAEoYF29r3+NC0TvsJnxhsuEKv7f4+kAJKMapLOcElGNRecBEciESKR
      yJWyJUmSK84FBeB2u+nr67tStiQZRcTjcT4No+/kHCDJ34XkrhBJknwKSAogyagmKYAko5qL
      dIVwc3TdizjH3MXCIiUQwz/YysEd+0lUXMvsor/dB+eDeLpq2b/rLY59cLvwzEncOLeSHNsn
      GR7xCdN9gBf2x5g+bwJZBtVl7H1iePubOLb/JNpJNzA+9bJdmGjvMTbv3Ed9pIDli6eQZ9d9
      Yr1mcLiXxmP7aD4ruECdUc6k0lysusvvuXOR9+Kl9q0X2NXy7hJpgqC7nX1vvc7e1kuf3Pid
      DRw+vJ/uqIn09PSRP6vhE0mTeTbe7lPseusl9rb43v+scRfPv7iJI13DnM9v7GPhPMprmw/T
      5Q/9bR6v56Bp4y95uvpdR/4Y/sFmDm17i9rz+fZfFFG6j21nX80etr+8k5r2QYKX0anxbESF
      jMZgwWJREhgcZGg4js5iwaRTI12WyL8P8ykNiQSlLYfKeTdwS6X5ipYbHOzkxOE9aEzzmJY3
      skm4bHRQmB/GqlX+XQLTz0XPoXVszbqRu6Z+gm7J8X4aTvmwFc9kVqCGto5B/OWZaNWfTC0o
      9VYKxs+kABdHxU9zlsiPIh6g+0QVG9/YzDFnCEP+dK67biHjc8149z/Db44pmRhroepUF0F1
      Ptfc/wAL8z5G8tpoB1v+vJa+iTdz4+RMYjVP8bN9+Xz5CzPQuGrZ8txqdrZ4UaZXMG/Z9cwb
      n4rk72L/5jd4a08tfREdY665m9tnxnjrhzWUfOdmxsng7qth81Nd5N2SxuEnHufNk32Ix/+d
      A9uu5qbrr2VSooH9zRILM7Jo2fN7Xoks5MGlFWhlGD60mt8czuOLd4/Fd3QLa17ZRbtfRXbl
      PK69Zh5lto/IkpKI4R+s5+1nnmNbowc5rZTZy25kUaWDQMM7bNq4keomNzGFkZIFq1g1J5WT
      T/+Gv7zjp1n1Y75eYydtzl3cXwYRbz9HNz9F27NH6RFzmX3t9Sy6KhddpJuq115m074GBuJG
      SpfcyT/ML0SOHuHFH+4m7e75eDe/SXvaAu66eSKmdx+jq5X6YTWG0onkc4yn6xoYnl6ETa1B
      OLGab22y8cDyOBtfOYBp/gPcMeXs1BmXk14OHAhQkh7gwN6DNJqu5p5ZItVb/Iy7pgIjEYa7
      Ouno9OO4agwmbw91NQeoqe8lKKVQMWM643JtaM5ydLokAez9w5e5/7mRYUk05GY4pGEWCYZb
      D7Nl81acKVdz80Ijrbs288oGJbqVizD11bG/xsSUFXO5eTIcW/tzntm6gIX3jT3j2t6GKt7a
      93Xe1I2EMNivvp0v3HgVY8Zq+dkLmyjKquDAYyfJf+ha1D4XRzaupjFtCXfMVtB76iAntq/H
      aF6Gct8a1h9LUD73ZpbaIGYwIostNO5twB5PMOI12UfT4Q5yHpzJlHnz6RD2opp4O0src8jI
      MBA+2saxRiWTKydRqotRveYAS+eVUK5IcGzHy/Sn/Rehzhq2bmgmZ9kdzKOHI3uPs+NtE+YV
      U3Gct5YTRIPDHH3jr5y0LeOOWTL9DYc5sW0dRts9VCitFE5ZQu50LQpnNc+/vpWDpSsZs+hW
      5tdvxZuygnuXZqFKcYCvg3hCQpdWyoKZudTv3s6pffsoLLSjqNrAEX8KM2+ahjnRzMZnHmd9
      7n9wXWY/J7Zu44AuyNjKeSyqOLO3dTXX06UQmGZ3MMFYwhPvNNPk9ZNj1yAPNrB95zsYw+VU
      zr+OsQVnZxC83Pjp66il96QfXXkl87JSicea6G5zU3a6LkM+DwNON5aEh84OJ34piymzyxGj
      LuobWhkwa0i3njmHuSQBjLnpn3hwmgaIMtx1mNefXn/a0FaGfDam3LSYqTkS46VuDr3cQWPf
      0EgKJXM2FWPHkWmREferWTP04XmDNquCJdfew5Jy44ihejtpFiPqqTdzV/1P+eMP9pO28Ct8
      Y4yVRN9edr+6lTeDJ9irEwj7hiF7Jjnj6vA1J3CMn8n8+ZNIkRNE4wKSou0cdyOi1FnJyMvH
      cbwWTeFYJpZZAeh/7xwB46Q5TP3TU+xvvZniwlqqdtmZ8dMUfPXrePWtTYQPV6EVwngGofTa
      POYEwXHeNYEE4WAT76zbzgZ/Lfv1CiJ+N3HHJBxz/Yy3DnBq5ytsOdyJxz9Eb28Jk8MCltIK
      8m0KdBllTJyQD4Rx1oNSZyS1rJIJYwNIHYfobHTj83bSvn8/m6raiBt0yARwdbkItUW5LjOB
      ICdImbSSG2fnYNZ8MHvKIG2N7cjKXNJSrOh1YygLPUdds5fpmTZkQBHSU3nzLczPtaKRrsDg
      0JcgtfJqSosc6JUi4eB5zvP003ayih1H+1CoZIREGK83A11ZHnarjg+ONS5JAIa0AoqKTodE
      yr0YlRAjTiwaRRBUaLVqFCLotFrEhItI7HREjqREJYsICCjOk41RVBtIySqgqOjsOYCRFLOI
      r6+TrogSgyLBcCKCbCxk1dd/yI1FI28MQVZjCJ7iuWoZtU6HWjXycM+9IdXHR9CNZ85Vw/y+
      upmVw9vYlbOAuzNEhk8pSR23inv+7QbyFQAiSq0ew0cMYBOJCKI6h5u/8jNuLnnfdr3cz+5n
      dtEiTuGz3/06eeG9/PqHJ5AvMHsWRBFJVqIQQ4iiMBI2mIgQDtuZeectLJk3hndHZGqTHiEu
      IsmpFJXlYjk7w8ZAG6cam9mxaRPbNz6DLIbxDnixVDew6qoM9IAipYQx+bYrl5zDnE5+hhW9
      UnHhkMhoGDGlmJk3LWdC9rsPQEJj0HJ2OM4nYLoOW0oKsUgD1Qdq8YT7qXqnGo/SQJbZ9CED
      /lZ8R57mpztz+dIPPo/j5V+wtg1UqlwyszxU7zpIUG/HblIS9g4xoLCRZ+jmyO49HGv2EA4O
      0NXnJhKNA7109USIens4saOaptPXV0gS8XCE/r5+fNH4+ylU30VQMWnOTAarD/Ly1rcYu3QJ
      qWo1+uwMbK597DsewmC3Y1AEcQ8N4glf6G4EZDmPvAIfVdv34dfZsZtVRH2DuPqH8XjiyKYU
      MjP0xAb6GQgE31uF0moNOJubGYomiEYvEG6pzCQvL0htzRGcQSXWVBv6cCctfac7I0GBdI7V
      NXd3O61SAbd957esXvMCL7zwMk//+3IUrfW0B8MjuysoJK7Awtz7iBKKD2bpREQI+wlE4oSG
      emk5dZxWD2Awow15GO7oISAbMRu0JFx9uEKhD63iXaT5ArJG916yOABBVKBSa1BJCuxjZnL9
      4qsYXP0tVl57B784nMpNK5cxLluPKKnRqt7fVk+h1KBTnRmqLChkAvU7+PXXb2Tu3Lkjf1/9
      PVVHdrDmmXqm3L6cCcXL+eevZLH6R3+lTZfBwrsfYmzXX3nwxsUsu+UBHnlpH32JHObddR9L
      Mhr47VdWsPSGz/M/bzXgDpczf2WYZz67nJVf+Dl71fkUaZWIgCWrhKvKszjyh4e48UsP88qh
      PgSFEo1KeXoTLgHFxCWsSLzEM3tmsnSOEUHQkFa4kFV3llP7xwe4fvEybv/qL9lwpJ/YB29N
      IaPte41vrbqeBXPnsnjpT6nR2Zl33z8z1fUcD920mGUrP8/Dz+/BqSrlqplZuHc9wgN3fo0/
      7nWiVOvQKEaSX09c+WXG1/6Mm667kYeerkUUJZRqzek3nIAoqVAqlShEM9Nu+yzLstv549dW
      sXT+cu74/it0BiMISKh1aj48egnQ3dWF3pDGmNIizHo9er2e7BmzmeJtobY3RExUodPI7zeg
      kJMj6x7m61/7Pm82Qsc7z/Cdb/wLT2yrx3f25T9G+1IoFCgUH0z0LSJJ4hkbGshSIeOLG/jz
      f36Hh//8Gie8JtLMEoKcxtjKcsz+ah7/yXf49+8/wtN72wmFP9zgk85wSf4uJJ3hkiT5FJAU
      QJJRTVIASUY1F1wGDQQCn5qxWpL/W4TDF1weu2JcUADhcBiv13ulbEmS5IqTXAVKMqpJzgGS
      jGqSAkgyqkkKIMmo5iKd4Vzs+v0vabv6/3HHRDUQw+M8wZa1m4jPuJ+VE65sEMs5iQzTdGgH
      GzfvocEVQZ9WzpzrrmV6SRraK+G5+CGGOfjC47y6v5XhCKBQkz52OffcPZv0v+EpDOx9kkeb
      y/nmiknoVJ/aeKaLwuds5uCON6jpOfNzffFMllw9lgzTR8RWXAQXWYMhuo9XU1/0rhNWgkhg
      gObjNcRKPg3LW1F6ju9k4/bDiCWLuT1fT6D7CCcbOxmTYUUbqeKRHzay4Kd3U6m8Uo0oRF9D
      DcHsFayclotO6GTXM4/xiD6Nn9xa8rFTvwadp6iutxGN/d9bu1AZUym7ehnpwSHqa9oIinaK
      x2Wg19uwaC9/hkj4FIdEXhoBXF0teKIWpk6exeQ8BbFgMRVhJUadBL0uGo+1M/nvsABmzCxh
      7PhyLKpysrp2cveGA3TeWkLOFbfk04ek1pGSVUQKfXi7g/jEDAqK/jdmiYz7aN23keefepGq
      ziDm8qX8w703M73Ejirew44//Zq/bDlCX1TL2OX/yDfunUC8eQsv/O4YFd/4Fgsy4vQcep03
      DnSRN/tOZmoP8/Rjz7LpUAdRcwW3fu0fWTEhFeer/8K3Om/i4bH7efTFJq7+8q+4tRxAhcFk
      xt+1i6rqg5SkTMahN48kRzj2LA/8+FmODg9Tt7KaXxvG87lf/oA5inreevyXPFPVScJcyoJb
      7uKWRfl0vfEYO9wlLLp2KeWpEs4t/83/Oz6Rhz83F/Hkk/zHT16nNSSROeEaPvvle5ma+vF6
      KkFUYTJqiQWChEkQGmrnnTWP8tj6U3g1+cxZcSd33DANh+Sh/u3VPL56E8f7YpgkL4PF0z6R
      x/bpppXNm71MLvCyef0WauzL+Y+bFLz5nIfZ903HSpj+xgbqG9zkLb0a+1ALB7ZvZvvBFnzK
      bGbccB2zyjPQS5cxJPLceKnftZW3q4aY8S9/5Es2EFo28/Dql/DeNJHA6ufpn/tFfnJ7OlpF
      At/uR3nw33t49P9NYepVJ3jxuS2MuTuVXQdaGLbMZkJ8J7/42WOs29tGJJaArl7+56sC5le+
      TbHPRc+JNoTPP8D3p8WR3gv1kcn6/+ydd4BcZbn/P+dM77MzszOzvdfsbnollR5CEroUURAV
      EEWven9Xr3hF4eq1XBRRBBSltyQkIYH0hDTSN22zJdne28zs9D7z+2MTIKQASYhc2c+fM6e8
      7znvc972PM938i38aNwNIAgEe3bx7K/+wUHbTfzwtvk89nOR7997hOte+AEzFHLiwSbe+euv
      GZz5O/7+gBwCrby7eDOvveLmuoWXoPn9ZnYdzMVW0cfTb8CCH45Gsuu33PjwSrz+Yd/43t5F
      hHxq9I/ddjxE7/Ts/PM3WfNHEUGmZdR1/48X/jwV01A3G598kEdXdBOJJkjSxxvPxZAoY4z2
      bWJ/oIpb/+tZClKgb/UjfLv2sxkOfL6JEexopbNoGvPuqeJaiYxk/BB+b/h95cd4LEI4GCbu
      OsbWd5bz1vYmQvEESRyseCaM9Ae3MT03lQ/reH8mPUAyESMaiyPKVGg0AnFJklg0RjyZJB4J
      E0lKUKo1aKRxQvEQoWgSUZtCekkBaXt2sH53FcFAgOJLStCLXURTZ/LdPyxg4eRclAIk4wmQ
      iLQKApLcHLKVH5UmT5JEQJTIkcokKHKnMv/S3exYeZQ270Qy1UqkggS5WoNGKSEQTJKIRYgJ
      MtQaDcRlEI8SjSURTWVUFa1kTVsrh3r30j5qEl+z6JF3xkiUfYs3n7idDKkAySSJZPJjs0ZM
      eeAZvlHVxZMPP0U4Ix2jSoroTYIujSkPPMovbx+FXOB44lg3e19eSzQ+LCyo0YBSJp5G5O8L
      giWDTL0KtUoJJAkH4YRSTJIEiXiCRBJIxJFlT+Cmid9gWpEeAUgmEiCKp7yfzyQiLDU9E4XY
      zo4tO2jqrGfdpr1EjankW8qZOMXE4Y1rONDURnfHHl5ZUUvFjHHYBTUp1kJy8pp5d1M94ego
      ygrVyDPyKJV0sWfjdvbWtdPT1crh7ftpi0TPklvHQe3O1bz58noOHuugs/MIO/e3o8zIJkOr
      RqoxYtV0cHhvB30DDmJSE7kFudSsW0p1UxtH9u7lgMODqSQHKzrKRpfjddawbmMXE6uK0WoU
      qKsmM6ljOU8vP0xnbw8dTcc4cuAojmScSNDDkMtN8DQq9wDSzMt56NdfI/HqT/nNiqMERBW5
      ObkMbXmT5dXNdHW30VBTR1NHBHNOJp7eWo7U1tLe0UJjp/N4RNsIIEeRcNE74KC/vYm6I4do
      9QIGM/roED2Hq6nrHMQ52E/b4QY6fIFTIsIkDz/88MOf/sZBug7uJ1Iyl4mZMiBBJOCko6kL
      dekMplRmY1UnaFj3Oq8se5cO1QRuuvFqRucYSS2uwNK5nddeeY1l6w6jnfN9vn9TGSoR5DKI
      ufrZ0+Aj79IrmFmYgkRuITtTiav2XZa9uYwVG3bQEc9h7Ph8FL0HOUQVC8Z+VIFPijTmpqV6
      HYsXLeGt9btxWmZz161XUJKmRaK0k6ao561XXmfNth7S51zOmKIcFMdW8vyry3mvJUnF5Tex
      YHoxWgnITXL8u3ax31fEFfMnkmdSIVHnUpnvY+fi13h9xWq2HmhDtFZSUSBQv+oF/rHoELKC
      MeSd0NsiTF/DEQL2iVTmpKA2FTF9gpQt/1iOq2Q2kyvzSHHv553Fi1mxdju1DikZRSVUVRag
      6j/CujcX8faODpKKJEFTFfPG56C4qPGIF5MIQw4/gkKP1a4/Pkzx09OTJCMjZViPDRDRoQzt
      ZtnyzRxscyPRZ5Jl1WMvLCLbKMPTsZ9N6zexo7qeXswU5KVjVMpO+uqP+AJdUJKEe2pYt2YL
      3dZLue3qMnT/qm30X4R/0WXQfxYJ/GEBc0YJpVNGGv//BUZ6gBG+0Ix8o0b4QnPWIZDP58Pr
      9V6ssowwwkVnZA4wwj+Fz4v66MgcYIR/Cp+XWPOROcAIX2hGDGCELzQjBjDCF5pznAT3s/ZX
      P6Vpzh+4f4qSqG+Q3UueYC0L+MFXJ6D/tJeL+enev4pX35Gy8GfXUXhuhToFZ80qXn71DfYq
      L+c7d85nQu7HlcxD065NbN0eYcI9N1NxQiqFVlY/9izLdh3FBaDQUTDrHn5452RM8rN9QxIM
      NWxi0etvsq3exsL//BpXVWTyWUtJ/F/F19fIrvVvsq/r5N91pXOYP2M0mSnnm1v8VM7RAGK4
      u1vp9yUgEcXTtJal70aZ/lAF0aZd/HX5MmJj7uX+S00cWv4cO71FzJo7l5IzyVklE0T8Tnq6
      ZITPuSofxUVbXRPJuJJE/yCNPYOU5eqHG9/Bf/DlX7r41gsPMu2ksMI4Yb+LgZ4wgZMyjocZ
      6olRPP9bXD2zBF3gMK/99lf8NvVpfrUg7cxFiLayY9VuXOYr+M4j0ynNNKL6yCERn5N1z/wb
      G+z/j8duH3WhKn9m+tbx8P+r5bI/3ct0nfJzo3kGoDZnM3XBNxgXc9FQ3UJAtFI2JhO1TIVG
      deHDIeECLINGww42L16C5JrfMTdPiSw5nq98qwokcsBHJODG4wsSOUsK+88Ebx9tvQKKqulM
      b2rG2TmIJ5SPRgmMup2nn02ikH8av3oJaoMZq82OWWbhxjmLuGfXQQILsNOltgAAIABJREFU
      0s4cseT3MOiSYxyXTU6+Ge1p/JhlGiNXfutJ5ogfden+jIgHcfV7CH0OF/9EqRy1To6aBBq1
      GkHUYUhJ+fxGhMVCPjrW/ZlXu67lkZ/loxDBUf8eS1csQzrjHoqOLeWpv7xNY3I1y195nKx5
      /84jd8/B2PMOf3r8ZTa3DKGyjObr//0oY4ni6T3Aq4/soXZrA7HcWdx53/1cP8ZA/943+dvf
      32DbUTeCbSr3/uRB5pWl0vXKPXxl7yjukO7lrYMDKHMv4a5//w8WlqjwdbXTkohiyZlAebKe
      19ob6XdUYM9QI+x/muuf1vDkk18lnyDHNv6NPzz9DvV+UChMFJReyqyPqXsSAUEQIBnHP1DP
      23/+JX/f1k1SX8Tsm7/G3dPgneef4m9rGmD9Ml56bDzf+P2l9D22Hu3Xv0TK+md40TWXJ/7n
      cg49fg/7xj7FL66x4us+zOpX/srLaxvwq1KxKHO54lu3Mn9GCb7Nf+cPf1vJ4Z4w8qzL+PFv
      f8g0nY+dLz/EU+6ruTd1B28cVHLNPV/HWPcKf39xPc1DcaSZk7jr219nvmo73/3Vy9QMDrF3
      /np+o6rkgWcf53JJLSv+9Gte2NVFQlfAzBu+wp3XXULWwCZ+/UoNliIr/oPrqbPfwUN3ziDT
      eOGHIh9PC6tXuxmb42PTus3UWK/lpwthxQse5tw7AzMR+o810HDUQ8E10zC7mtm7eQNbD3QQ
      kKcz6Zp5zKrIRCs7OSbgvAxg++N3Uy2NUXL3N8k/ZSicxiV3fgeFNMm77lFcdcMNVFoh0beW
      //r1O2jv+B0rrs5HGuhkKATBbgG5IZuZd9/HQ/d3s+bFldTtqaHTFOfNd3vJWfgTvjLahmPj
      Ezz64gbG/eT64QpI0rjqx3/ny/E23n7hT2ytbmFhcR5dHW3EwiKZ9hzypflEa/rodrkpS/+w
      TE4Cf9c7PP1UPVN+tog/VsWpW7eEdzac7usYJ+B20N/XS9C9kxfWDHL5XZNQhLwceOcZtqV+
      gz89X0CocRsrt7zN2znf5p7vfhdpYiPhCZdy/fyxWDjIU/ipfnkRVXc+yuLpmQh+B4dOlMbX
      SfWGlWwdGs+PX/wd46RHeOH3G4n6kkSOvcWfNiS4/HuP8cMsDZ3LHua//rCRN346CSIeeuu2
      U5N6HT/5n0nYEx661Qv5/phbMaij1Cx9nNV7DjD2S7fw7O8NfPeeg1z7+g+5XK8kHnCy5+Wn
      Wau6hafevBJ122ZeXPQOSzZauK8SCDazYYOfm7/2E742Lg/d+WpMnQ+BFrZsT1Jyw4PcnKEl
      Fjp0+uMSTpqa+0napvOV79iRh9vZvqOZvnQjapv+pAQE52UAs/7jDe5L/pHvvfQS22Z8nzlp
      H9+Nh5vqqSucy/9Oz0QtERF02diUXlqRolTZyMg0ovQ5UCqVyBIJBrva6WnYwMb3tvHOcSUZ
      eWYFIUAmCEhtueRbVIQdCrS64RF2MtRHR0sfriEzYW8njrgCVXc79Z1OJpXYeX8qkkgSPVrP
      0fyr+PexRmS4kMrlSE47E3Gw45Xfs21RkIEhFZPv/QU/mm0gFuiidu8ualq6+MnW44/WXsW1
      nCk7RpSMed/m7qmZKEXhpDuFPW66PCEsE6Yxwa5CHJIgkUiIA33NR+lv3M3ffr0FxfG4Vntx
      bFh9RVBjy53DTV+eSqoEYl4fbftXs3TNXjo9YYJD/cimzeB0e57RiIeOjl7GXX0FOTol5BVR
      lXGU6rYuBioFiJuYvHA+s8cXoPtn+w1EdIy+ZjIFaTokQvLMouUeJ/1tB9lWN8R7204YbDb2
      aXGy4cIZAAiYpn+F23b+mDde3Ub5fZch+8j/oiAQi0WIx2MkkhJElRpNwEHfUIhMvQIxHiZ2
      Fvl1mUKBpmAOd3/zJq4Zn4lSjBMKRJGoFXSe4ZxQbzdt3Y3UNB2l74m9w7952umt7cA9sRjT
      B8VDUChRBj14QnFssjixSJTTT1esXHb/g1xb1MmrT64mKPhwBOJYBQkGayYTL3mUn9xUjE6S
      JBKNkEQKwcHTXCeFDLvuuNzSyYgSCTKJSDQYIBhLoIzFiMXiJAG5Uo2mbD7f/PINTM43IU1G
      CQZiiIRokcmQ222kHn+zzqYDvFfbQ/GtP+fhaXYaFv+cV13HbyIRkQhhgqEE6JIIghSlUoHX
      5SQYS0MSDOALhxGVCuREQGvCbNCeJIf1T8Now6qW8WGpXyGRIJFIkkhECAX8hGKAKKK0lzKr
      tJxJpanIxSSxUJiEXH5Kgz/vaskUNmbedCPVj73Ba9tLuCHzw/8qMFqtxI42s2/7u0SqRjEq
      ewJXKJ/n7ZUb8VamIk+EMBdOOePSYEpOOUWyo+zbshbRU4hZHscfMTFuZsUZzogw0NeNW17E
      3Q89wPWVRiBB1/rf8/MNrfR5feScOFQQkeePYXzkHVatyqYvNUJnYx9eUs9YX2Xe1Xz72zH+
      8MSrPJtIcs+8KkpGj+Ptda/xpmE2BVoIJhWkZZdQ+Sl1o+U6Ezm2VPbu28TyjX5yaKHT6ScV
      SC2ZQMnaFaxZuw5fWTpqIYI/nsakqaeuQsmUanRKgaHWI+yXttLY4sB7YvlJm0ZB+iDVa7dh
      LrCTU5pP0ejxbN6xmNWKKhSORur8AgWTCrBQd2ohkx5a99fhs1UxKl05PA8iRtDdQ0ujC3Vu
      KbmaAB3tXXhkFnKybGg/I+MRBC1a+TEajtRijPvpbmrDmcgErRmLrIW6Y/vZG87AqBCI+hKk
      lBeQrlOftPl1jiGRMXwDDlTFl1BmkyHTpWFTumgbVJBXkoo0nsScPYockxqdQUtiqIf6mlr6
      5ZkUF1YybowVb/0edh6oo9MhIWvMaGySAIGEmZJxuegTUQL+GHJzOvmVZRSmKgn3NFJTU0tT
      xxBJWxFV+VakgQFculHMKDFDPEowGESamkOOKkZCkkX5uDJMCgABrVqGd1DAUpyDTR6mN5rK
      pHG5GLXppBsd1OzeT2O/D6kxk7zMbArK8zG9P1mI4h0Mo8svJMduQGMtZkJRnIPbWtCPHk95
      UT6poXYOHTrM0eYeglIzOUV52NVJPB4w5GSTnWZEQQR3bwRzZQW5JuXwlywRJ+gZRJE1iVGZ
      RjQaJYnBYxw+0kjfYD8dgxKyqiqpGltFWaqIo6mWQ7X1tHR5UeRWMiZbT8znJmYuY0LecEY+
      hUaNLOKjueYIHUENqTYDqTmllOdmoNdbSTO6aThwgPqWEJmTJ1Kal4fZW8vOfUfoCmipmDGX
      yybkoo4HcIblpOfkkGXRIAESrh388efP050znSk5muMGEMHde4Rtaw8RTi+lQDHIgZ07qfUo
      ycxOR3eaFcyzO8PFiYQSyNV6Ukya40OWGH6/BKtVj0x2XE4WDRpJJ4drWhkIgC41iyxbCpaM
      DGx6JQl/L82NrXT2u4iorWSnW9DJpSdNgkec4T5PxHz0Nh1i98FOwkDY2UlLxM6sq69karGF
      z2Yl/NMQpWvVn3iyZTT33z2TDKX0nDNUfF6c4T4PI7sRTiAMpzyJ+pz0++OI2ixmXDKFsXnm
      z0HjB0gS0Y3i5humkHYejf/zxEgPMMI/hc9LDzDiDDfCF5qzDoGGhoZwOp0XqywjfIGIx+On
      3Ze42Jx1CBQKhQiFQhezPCOMcFEZmQOM8IVmZA4wwheaEQMY4QvNiAGM8IXmHDfCuln0nbt5
      otrDJQ+t4Zdz9QgkiTma2fj8L/jpqiRX3PEtfnDXFM7sDpMgEgiQkF94R6ve/StYsnEvtkv/
      jZvGfoxgXzJJLOSidt2zPPn8BhqHBIx5k1hw+20snFWK4TPRoogR9kUQ1CrkH3WKG6hh6T9+
      z6+XNaCQSZDp0hg//x6+fsNMCiz1PP3lZ5F99yHuHG9FcdF1MpIkok4OLv4zj7+2nVYP2Mpn
      c99//pg5Ged/dU9HDRuW/JV3W5Ik4gmSiEgkAinjruMr86aRb1F8/EU+JefnDj13Lod3VxOa
      OxsVSbweL0G/jFkzSz7B2d288Z3b6bxnCz+adj6lOE+SEVwta3j5pQEu/9VinsgX6D+8h7q+
      Hnr9pRg+dYDzJ6GaP1z3NOnPPM2d+ad5BYYyrnngfh68YyzSpg08+fhqVqalcsdV/+St10SQ
      Y4t/y3+vVnLXY4uZlyfD3bGXxgu0UKjPquD67z3O9QxwYGsDfjGdsZd8jjXCJBNmM/359zgc
      ns0kWQCPp4c+fzmFhXHajx+TiPgZcjoZ8odJikr0ZgsmbQJnWweOUAJ3dyONzVK0lgxsGgh4
      Bhl0BYgiQa03YTJqUUqjDPW6iKs0SMIehsIKbOkmFDEvvb0OAtEkErkGY6oFo+ojVUqE8Tid
      uDwBogkQFTqsNjMamWR4Kz+ZIOZy45VasaaKCKKKjLGzGf6gxQm4BvEEY8RiMSKRGILGgFEa
      xev1E0lK0VozsOskxCJ+nL0DeCMJkqIMjcGEKUWHJORiwJ9Eo4Cg20NCrSHm7sUdD6Job6IJ
      OQZ7HpbTvmUJ2oJxTClZzXvOIfzBFCBBxOegq81HIpFEYUwj3aJGjEcJegYZcAWIJiWo9CmY
      UnSopFHcfUOESBILhwhF4ogqE2lpRhRCkqhvkN5+DxFEFBojZkvKmWVkHTt45S03l33v37gy
      V4sgChhzpjPhfBrRJyaMx5NArUjgdXsISA2kGQU8zjhaixYpCWLhMKFQHIVBizQWxu/z4guE
      SQhyNEYDWqUMiXABNcIEaTnjK/7G3rowE4r8uPvacReWUsaRYQOIB+g7vJE3V2zkYKeXpFRH
      9qQF3HGDiR1/fp53OyME3vgVzi0mxt3yQ+7I62Pjm6+x6tAAUUGOpWgq1yy4mslFTtb+4Xna
      88uwBJo54Cnnge/NQbrrdZ5YcgBfLIlUa6fyilu45fLKkwsZ7GTP6uWsfa8BZzhBRJHG/G/e
      z/xKOwqJAKIUdXYJxabXWPX8KpIzSsiw2bCnmtEqvNSs/AvLD3tJCAo8fS3068cxrzxJY10j
      7d1DpFz/c357WwG+3oMs/dNrHHCFiCQU2MfM5sZbFpDbtoLH1vczKsOA81gNinGTGdqygQOB
      LqR/+w0NJiOXfet/uem0wmJJ4gEvbr+IJEWGVAIQpPvgGl5+u5kWRz9k38EjP5mL0dXAu0te
      YeWBAaKCDHPBZK5ecA1TS9ys//Nz1EhViFE33V3tOJKX8IP//SYTlE72rXyBRZub8MQFjJmj
      uezGW7mswsTpgh4Tnc00SAuYlatCIrnYvVEnmzf1UWL1sb+mnk77FTxweZB3XvFw5YOzsRDD
      0dpAXZ2bwoXT0Pe3cHD3bg63DhCSpJA/bjozx+WTopJeuJBIUFI2IY+l1U34MpQ4Ol3kVUxD
      rDkCQHKogQ2bagjmL+ShH07F0r+R3z26jI2V/8Htv36I5Ddvp/OeZ/nRNEiGBqnZ+C6bO/P5
      2n8/RKXYxMrnFrN9i4WMzHwgSNv+Oky33sXPpuRjDL/Hz57cQ/F//o57xqro2fMmf3vlBTYV
      Pcr0DxdR0JBZMZ152RMRCHJ42Z9Zvaudy0usKFQSEGTo06dx5/dEVixdz7LntyKzFjPjirnM
      Gjc8g5HZRjP35psZJ27iv77/LtHb7uVH38jBu+zfuXPTEZy3FqJT2xgz9ybKpCK+tmrWHzlM
      df1kclWAq4nDyVnc/vWfUZmdgvyGQn59+dOk/+IMQ6Col76Ww+zaGkDaX0f1UAajZmdg1LgB
      Caq8S7nvvgdReVfwiy+vY1/fdIrrNrG+OYe7Hn2IMdJWVr2wiB3v7iIjuxRIILFO4JZbZpMn
      38Vvbn2Jmp4o5fEVPL3MxaVfu4McBqh5byfrV+6iqmIupxvSx2NxkiolqtME81wU/F3UNGup
      nH8PN9vUREL7T39c1EHTsRYcZDBp9hik0W6qq+vpyk1Fn5FyUqM/7+mnvmwc+jW7OTarnC5n
      JhNzZTTVDP8XcznolRnJKMonXatAqh3HhKwXqe4OEas6+RuTCIdxu9zESqZRZVWjIIeiAh3t
      nQMMefIBsE++lqvGF5CiEKGtkXrpJO6YOOwpmZIznrL09XR0uvnwzDvgbOfgzvUcbveRFEWc
      3T5C+SfHfAkSBebCWXz1B9Pw9dWxYdHrbFu1FnPmDUgBjc6ITqVClpAiEQzYM4zIJVJMZhPJ
      RJxYPIKj+SAb1+7BK5US9/TTEbVSdmKPUVnAjLnTqcwxIf8kbSfqprN+NxtCzag1dkZdM5fZ
      FVnoRDegxJZuRysXEbQ61CSIBYeHeeGSuYy2qVGQRWGRkZbGPlxDpYAck8WCXq1AptSgFgQE
      INhczzGfk9St6zgKQCqleaYzinbLUkwY3QfpHIoywZI8ZTjxmZM0UTVnMnk2DaJwlv1b3xDO
      wS6OdcRwOFqHf5OmkZSJp+jKnXdIpNRcSVXyN+w4IiVkriRHBk3H/xXVGvTxAEP9g7jD6ei8
      HbS5tOgNUkRRikwOHrebeFIPEgkqtQqxvZMubxVZgpP+gTAxmRaVEkCDKUWD/ERQtj4Ve2Ir
      R9t8FGbKCTjb6XVrSUk5OfPOYMMe9g8qmXX715mdJ2Hrk00s/rBvcTxGsLeB2pCV0mwTGnM6
      2Tmp7Ovz4A3Ez7KK9QGJkJe2A9s5ZrqG//n2DJJ1q3l2zeEPDtAbMKiUH2r8UqSyIB5PmERS
      hKSI+OEFaXUm4+fO5sE7JvAxa1jDb0EqRanRIG3soMszhhyJi4GBIBFpGuqPJiL6EDKLjbTU
      DK67/36mpiuJh4IEQjHOuNaSMZo5uRvZuWEfYy2zKDCKhD29uJKZpH2Sgp4vejNmlfT9kEgh
      CUI8SjSeJB7z43YO4g7LQCZHZcpkdFYZU8dkoZUmCLl9xLTqU4z7vHsAqcxG+egEa9cdZeKd
      C1HyQVoviaWAyUX1rK9Zz0t91agDvXSkzmRhsRGlVEbx+HJWrf87L7iyKJgwi9KS0ZQf3sbr
      zw+QKnrpdxkonFlBhj5JzUdvbB3PjbO28/bLLzJolxJ09hHKupKpBboPLBDQpqZhYT/V65bh
      zrbR3xcgqv3QdZIxgj01rN/qYI9egSIRxOkIYa+cRqldSd8neAaCVI4hzY6qdhdvLXaiCbYz
      EIifJbAynYopapYve44Xa61UXnoz4z6q8/cpEBRa0kvGUXXgXV5/wYlV4mPAqSZ32miyDBz/
      up+KpmwOV1mfY+lzz1GfoUYiqLHnVzJxSoKuQwfpCKVSNnYUthMTdFURV9x+JV3Lt7Hk5XZs
      GhGJTCTnkttQhxvY914nhgmzqFD3cbD6GGF7GWMrs9Ce4f7niyiaseoPsG3tGnRCEr/DSVjM
      BE0qmSltVNfvZF1fLWq5FFEwUDhpFCqj7EKERIJEpsVeNIqcFBlqowVBmc6kiWVYlAKiUoc1
      I5vcdDv2NAtaWZygP4JoLGDalbMZk2FALpFjTk9HGvIREWWYssspyUnHbpUT8gSIKy2UTpzG
      1DEFmBQSRKkOW34u6WYNMhEQdGQWZyF6HfijIrqMSmZcMZMSswxRlKA0WMnMyiEjPRW9TEos
      GkNuyqG4OIf8okqK7DqkEgEEAVGlRZUI4g+GSUq0pJdOYvr0ceQYpUgkCoxpeWSlmVHLRaRq
      C3ll2ZgVMgRRitKcS1VJGiajGV08REhUY80qoKikmKKcbOwpGpQpaRRk2jGqT3Q9WqxZKRD0
      EROU2AvKsZ8IihYEJEo91owssq26j3yhRCQyA5mlBdh0ckRBRKa0kFtZQoYllTSbnJDbT0xh
      oWjCNKaNLcCskCCRaLHl5ZJu0SIXRSTyFLJHFZJmSiM3NwUhFCQcB7nOTEZuAbZkG1vWbaIh
      ZGdUWfaHQhoF1PYCim0qQh4vwbiIxlJAeVkGyqiDng4PyvRcrDI/fT1O4tpU0myG006oz46A
      IMrRGY3o9UpOBECKohqzWYv0uDqmKKjR66IMuSNIVEbSsvPJz7JiSbVi1utQSuMEgxESghRt
      ajpZdhMqmWQkJHKEs5AM0r5nC1uPuCm4fC4Ts3RnnBP8KzBiACOcTDLCUN8AnpAES7Yd9b+4
      s8yIAYzwheZf3L5HGOHsnHUVaGBggP7+/otVlhFGuOicdQgUj8eJnS1v4QgjnCOfl1Dbs/YA
      EslwctYRRrjQxOMXWzDi9IzMAUb4QjNiACN8oTlHV4go7u5OBgMyLLmZGKQMJ6f1unBG1dhS
      tWe+cNRDT3cIbYYZrVRyXhpViaiPgd5+fOEESORoDSZSjFrOqlv3WZCME/Y76e11M5zyVUSu
      MWAyGdEoYnj6hogpdOj1ai6+vkQMv2OAQbefaOLEbxpseTa0EvH0zz8exuPyEhFVGEwa4u5e
      hmIqUgw6FNIPKpCMBXD29zMUiIEoQ603kpKiR3mOrtLxaAif24n/I9IKEpWeFJ0aufTCP7xz
      NIAB1v7qPp6uyeCmP/2Re0dpEYIO6lb/g2c6J/HoDy/DcqZTB7fx++9WM+eZB7nS+oFaRzwS
      YLCnHb86i/zUT6KjGKRr1xL+umQX/d4oSbWR4rGzmXvdPMo/ZVryT0YUV0cLPlUm9hQ1sg9P
      jWI+One+wEOPvotQYEUtSFDZypg9bwFXTkyy8S8v01N+DdcvmMgn0BC5wHiofv23/H1zB1GV
      /ngY5Xi++cd7mKQ5g9tboJXNL62m2TCWm++eiWfdn3i+fyxfvXEepbYTFYjTf3glz7+6leah
      EEmZjuyKqVy5cAET088tdDHk6uHg5hUc6IkR8AaJI0ejU2Aoms5VUytI/wykmc7LGa78kkx2
      vraZG342D+t5FiTic3Jo63Lasm4lf9YnMIB4M0sfewPZAy/wxKVGos5WjtbW4ffBJ3Lh/NQM
      sefFX7Gn+N+575pyzKdEcGnJKr+Ju578CiW+TrYueo4NW94lI2f66S520Smd9x2+tGAmuRfM
      a3OIzf/4C92T/8r/fikfmb+bhqMNuD0hOEcD0FjzmHnzg8zEweEdRwmIaVROzv38hkSaZ9zM
      xLee5Z3GWdx1kjBGkoh3gPamo7T1+4nLU8gpLibXZjjJ1TYZ99K8bx9DtglUWPUUj51JptnG
      cL75dhobWnEEYyA3kl1aSp7N+EEgeDxIMKxCjhd/JAWjuYAxMwoACDq7aGtvwRWSEvN7CcnN
      ZFoVBB0DODwRlJkVTCi1oxC9NO6qps0TJi7IMdhyKS3LJyXupLWjD7+oQhUdoD+mQO7upq5j
      iM7Ye2yUt5FWNoVphUbEU3ziBSTaDPKLctjj6mPIHQDiBB3tHN4ZoCYcRmorY3JFBioJBPvq
      2H+kC29cRGvJpqgkH5smykBLO72DPiKEGXL5QJtJeWUBVp0Cwd9NzYF6ur0RpCoz+aPHkG/8
      9PmjY301bHXamVNmgYifgb5OupN2Rn+iD0iQcEBARoxAJInZkEnlxMyPP+2c8dHdHcOsi9LT
      2YNTmcnobIGu5ii2IisK4oS8XjyeKNqMVJQRH47ebnqdfmKiGmtWFlaDCpl4AUMikeQxY6GR
      x5fuYuD+DzRukyEnjXs2sGpbLT6pBjHkZ3f9JBYsnE35iYMSXhq3rGP5lj7yr62gQO5gx1tP
      0TX5t5RZlTi7mzi89wB90SRBp4MdXVfz5XnTKTAdNyF5AbOuL+aNta/ySk8RuZm5FI+qID9V
      ibutmlVvvkmvZgLZsh5qG8Kkl+djk0dxth5iX6iHnz76JcoU/dTu2sOxcIJIOEIouZcuyTe4
      ydLKe6tXsstppCod4rY8zAMddA36GYwd5Yg4gNtYydQCI6cOopMkwkMMDgwRSejQqOUEieDq
      a+FoooeAs5HajnpUj3yDCaoO1r/0Mu95NejlCeKJ/Rztmct1V5s5uu0d1u0dImVUOvHBJo42
      a7nsvru5ZoyWljXvsL7VRSQcIxkJcaA1wZ13TMZ2lrfZX7+dNUI/ZhWgL+HSOeUoapfy2+or
      hg0g6ODonjW8Hb+C0Vd/krF2KuOuuYwD217h9WgF2RnZFI8qpzBd/xnl3B/gUHUXdpWPTm+A
      cJqRUXYXuzd6mHPcADy9HcMqkel6FH2dNB9totcTIi5I6fEmmDS6ALNWfiFDIiFt0nVUrH2F
      jc35FB3/LTzYzIEjjSRLr+OBBaNR9G7kqT/u4EBDCTmFAB1se+NFNrUFmfSV73HD6BQCPY4P
      LpqUoNKkYM3MQAhGcHmb2FxzjKumjvvAAEhh8h3fQbb5XfY0NLOv6SCHGnpZcNPVmACJ2sqo
      Gddz6yQfK3/1Ig2qQuZ8aTY5A0v49g+O0RWNUSpTkpqdhccbIuQZoK6+gT1HerlpFhDx4Q6m
      kj1lHlPKMtHJHOj697Cn+K4zDIHCOHuOsOK5BLsiXgYGw9grplFoUzCIDG3GGObePIscxR7+
      99YXqRuMUR5cw+u1Vh78n3sZr/dzZP3rLN2+jtqJtyIAclMBU+ffzNiUY7z8o5cZ6PMSGmxm
      yeubcY2fxmibHH9XNe+tXM2EhZOxnWV4E/G5GOzrIaIAIulEk8kzB758IhSUXns/9xg3svNI
      K4e311JztJXLFy5gUuZnNGgJOBmU2aicNZsso4JoyHX640IOWo82cKw3htlmQBJz0rS/nrRc
      Owat/CSthfOOCJNpipg2S8tLK/dhPG4BYb+PgCjBmp2FRSmF3FxyFdsYHBr2Owcg6sXhkWM0
      qk9Zi415+qjdv5t9zRGsaSnI5XKEhEDyIwFtgiqN8Vfdypg5Xlr2rebl15ez5vB4bjOARK5E
      rVYjlwWRCHL0Bj0qhQypVocWgSTgO7qVt7Y3klWRiVKUIlfISCSPL5VIjORXjmHMqGx0n2ov
      UEBUWSm7pIzRo8uwq9oBKXqDAbVShlSpRCFAMpEk3NvFQPYVVFpVSBGxZGeSumsHjiGwIEWt
      0aHTqJAp5SgkEkIAQ710hNRkaKUgSNBmTWJBeTZZH/MmMydce8ocwP9pqnUaJHIT5XNupGS6
      n65Dm1i0ZC1rd42mMrOMswSinTsyCyVjK8gwKs8eEhnyEYhGSSirUNhMAAARmElEQVTUyARA
      ZqKo1ESKVnFKh33ePYAoVZIx9nIyVv+V98QcUIJSq0OTiNPR3Er/GBPKrkaaQlIyTOrjSbCy
      mH7rlzC8/QzP/WMN+T9acNIkOjrUS1PnAPLSG7j1qly61/ez98BHiu46yKp9ImMmlWDVKtEZ
      dCiTMeKfwnPDU7+NPVzG926bj7JzL4tea+LYiT9lCpQq1YeST0mRyUXcLieReIx4XEAUxeMa
      WQAKTGnjmX/XVz8Y5n0MyoxsbIuqqe6ZymSjj/7mNnrj6Yw1cUrs6vuY0shWJVDkzuTmK4tR
      J0O4HYPEz2XDPpkk4XbjiUbB0U1LpwNO1dw7Ay1sXtpD9sxxZKUo0Bj0KIU4nnjis9tcUunQ
      ySV8MIwXEGIRIvEEsbCHwd4uHCEdBQoVKpUOu66A8RPyMcoS+AdcRJXSC28ACCJqUxGTJ+v5
      5eJmUmfOQG4pZPzoUno3vsljj6xAiMXRVcxkfGka6vjxJiazMeHGr9L8xF959jU7915heP+S
      shQrOakKata/wB8aC7Al+gjETafc2nl4BU9veo2IAKIgxVBxA9eMsUDHJyu6oWISpSvX8vgv
      j2K36PFFzvbqtBRPGMeqpUt47NE15F39Te6dlcn5ZAdRFs7lyxOeZekf/pt3JAkkCgvFl15L
      eQocOdNJ+iquv7GY51Y/w6PbVMhkKqy547nq5lQSx3axeXMH6ZfdxCV5H7/eKsksIr9xMY88
      Uk2mRY8Q/3TNwduymZf2vkNASIIgQZ8+h2un5RJo2sWKbTVoKq5k9ngZh95YyWHpaOZdNoY0
      w4UTe5KINjLNe1j16qso5UqkCZApdKBMJSc9hcEDu3jr9Z1IpHLU+mzGTK9Cpzh5KfUc4wFC
      9NQcxGsfT7FFCokYAUcrNcdcqOx5lOSbEfxOejra6HYEScj1pOfkkm7WIo8OUFfjxlyZS6pc
      grejhqO+VErzdHi6GgkZy8g3wVBfJ61tfYSkOkxaAZ9oIC/DRormeAXiQfrbm2jvdROKg1Rl
      wJ6dR1aqhpi7jx6HG4U5jzRDhN5j3YQ0qdhtRpTRPmoPe7CMzsOCm8aDDQxEpWgMKajlUeKa
      LMrMCbp6HIQUFrLT9O+PGeO+Xhob2xn0RdHkVFGVqR1eBUpE8Tu7ae+VkFmRie6kZ+Wn92gX
      Ia11+P4SNy1725EWl5GpEwk5mqlv7McfF1GnpJGTm4lZHcXZ2Ys7oiQ1245W6qOrtpOYJYM0
      iw4x0EPT8XIkRTkGSxa56SKNm95gcY2NO+67gfKUE405grOtEZfERprNjPpD7S8RHuDYoWMM
      RKXoDCkYtBJCciulqdDXMUBAqicty0ysp4HOiJ5MuxXt+11iGGd7C23dTnyxBFKFDmtGHtlp
      euLuHtq7BpFZcsiySRhoaGJAsJKfk/r++WeXSIrgdfmJoUCfciKQPcDAQAyjUXNcJTJJMhHH
      P9BOpyMEMhVqlRqlTIbeZkIe8eEcGMDhCRJHikJrwm5LQS0fCYn8FySBt6uerSvXEJv5NeaW
      GobHvp9jPi8aYSMG8C9BkngkhN/jR2K0oPk/oP05YgAjfKH5vBjAiDfoCF9oztpZ9vb20tPT
      c7HKMsIIF52RIdAIX2hGhkAjfKEZMYARvtCMGMAIX2jOecU46m7nSE0jfd4IotKAPaeI4hwL
      iv9rJpVMEPUP0FhbR6crDHIt1sw88nLT0F/03aQwQz2t1B9oxgUgytFYsigpyiZVD701+3Ea
      RlGUrr/oAnlJTzv7an2kVeRj1w4nrE3EQ3Qe3oHTMpkxF8ADNOJ30dN2lF7vyb8rzNkUZFrR
      KS98pc/NAGI97FnyOmu7Y6ikwvB2fLMD+S3XUvJZ5cL+TEgSj/po2Pwqb+72IVdLERDRdjmI
      Kq9gQtZn4tNI/6FVHJFNYlap6SMBNX46azay6OkdJMeWYZFF8AVkNE+fxzUzbBxa9hT7yn/M
      /XP1KD6bop2RZOAob//tXQof+BY3VKWjkkAs2MzqPz+B+ytjL4gBxMN+BjsbaRwI4egdIipo
      SLXp0Ef1pNssnyMDcB1k6eIOKh57mC+XGIl6emmra0P6f3A9KRrqZs/qTYhzn+J7V9kQ/L20
      dg2C5LOrTOvGp3lJn8mMEhOnqg0pSSudwewHv8E4jYMDbz7Ny4cOUl76zw2tFK1ljLG/TvWx
      AUKldlQqkVhvNQfdldxSfmHiLFWmTMZfeQfjP/8qkVJkUj/dLd14CoykGNIpmZIOxPEPtHFg
      2xZqerzERT3ZVZOZNLYIq8rB/rd20iMmcQ/24wwmSRs9lRzPEfY2O5Gm5DH58ssZZQjSWb+X
      bbvrGYyI6HNGM2PSGGzeana4rIwtzcOskeI+tJz1sencOFqH++gW3qxJkqce4GiHB5m1mInT
      plBhl+PprGPPrmqO9QYQjWYMmiymXz6WNK0SERAEAQlJhno6GAykkq5Pp0SfDkCwu4btR1rw
      ugMEXE68kiyqqgy4mhtpGwiizZ3FwnnlqPwD1Ly7hr3tQ0RRYyscw6Qpo8nWeWnYchCH2ow2
      0k1Nl0hqvJ33DrnpkS7iycBWtFXX8rWZ2ad9yqLcTHZuGsn2EIFgGAB/Tw0bl+xi0O1FmjGD
      GxeMJoUonr56tm/cQetQErW9iPGTJ1Caqcddv5nqrgBxn4/+3gH8MhuTr5rL6DQ1yUALW1es
      o84RQ2bKZvS0WUzI1Z1+YijaGDPextK6VtyREowqJf37d9NfOp8q87m1ok+Hg7q6MNmWMPU1
      dXRqq5g3RqBmd5iiS/LREMM3MEB/fxDzqHy0AQdtR+s42uEgIkmhYHQVhXbDsDDih6t1TmVJ
      qeKmr1Th2/Qaj//mMf7y2npq+8JAgmgsTCShwGS1Y2KAPdu2s6dxgAgOatatZ0eDE4nOgsWz
      n+df20BnQkeKXk7n7qW8Vd2Nt/cYe7dvoj1qwmoxIknGiEWiBNr3sa2mFVdgOKLGW7+Wd2pc
      kIjiObaVxWv34xB0pCgjtB/YxsbqDrwDDby7ag3vNXlRmqxYgvWs3HCATl/4fX97qTKdSQsX
      YDy2hL/+4fc89eI77Gt1EQXC/Q1s27aDuoEYOpOCgb1vsXpnKyFFChZVDxv+sZRD7iSJRIhA
      WEJKqh2LIkTzvi1s2N9BCDfNu7fy9ktvsKGuH9RaDBYrRrUEmdaM3W7Dqj9zpoNEeICWpk6k
      Ei1azfCYJ+D1g8aA1RKnZsnf2NKWIORpZ+dbr7OzS8RgVuFv28m61Zs5OhDD1bSLTVt20+aX
      YjDrGTqwlGW7O4jEPRxY8joHAjpSrSlIvMfYvmItDe4zlUZKxthxpDQeo9kbJp50cmhPE/mT
      x3w2OQhOYYjG2kPs3lxNX0yJUSMjFuujdl87weGnhd/ZR/uxDrxJP31dXfQ5o6gNKRjUIZpq
      W3B4QyQ+ctVz6wGkVsZcezuavHqa2jporlvLS0393PbALeQICSLeXo62OPG6ujjqspE1wXM8
      X44cS+EE5lw5CtP+Yzz5pJTCWVdRGB9A79zDsp4hEgUhXL1d9KpLqRpbQWFmBhlmFf5jZymP
      IKI0ZjNm9tXk+BqQLlnJgUE3PS2N1DliFM9ayIKJmShqvCyrCRN//ykISKRaCmfcxJdTj3Cs
      pY2mY7t5a3Ev/htvoQpAZaFw7AzmTpQjr9/Ce7piplw6gTSpjgPPvUqPDwSDAGEHjQ39eDwO
      OgYFirIchLEAIaJyGyUTL2NG6bC4HTXPckh/KTfcUIH0lDFQiM6azTz7q1aWyZMkJCbGXzqO
      fKuKQUCfMYppl40hTdPG4Mqv09gX45JYAwf2ioz/8ZeYmy2jb98KXn63gcOtkxkPSHQ2yifO
      YWq+Glv3Sv4x6CEeGmLNa+s4mDeeQqNIwNmBK9ZD/uCNlBk4LdL0MUzUr6KmNcglumPsqy9k
      xg8vyud/GH8Q8koYP6YYq1ZGONR1huMGaK7dx66jXrRGNWLCS09PCpaSbCxG1UmKNee8CiQq
      UykeZ6Gwyk93gYrn/ricLfsnMTOwna3NUkbPugK7u5bELhcfbDZLUaqUyCQiElEEmRa9Roro
      laBUKkgkQZtexqz5t6OtaaR2w+tsFgu5cuE8zq49LyKRa9CoZUgDEqTDgroEA36SKg1WsxGV
      VABRODWGXRCQKozkVk0ju3wsow5v5LXlW9l9qJ3CHEAuRymXI5NIEAUBhUaHUiJBVKlRCUmS
      0QhDRzaxfJefMfMuJzvSxa499fiTJwI4ldgKyinNtaP7RBm7pBjsReReeiVFOhkaUzo52WkY
      lcPxrwqNFqVMiiCRI5cmSCYTxCJ+gmEL9nQdMikYjCaUyhZ8geEEtBKlGrVSjlQiRyYVhgP5
      Yy6GvGlMnjefSfrhOyt0JrJsZymaPJPx49X8+kg7/uR7VGdN51uWi7jsp7FTUppPqlaOcLaQ
      yHCQmDKF7NGjKLGfCAzSkmbRnqJ2c26lP7aWv7+9jzZPBFGUII26cQWkaBUC7sFBPOpcJkwb
      R1GGAXny0yRBjREMhUkos5k29zpuvnoiJlcPx1r78AMel5tQNEyov57ddf0kPsaLw2A0kXC7
      aO7owRsO43AOEYl+OGYyQShwgOXPrqNhIERcFIgnwgSCMRQq1ScLGk/ECA900JFIZ9wlkxlV
      kIrypDpLUchlSD6U1UyhVOHq7sYbS54mSawUnSWbyskzmH7JFMaWZWPSyM78ogQpSn0aZsMR
      9uzswh920tpUj8slJc16ahTd+yiLKMwdoLVHSfnU6UybVEV+qorEWUNK5eSNqSS+/xCr3ttC
      7uzpXMz2j1yFSiq+v3AgJAWEaIBgLEHEO0hn81E6fYBGh1oAWVKBrXAUlaNKyTbISAiJCyST
      qktBVv8mj7z+W/wRUBlzGffl7zF/jJUhIQ/dhuf4z+9spDJHx1BcTc4nvrBA3NdN9crnWVsz
      QCAmoimczW156WRoSrG/tYj//v5bmEtnMkXx8VnC9MWTmVnUwqIX/osNz6VSkR3HFfpwxK6A
      KGiQepfwpx8+R380gcKQxbhZN7BwSiaS5uqPL7JUga50IhWL/8LD9++gIDcdaUx2Vl2tktk3
      UPjr5/jmV18k7dr/5I93fNIo4tMhQWcdxRU3Tub5l/6DbzyVRJVWxpz5NzIlX4Oz+QyniVks
      ePAOWp5+jG+vA0FpoGDS5dxySwbxPat4c2s7RZffzryqk3P8yYunMDn8MC+tNvPVF63vR2t1
      16/j1WcOkHHHg9ya1cWyRSuo00/l1htmk/dJEv2dA1JpDiWZm/jH/1Qj11qwGEyYdIDCRmlp
      NoObt/D3x94iJqowZ4/jimtMw2lhPsS5OcPFIwT8PnzBCIkkiBIFar0ejVwkHg3ic3sJJSUo
      ZBKSSJCrVKiVEHT6Sag0aJQyxIiHPp+I2axFkogTDrjxoyVFmSTg8xIIxUggIFVq0GnVyIUI
      XrePYCSOKFejloYJiQbMGgmxkJehsJwUowpJPEowGCQsKNALIQZcbgJIUBKmbd0z/LFjIr+4
      /xoKLCoEkiSTcUI+L/5AmFgSBIkctVaHRimDaABPKI5cqUYth6B7iIhMj1YpQyKGcff5kJpN
      qIjgGxoiEBeQyeRIRAFBpkSnkRD2+ImJClRqJe93ArEgQ0NeQrEEEo2JVN0JY44TCQYJhUGh
      135kUzH+wf1VMiRCDJ/DQUJrG84pFA3hcXsJx0EiU6LRalEpJMSCHvwxEbVqOLdmxDuIT9Bh
      1MghHsIz5CEUS4IgIldq/n85Z6yTQBBF0TMzb2EyYTWYGApLYkys/QETY2FhT0ls/SZjYktJ
      Y0sHodLQ8QE2BHXXZZnZZWyslMoSzk/c3NybQytZMh4OmbydcNu/4fSPEiOQL5bkwXBwfIQz
      CthQ+YLswyPpIalU5PkXXlvS1n98qDW+DEQlJE35Sb9AUUSsTdBaAZEYI9UqIytrlBZEBKM1
      DWcxdaBcFZS+JqIwicW5JvLLh7rbb9DFC4PHB56eX3lfK9pnl/Tv77g+72BlSx/YezZ8zieM
      pjMaFz2uum7LTrFbfAMRE08l/qNwaAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='164' name='CalculatedField1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACkCAYAAADBuSFLAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deVhUVR/HP7ELiLkvuWUqhUsqo4DooGKYSWHiChopmakVrqlR+GqRloq5
      leYGJpGaFfqmqQgyKSIOLqgk4ouKkqjgguzMzH3/GBgZQUTAMud8nofn4Z7ld86F+7vnd+49
      536fkSRJQiAwUIz+6Q4IBP8kwgEEBo1wAIFBIxxAYNAIBxAYNMIBBAaNcACBQWPysAJKpfLv
      6IdA8I/wjHgRJjBkRAgkMGiEAwgMGuEAAoNGOIDAoKmmA6i4GrmAcW69kclk9HYbx4r4nJrp
      WU2jSmH7jMH0lsmQzVXcn1nmPBZEXkX1SA0omCvzJuRSzXXZUNFoNCiVSqZPn05Ojv71dOjQ
      IV599VV69OjBRx99RFZWVrk2CgsL+eabb3ByckIulxMaGopGoyljB6ka3IkOkNwc35JWHsuU
      iiRJKrh2VPrt0JXqmKyQi8Fekn1AdJXqZv82TbL3WiMlFZSTd2h+qfMokjKPrZTecnST5h/K
      foQWoqUAey8p+GKVuicoxf79+6U5c+ZIiYmJUnb2vf9BWlqaNGHCBCkxMVHKy8uTvv76a2n5
      8uXl2ti9e7c0e/ZsKSsrS1dPqVSWsVONEeAk6wP30vHTFUzuWg8TwKyRjNd6Pld1k4+RjBvp
      0PZF2pvdn5PJ79+HY/W2f/F5mFCv62S+mtKC8A3/5do/0VkDp1+/fnzxxRe0bNlSLz0uLo6e
      PXvy0ksvYWFhgZeXF5cvX+bOnTt65VQqFTExMfj4+FC7dm2aNWvGqFGjOHToUBk7VXeASydQ
      Znahp4NNudlZcUvvhRSDZxCSUDJUKZgrm8u9IKT08SVCvGX4LQthxtC+OMlk9B61gvgcUMyV
      4bkiCX6bhkwmQ+Ydwv3RxoPaLFNXLwQ6Q8LRprj2bq9nq3GnrjQ9kUiSro/ehKSksH2KO07F
      bWclhDBjcEl7QcSWqq9K2a7Lc+o7hqVxpc//fltZxC0dQ18nGTKZE32HziMis/L/CkPhzp07
      vPjii7rj+vXr06BBgzJhUkFBARYWFjRt2lSX1q5dO/Lz89FoNHp2qu4A+Xnk0oiG9cvJu7ad
      WX5KXv4ynFhlLOEfWvHDhM/ZU8npQa6lPdM37eNwzFrezA5hRzzI5ynZ/oEtDApCqVSiDPWh
      VSXbLFN3nvxevbw8crHB2uq+TlhZY8N5Lui8LIvIwIWkeG4gOtSHVjl7+HzCD1hN3k6MUknU
      DxPoWlJUFc/SDyOwX7EfpVJJ9Jq+nJhe+vzvs3UujIWRXQmKVqJURhO+8A2aVe5PZVAUFRVh
      YWGhOzYyMqKgoICMjAy9cmq1GiMjI0xM7i10MDEx4ebNm+Tl5enZeehSiAdiUQtLrnMjE7jP
      CXLiYzja05vFxaFRvX7j8GrjSUw8DJCXZ0yfZrYdaWoJUI/6NnDnYRWq02atWliSRfb9zpmT
      TRZteV7nZTk0917MzN7FI158DJFtvNj+SiPMACytMC8pei4WRfpRrr7ZkyU6g7akZwBW5dh6
      rjVtMz5n3pSbvNpnIL36dKdjeTcWA8fU1JT8/HzdsUajwdzcnAYNGuiVMzY2RqPRoFLde4yh
      UqmoV68etWrV0rNT9RGgVUe62Jwg5kj5s/B/Dx3o3P0q+/84p5d67dRxrnaxw1aX0pT2L5Qf
      7pWLzVC+iVVqRxylEqUyFB+dM91ny2oAX+zfxCcD25EXt5oPPIewNP7RnkEZAnXq1OHs2bO6
      48zMTDIyMrCy0h++zc3Nyc/P5+rVq7q05ORkLCwsMDIy0rNTjUmwPRNm9CRmmT8hx2+iAgqv
      K9kVk4aVfU+6x4Sy7vhNVKi4GbmBH1L60dO+pG4al9NUUHid0zv3k1DJFq2tbeD8Wc4VAiqV
      3mPKh7f5IOrz6hgPcoIDWVVS9/gqPvr6Mh7j3Gn8oGq2dnRJ2sueP3NRUUjW+Uv8VZLXvjvO
      hLNqzXFuqgBVLldPHybxQXF9koLdKRbYDfRh6sJlfNgtnRNnxfT7fnr06EFMTAx//vkn+fn5
      /PDDD7Ro0YI6derolTMxMaFnz56EhIRw9+5d/vrrL8LCwnB2di5jp1rvAWxe+5KfZzUjepYH
      jjIZrqO/4X/mz0JjT75cJuPkLA8cZY54LM/Ba80nDLAC6IKrZwarPRzp7T6bnRZtS91lK6b+
      q+/gYxSGT08ZThO26z+hqbDNirHqOYfgwBeJL6k7K54XA4OZ07OCyo09+XhOU3a9K8fRaQCT
      t52/l2fSg0lfv0fDqGkMcpQh6z2ID745TZ7FA2xZ5HE0yIcBjjJkjh58e9ebya8/mU/T/g6+
      ++47ZDIZLi4uup+EhASaNWvGmDFjmDp1KnK5nBs3buDr6wtAXl4e77//PjExMYD2SVKLFi1w
      c3Nj5MiRuLm50bWrdpZW2o5YDSp4Kjh79ixhYWH4+/tjZlbmWfcDEUshBE8FCQkJeHt7P9LF
      D2I/gMDAESOAwKARDiAwaB76Iiw3N/fv6IdA8I8gRgCBQSMcQGDQCAcQGDTCAQQGjXAAgUFT
      TQdQkx69mIkebsjlctw8JrLm+BP61Eh9kXD/UbjJ5cgDD+llHQqUI5eX/Lgxatp64h/jItfU
      UN8yfRD8M1TLAbIOLeS9+cl0/WwLUQoF/103nucLbtdU38pQnQsnd/93LEl345sIBQp/5zL5
      7SZsRqFQoIgIZXz9nXw0/zfEpqynn2o4wCm+XxSJ3axFvNu5LsaAWcNuuDk+mXuZMm5cgzbt
      afuwpSJmDennPYTmcSc4+5Cign8/VXeA1ASO3eyEg/0D9gTHr7oXGo3yJ/R0SUxxiEB5IPfu
      46WPUwn1lfPRN6H4jx6Eq1yO29g1HM/Vhimj1yTDnjnaUMU3lNRKtlmm7iONIlnErxrPINfi
      8Mg/nItqXYOsmuihDavcRuEfepqsUufxQeBixg9y1dYL3Eu6+gEtxK8qLqftd/jFBxQU1DhV
      d4CCfHJpSIPytu5dDyfgo2N0+mwLUYootrxnyTa/Reyv5PQgr1ZXPvxuB/sjVvJ6Tii7joOz
      v4LNE9rBgAXaUGW9N3rfDKigzTJ1ywmBdBTeIDL0Z664ONIVuB4ewPLC8Wzeq0ARtYX3LDfy
      cUgycJ3wgI841ukztkQpiNryHpbb/FhU+iRfGMayHfuJCl9M75QvWfx7OUHV9XAClhcyfvNe
      FMX93vhxCMmV+1MJqknV9wSbW2DJDTLK2ROce+IIxxxG8EVxaFTXZQzDWo8m9ji4VnDtldCk
      vR2NLQGepV5tqMx8tLptJq8ZjXwNYFqblo5eLJvliiW5HDxyjAsHj+HxS6nCA65D7gWOHHNg
      xBedqattkDHDWjM69ji4ttCeR4tWWBoDdTvj3q81o0+chUH6nck9cYRjFw5yTL8BrgPtKnHe
      gupRdQdoaUdnmw0cic/Cw+0R9so+obSbsJn13i3Lzevs9xMrPRvpJ+bufST7GrUKUxPj8jM7
      +/HTSk8alZ8reIxUYxLclbEfOnDkm/mEJtxCDRTeOMbe2L+w7OJAtyNbCE64hRo1t6K/Z9tF
      Fxx13w25StpVNRTeIHHXAU5XskUr69qQco7zhYBaTelI+eFtVgVLuth3JuH7FexKKwSg8G4K
      MfGpYNkFh25H2BKcwC01qG9F8/22i7iUarCgoLhO2i7W/5xJv16dy7bQxZ7OCd+zYlcahdoG
      SImJLzO/ETweqrcn2O0zQqc24eCnI+grl+P+zloumD8LjTyY/1U3Tn06gr7yvoxYncuwZTNx
      tQToRJ83Mlk3oi9uwwLYZfFCpYf6+q/44G30ExP6y3H98Ff9PcEVtll1Gg3+hM96ZbBmbH/k
      cjnuoxcReQugER7zv6LbqU8Z0VdO3xGryR22jJmlGoxdNgw3uZz+Y79HM+ZrZjqX05lGg/nk
      s15krBlLf7kcuftoFmkbEPwNPHRHmFgOXRVSCfUdzcVxCiqabwv+ecRSCIFBI0YAgUEjRgCB
      QSMcQGDQiM+iCAwaMQIIDBrhAAKDRjiAwKARDiAwaIQDCAwaoROMVkRPJiv56Y3buKXE3BQK
      Lf92YmNjGTJkCDKZjIEDB3L8+HEALl26xMSJE3FychI6wZIkSdEB9pJXicBvwTVJsWCwZO/7
      o5T+8B5JwV72UhW7JHiMJCUlSWPGjJFOnTolqdVq6fr161JGRoYkSZJ07NgxSaFQSPn5+VLV
      9wPodIL3MLlr8X6ARjJee0IXtWt1gj3K0Qm+D7NG9B41GFvPOOJzRvBaJRRmBE8ee/bsYejQ
      oXTs2BGAhg0b6vJKlGKgOiHQU6MT/HDK1/xVMFfmidasNnzyDrlUqfObq8gibukoehenK+bK
      GBG4gQXj3Ogtk+HkPoXwS/fOaUxfp+K2hzJPCAg/lBLpVJlMVmE5jUYjdILLUHiZnat+IMXF
      lV5WVKD5K2eecjtas1olyFCfVg+2W4rz6wP4oVkAe2LnUdKT3LxmDPv6v/wRu5ePXjjI1gOX
      gHOELYyka1C0tu3whbzxZH5044lCpVJRWFjIokWLcHZ2pkePHowZM4aUlBRdmYiICHr06CF0
      gktIWuGJbAVALZr3eZ+QBa9hA5XQ/K0CLh+yeEQbvT++TbuXaGtjBtSj/rMlqc/Rum0Gn8+b
      ws1X+zCwVx+6CwHhSmFsbMzbb7/NV199hbGxMQcOHGDlypUEBgZSq1Yt+vfvj1KpFDrBJdh+
      sB1l5DeMeB7qPP8STUrPFSrU/H102rZtU8k7jxUDvtjPpk8G0i4vjtUfeDJkaTzi+VTFWFlZ
      0ahRI8zNzTE1NcXIyAgHBwfMzMy4e/euXlmhE1wamx7MXB9I292T+WBVgvZrFBVq/lqj7dI5
      tF0q6VHVzq8sSSh2p2BhNxCfqQtZ9mE30k+cRSgIPxwHBwc2btxIRkYGGo2GI0eOYGZmRr16
      9fj5559JTEykqKhI6ASXPSk5n/4QSOsdE/hgwzkKK9T8rc+r7/hgFOZDT5kTE7Zfq9b5lcWC
      vKNB+AxwRCZzxOPbu3hPfh3DVRCuPN27d6d3796MGjUKR0dHNm/ezMSJEzExMaFBgwYsWLAA
      Z2dnsRxaYNiIpRACg0Y4gMCgEQ4gMGiEAwgMGqETLDBoxAggMGiEAwgMGuEAAoNGOIDAoBEO
      IDBoqrEjTPsJ8DUlYlYWdengNo25U11o8gAhFIGgOmg0GlJSUti6dStJSUksXrxYb6dXaYqK
      iggODubHH3/E1NSUsWPHMmzYMIyMjEhNTSUoKIhTp05VfwQYsECBQqEgInQu3S8E4j1pi07d
      JDXUt1w1x38OrXqj0Kj+d3L27FnWrVuHp6fnQ3d7RUdHc+XKFcLDwwkODiYmJoaTJ08CcPv2
      bYYPH86uXbtqLgQya9iNcQtm4HD+e36K14oXtfReX1bNUSCoInZ2dixcuBBbW1ueeeaZB5ZT
      qVQcOXIEb29vrK2tadKkCcOGDSM2NhaAzp0707NnT8zNzWt4DmDjygB5FifPXAbuU3ZXXyTc
      f5RWU1fuhsfEzTop0KzTofiP0ur7ug4az+Zk0OrzTsTDrUSfN5R7UsOB+lq/pY8PBSL3WcSm
      xcV1XYcy67dUtHrE2pBtzxw5crkc39AnZ2wS1BwFBQWYm5vTpEkTXVrbtm0pKChAo9Ho0jQa
      TXXmAOVhjIkJXLicBrTWy8k/sJ4lRV6ER71OXXK5djKFAtDq5Ppto6F/KBH9GsLdFG7ka/V5
      PzrWiaVbVtLZJovohWPxW9SEnZ+58lDZr7w8mg75im0zLMnZOQePn/8gdZA3/orNtBbSRU89
      arUaIyMjjI3vTUaNjY25desWeXl5WFlZERUVxdy5c2v6KZAalQqeb1F2y4ZFy+dpHr+ajz5d
      SejeJPJffImWlOj7TmJqv4aYAWa12/Bcw1xOHDmGw4i36VzXGIzr4jJmGK2jYzlemW7UfgHb
      NrUxw5i69erU7CkKnniMjY3RaDSo1fd0RNVqNXXr1qVWrVoA9O3bF4VCUcMOkHuACIUNL3do
      UTav3TiCf1yEr6wW/9v3FeMHz+K36zXaukAAgLm5OQUFBaSnp+vSzp8/r435jfQv+RpzgMIb
      xwgNWEFMp/GMti/7HDTz+F6Ud1vQbYgvAQvn8PqzxzmdUqLv+w1LI29QiFaHN+2GJV0cunFk
      SzAJWhFeor/fxkUXR+5JDaehlRpOZNeBSisNo5UaPo9Walj90BqCfx8mJiY4ODgQGhpKdnY2
      6enpbNu2DUdHRwB27NjB2bNnKSoqqv4cYM8cOXsALJ5D5jGV0PdcylU8r8Vf/BQwkk9T71Jk
      WpuWjh/yeXfA2IP5y7L5MtCb/v/Jx7S2LWO/Xstoj/l8dWUWn47oy618C57r7cOyWcXxf6c+
      vLFyHiP6rqNuBzf8XNrB/yrT2/q84uPNfz+ZQP+N0Mnve1Z5ig/t/FsoidtL2Lp1KwDz5s3D
      yckJf39/hg8fjoODAy4uLly4cAEPDw9MTU2ZNGkSL7/8MgD169dnyZIlJCcnC5VIwdPBuXPn
      +Omnn5g5cyampqaVrieWQgieCs6cOcOwYcMe6eIHoRMsMHDECCAwaIQDCAwa8WEsgUEjRgCB
      QSMcQGDQCAcQGDTCAQQGTTUcQKt3pZMXderLmIDfSKmGesM9PSxvQu4XABM8NahUKkJDQxk4
      cCAymQxnZ2eCgoIoLCwkJyeHsWPHlpKtlfHGG29w/fp1NBoNO3bs0NVzd3fn0KHyt/fdvn2b
      mTNn4uTkhJOTE4GBgbp3WjUkk6ovEVqUkyitf8tRcgs6UUV7Z6SV7n2lj/dqJVclSStfau8V
      LGkFTKOlAHsvqUTNVPDvJScnR9q+fbuUnp4uqdVq6c6dO5K/v78UHh5epuzJkyelJUuWSGq1
      WoqKipI+/fRTKS0tTVKr1VJCQoI0ceJEKTMzs0y9BQsWSKGhoVJhYaGUk5MjBQUFScuXL5ck
      qcZkUvUxsXyJt3z68c36E1ziZR5dQSiD61eb0r59Pd0KPfk8Jcqa6qDgicHS0pIhQ4bojm1s
      bOjVqxc3b94sUzYyMpLXXnsNIyMj5HLtTr6SJc0dOnSgTZs2pZR5tOTm5pKVlUX//v0xNTXF
      1NSU4cOHExYWBtSUTOpDUMyV4R2SQsr2Kbg7FYc0qhS2zxhKX6fikGlBJFdVwKUQvGXT+I0k
      VnjKdCHQpRBvraRpmXwZj6h0KnhCKSgo4Pfff2fPnj3079+/TH52djZt27YFwMjISG89f0xM
      DEZGRtSrV0+vjqWlJR07dmT79u0UFRWRm5vLr7/+SpcuXfTKaTSamg+B3lydJEmSNnxxf2uc
      NP4rhXStQJIkqUhSfuUm9Z32s5RaIElSQZJe+fJCHH1leBECPU1kZ2dLb7/9tmRvby9NnTpV
      unbtWpkyarVaUiqVZdLz8vKkVatWSatWrZIKCgrKta9Wq6V169ZJPXr0kJycnKRNmzZJarVa
      l79v3z7J3t5eqvYIUCIS7TjAj4MvBrLKt70uL6e5N4tn9qaRGcA5YhVmePq+SQszwKw943zd
      SFUcLiN4LXj6sbKyYuPGjRw+fJh33nmHJUuWcOLECb0yV65cwc7OTi/t9u3bfP7553Tr1o1J
      kyZhZmbG/Wg0GkJCQrC2tubgwYNERESQm5vL5s2bdWWqL5NaTIlItPKPvWyY04+mpWYVTdu/
      QPk68gKBFlNTU+zs7PD29mb37t16eREREbo9vAB5eXl8++23vPPOO7rdXeWRkZFBcnIy7u7u
      mJqaYmlpyZtvvkliYiI5Ofpq7X/je4D2OMoL2b7+Fy4XAoXn2LB+Ly3lTpWcMFthbXOVc+e0
      MqgqIZb7ryUlJYWdO3fqJr25ubns378fa2trXZkbN25w9epVvXrx8fG0atWK1q1bV2i/du3a
      qFQqFAoFRUVFFBUVERkZyTPPPIO5uXnNyaQ+GibYT/2Wyc+E8paLDJnLBKLuC5kqxp7hft04
      M98NR1lfFsU/1s4KHiP16tXjzz//ZOjQochkMl555RXy8vLw9fXVldmzZw+dOnXSq3fu3DmC
      goL03hG4uLiQkJBAXl4e77//PjExMdSqVYupU6fy3//+F2dnZ+RyOXFxcUydOlXIpAqeTs6e
      PUtYWBj+/v7lzgsehFgKIXgqSEhIwNvb+5EufhD7AQQGjhgBBAaNcACBQSNkUgUGjRgBBAaN
      cACBQSMcQGDQCAcQGDTCAQQGTTUcQKu4WLJLR+46iPGf/87FanxyPyt+FeMHuSKX+1I5+a6y
      fRjtv53zhVXvg+DJRaPRcP78eb744gt8fHy4cePGA8sWFRURFRWFn58f8+fPL5MfGxvLm2++
      WXMyqVE7g+h9eRFTVp+qoqWz/PjlbppP/4koxXq8W8KhQHkpmdVDBD7AMUr34Y2cjUxZGc/D
      /bA8e1qHEuJ5TyaPIpO6bds2Tpw4weTJk8vsGLt69SphYWEsXLiw5kTyjC1t8faSs25TAql0
      qoI0aiY30hvTtm1dSvRlnP0VPMrOR2NLW4YPc2LlsniSsefFR+5DS7zXK/B+5HqCv4MSmVSA
      ffv2VVjWy8sLoNxRIj4+HkdHR2xtbR/fHOBQoBzf0ItcDJ/FUNfiO636IuH+oxnkWhwyLY4m
      XQ2khuIrn8MeklkzWq4LgXQyq2XyKyt2ncmBBW8XS63KcfOYxqazuRXYu09I+0H9FfyruXPn
      Du3ba5fh19gIoM5NIvQHBc2dvWgJXAbuKhaxxM6Lb3c709BMzfFlU1gr+fLd7td5jvNs+mAC
      00JW88M4b9YrWhMo30DrzdrwB7inMN+y/PwyfbiVwPpNkTTvv4p2xWlNBgWweXobapupubVz
      Dh5Ld9J/TWXsqTm+8kH9bVdeBcG/BJVKhYWFBVADDnBPI6wuHdwCCPK5d3HkNhtOoJ9z8bbI
      ZI4eMuON+a/znBlAW956qx/rNsSROq5dtdTkdX0wrY3tkC9Y5fticRhliurUeibOiSX1bpG2
      cLuXqdxmssfXX8E/i4mJCfn5+drfq2tswIIHi043bvv837IneMACBbOfC2fWlI3UatcKm5JJ
      xPGNzA4zwy94N680NNOqyG/4GzokeKKpU6cO586dw97e/u98D9CO7s6F7Ni0k7RCoPA8mzZF
      0ty5RyXvppZY21zj/PlbqFFzv8KpcWsPvvx6FDcXv8d/9qZrnwIV5JNnWY/GdcxQ514iJi6l
      0vaq31/Bk4q9vT2xsbEkJSX9nQ5gTNf3v2b8M1t4d6Ac+UA//minHzJVTFfenPgyZxd60Fc+
      kKXHymmh9QiWfzeM61++x8LoW6i7j+Ddpr8ztb8rb/h9z1Xz+o9gr7r9FdQ0UVFRunc+W7du
      xdPTE7lcTlRUFPn5+UyfPp0jR44AMHfuXORyOZ6enmzdulX3+40bN2jatCmjRo1i9uzZQiRP
      8HQgZFIFBo2QSRUIqoAYAQQGjXAAgUEjPosiMGjECCAwaIQDCAwa4QACg0Y4gMCgEQ4gMGiq
      uRo0i4SQ+cwPPsTFu1C7tTNvBwTg01nowgiqzrFjx1i6dClJSUl07NiRwMBAmjZtyuzZs4mI
      iNArW7t2bVauXEmHDh10adevX+ftt9/m+vXremW7dOnC8uXLmT9//j071RE6u7j5LcnRbaa0
      Q6t6J6XumCm5Ob4lbX6sQnblieVFSwH29wT7pOiAUvrCgn8bERERUkJCglRYWCj9+uuv0uzZ
      s6WioqIy5dLS0qR58+ZJubm5D7W5e/duKTQ0tEx6NUKgeLauP0fvaXN5Xat6R4vXv+Azj8us
      D4ur5KaTmkLOPKWSefK/tVHBY8LV1ZVOnTphampK9+7dMTMzQ112vToHDhzAxcVFT0esPPLy
      8oiPj+eVV14pk1d1B7h0mhNZPenTy6pUogkdOncl69SfpAEo5mp1fksofZwZwbyRbvSWyZDJ
      euM2eT2Jxfpll0K8kfktI6REU7j3KFbE51SgF6xgbmlt4Wm/QdIKPGUyZLK5KFSJrBoiY+L2
      TF1XMrdPxGn6LrKq/AcQPG40Gg1BQUG4urpibm6ul5eRkUFiYqKe6PWDOHr0KPXq1aNhw4Zl
      8qruAPl55GKNtZV+spW1NSSlVEL6tBlvfP4T+5VKlLHhTDT5li9/TbuXnWuJ/fRN7Dscw9o3
      swnZEQ+tfAhVBjEIWz7YrlWnvP+u38onFGXQILD9gO1KJUrlPOQmdgwd0YWjuyO4BkAmByJO
      4ObhJlQsn1C+++47evTowciRI+nVq1eZ/IMHD+Lg4ICNTcX/wcLCQg4ePMigQYPKza+6A1jU
      wpJssvVVJ8nJzgbbNg9XfjRVkbB6HAOcZMgc3Qg8hL7kfTNbOja1xAQz6tWv/mXa2P0tBqVs
      4ddzQOYBIpI8GNSzxr4JIKhh3n33XeLi4jh8+DAhISFaVfdisrKyUCqVODk5PdTOqVOnsLCw
      oHnz5mXysrKyquEArTrSxSaGAwdLe4CKMwnHsenS8aEOEL9mCiHmvmyJ1t7Jg8p30JrDSo73
      CNgTdY5rEbu5NmIIPcT1/0RjZGTEuHHjSE5OJiMjQ5ceExODnZ0dDRo0qLC+SqVi//79vPba
      axgZlb3UY2JiqvMewJ7hvu35I2geO7XCv1ze+TGfhrfAd7j9vWJpl0lTQeH10+zcn6BLLsjP
      w6p+E541U5F74Q8On69su5XQC7ayxubqOc7dVIFKpZuQtx88gnpbvmXhPhgxuLLyrIK/k9zc
      XLZu3cqlS5fQaDQcOXKE27dv6z5jUtGE9n7Onz+PmZmZ7htApSmxU60XYa28V7DGS0PIWy7I
      ZC4M/yIS6zc/4PWS238XVzwzVuPh2Bv32TuxaGurq9vD+32e2zmJnk6vMGHjX1hU7MylqIRe
      sP1w/LqdYb6bI7K+i9AVaezOMFksf/AKfRpX+bQFjxEzMzPMzc2ZMmUKjo6OhISEMGPGDF2s
      HxcXR926dctMaEvrBIN2Ar1jxw569+5d7t2/xE613gOU4U60FODmKA2av1/KLL+RoEcAAAZc
      SURBVPvY9p+nIEla/1Yvaebv2f90TwQ1zJ9//ikFBARIBQUFj1TPYPYDXArxxnNFKu28l7Bm
      ag/x9OcpY+vWrXTp0qXccKciDMYBBILyEIvhBAaNcACBQSN0ggUGjRgBBAaNcACBQSMcQGDQ
      CAcQGDTCAQQGTbUcIOt0KP6jB+Eql+M6aDTTVlVGRO4+ITrBU0N+fj7BwcG4u7vTp08ffHx8
      OH++/FWOiYmJjB49mj59+uDl5cXRo0d1eSdPnmT8+PH06dOHSZMmkZ6eDmjX94SFhensjx8/
      ngsXLpRrv6ioiLVr1+Lq6sqrr77Kli1bdEuqS9upugPk7meR3280+HAzexUKdv84H/e8PziU
      9vCqgqeTX3/9lby8PDZv3kxkZCTjxo0jODiYgoICvXKZmZls2LCBjz/+mMjISBYsWEBYWBhX
      rlwB4NatW0yZMoV9+/YxaNAgvv32W1QqFUeOHOHMmTM6+2PGjGH58uVkZZXd1xcdHc2VK1cI
      Dw8nODiYmJgYTp48CaBnp+or4tMucr6oA+/30Or6GtduQ78Zn1TZnODfz9ChQzExuXdJ2dvb
      c/LkSVQqld6WxvT0dDp37oydnR0ArVq1wt3dnZMnT9K8eXP69OlTxoZarSY5ORlXV1eeffZZ
      AHr16kV8fHwZBytxFm9vb6ytrbG2tmbYsGHExsbStWtXPTtVHwGee5GONpGs/jKSS7n3xz0P
      0Octj6x4Vo3XhlFyt1H4h18sVnnPIn7VeK1Gr9yVQaMXcCCzfBOCJ4PSF79Go2H//v00aNAA
      Kyv9fbN16tQhLi5OF74UFBRQUFBAWpp++KDRaFixYgUuLi6Ym5vj5OTEvn37yMzMRKPRcPDg
      QUxMTLTLmktRUFCAubk5TZo00aW1bduWgoICNBqNnp2qjwCWzsxeF8Dqr1Yz/tVATG37Ms7v
      Qzw7atdZlq/PO4JmekauEx6wnMLxm9nboy7cimbh2I8JsfuBcfzEkujOLNi9ls5mhdxNOYuI
      rv4dZGdns3z5cjp27MjIkSPL5Ddv3pzhw4czffp0MjIysLGx4YUXXqBx43ubNDZu3MjGjRtZ
      tmwZL7/8MgDt2rVj5MiR+Pr6cvPmTXr16sWsWbP0HA9ArVZjZGSEsbGxLs3Y2Jhbt26Rl5en
      Z6damwKNm7gwOciF93KvcfKXRcz3m4lq4xpGtKykPm/uCY4cu8DBYx78Uip5wHWgayteyPyS
      BbNv0b+XG069u2FX/34DgieN1NRU1q5dy7hx43j++ecfWK5E7K4EhUJBSso9Fc+xY8fi4+PD
      2rVrOXPmDF5eXpw+fZrdu3cTHByMjY0Nhw8fZtmyZUyfPl1vlDE2Nkaj0eh9SkWtVlO3bl1q
      1apFQkKCzk6NPAY1tmxMN+8PGdb6TyIP/6XT5/UJ3o1CoUCxYEAFtTvj95NCW674x98ZsHTl
      PzvX8tErL5CnXM9Mby9WHX/oIybBP0hmZiZhYWHMmDGjwov/fjQaDXFxcbRt21Yv3cjIiNGj
      R/O///2PzMxM9u3bh7u7uzZ2NzLC2dkZc3NzLl68qFfP3NycgoIC3dMj0G6PNDc3x8jISN9O
      lc82dg2zNsSQcrcQUJObdADFxXp0tmv2EH3eUlh2wb5zAt+v2KXV4qWQuykxxKcCyYfYc9EC
      Wzdv3v/sK97rcp2Ec9eq3F3B40ehUODs7EydOnUqLFcyoS2JyX/55Rf++usvunbtSm5uLr/8
      8gupqaloNBri4+O5ffs25ubmtGzZkt9//52srCw0Gg2JiYlcunSpTHsmJiY4ODgQGhpKdnY2
      6enpbNu2DUdHRwA9O1UPgV6Q0TliHVM9Z3MrHyzqdsAtYDXvdQLUI3i36WSm9v8VC9u+jOv6
      oNilEYM/+YwL84IY238h+VhQt4OcD+b0BPM8jgW9y9dnbhWnjyBgYLMH2BE8CZw6darMtzsb
      NmzI6tWreeaZZ/jPf/7DtGnTaNOmDQqFgh9//JGioiLs7OwICAjAysoKlUqFmZkZs2bN4urV
      q9ja2jJ79mxsbGwYPHgwGzZsYPjw4eTn59O8eXP8/Pxo3rw5+fn5+Pv7M3z4cBwcHHBxceHC
      hQt4eHhgamrKpEmTdHOJ0naESqTgb+HgwYOcOXOG8ePHl7tJvboInWDBE4tGoyE5OZmhQ4c+
      losfqq4T/H8QimzzlIAT4gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Combined Set' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='DateHierarchy' width='192'>
      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
      QRkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='DiscreteContinuousAxis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='FilterSort' width='192'>
      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
    </thumbnail>
    <thumbnail height='84' name='Group1' width='192'>
      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
      gvNbqfUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='84' name='Group2' width='164'>
      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
    </thumbnail>
    <thumbnail height='104' name='Group3' width='192'>
      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
      9Ai2oIgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='144' name='MeasureNamesValues' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACQCAYAAABeUmTwAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deVyUVfuHr5AdJUUztTe1UktTUhmRRQYRQ00Kd19EIpdCM01Lc+EVf1aE
      aWLmUlSmqKOZUVG5EaJMgogDKJqhGCqJG+Ayyj4zz++PgZERRAQrc871+cwfz1nucx547jn3
      eeac831IkiQJgcBEMfunOyAQ/JMIBxCYNMIBBCaNcACBSSMcQGDSCAcQmDTCAQQmjfmdCqhU
      qr+jHwLBP8JD4ocwgSkjQiCBSSMcQGDSCAcQmDTCAQQmTQMdQMP5+HDG+3ggk8nw8BnPitTC
      e9Oze40mm+iZQ/CQyZAtUN6aWe0+wuPPo7mrBpQskAUQdebeddlU0el0qFQq3n77bQoLjZ+n
      xMREBg4ciLOzM++88w5qtbpGG2VlZaxevRpXV1fkcjkKhQKdTlfNDlIDuJYQKvm4vCytTCuQ
      yiVJKr14UNqWeLYhJmvl9LoxklNoQr3q3tj2luQ0JlI6XlpDXuK7Ve6jXCpIWym97OIjvZt4
      4y5aSJBCncZI607Xq3uCKuzevVuaO3eudOzYMenGjZv/g9zcXCk4OFg6duyYVFxcLH388cfS
      J598UqONHTt2SHPmzJHUarWhnkqlqmanASPAYdaExdJ1/gqm9HDAHLBsKeMFt8fqb/IvJD/v
      AnR4hk6Wt+YUsHNDDHavhFTchzkOPaawePrjxHz1Mxf/ic6aOP369eODDz6gbdu2RukpKSm4
      ubnRuXNnrK2tGTNmDH/++SfXrl0zKqfRaEhKSiIoKIgmTZrQpk0b/P39SUxMrGan/g5w5hCq
      gu649bavMVudsuxmSDFkJlEZlUOVkgWyBdwMQqpenyEqQMaby6OYOcILV5kMD/8VpBaCcoGM
      4SuOw7a3kMlkyAKiuDXauF2b1eoahUC/kXGwNd4enYxsPdqtB60PHeO4oY8BRGVnEz3dF9eK
      ttUZUcwcUtleBMlV6muyow15rl6BLEupev+32lKTsiwQL1cZMpkrXiMWEldQ93+FqXDt2jWe
      eeYZw3Xz5s1p0aJFtTCptLQUa2trWrdubUjr2LEjJSUl6HQ6Izv1d4CSYopoySPNa8i7GM3s
      N1U892EMyapkYqbZsSn4fXbVcXpQZOvE2+t/YX/SFwy9EcWPqSBfqCJ66tMwOAKVSoVKEUS7
      OrZZre5C+c16xcUUYU9ju1s6YdcYe05yyuBlauLDFpE9/CsSFEG0K9zF+8GbsJsSTZJKxZ5N
      wfSoLKpJZdm0OJxW7EalUpEQ6cWht6ve/y22TmxmUXwPIhJUqFQJxCx6iTZ1+1OZFOXl5Vhb
      WxuuzczMKC0tJT8/36icVqvFzMwMc/ObCx3Mzc25fPkyxcXFRnbuuBTitljbYMsl8gqAW5yg
      MDWJg24BfFQRGjn0G8+YJ4eTlAoD5DUZM6bN011pbQvgQHN7uHanCg1p08YGW9TcuNU5C2+g
      pgNPGLyskP8EfMQsj4oRLzWJ+CfHEP18SywBbO2wqix6IhnlhYOcH+rGUoPBp7mQD9jVYOux
      9nTIf5+F0y8zsO8g+vTtRdeavlhMHAsLC0pKSgzXOp0OKysrWrRoYVSuUaNG6HQ6NJqbrzE0
      Gg0ODg7Y2NgY2an/CNCuK93tD5F0oOZZ+L+HZ3HsdZ7dv54wSr14JJ3z3bvwtCGlNZ2eqjnc
      qxH7EaxOVulHHJUKlUpBkMGZbrFlN4APdq/nf4M6UpzyGVOHD2NZ6t29gzIFHn74YTIzMw3X
      BQUF5OfnY2dnPHxbWVlRUlLC+fPnDWlZWVlYW1tjZmZmZKcBk2Angme6kbQ8hKj0y2iAsksq
      tiflYufkRq8kBV+mX0aDhsvxX7Epux9uTpV1c/kzVwNllzj6024y6thi48b2cDKTE2WARmP0
      mvLObd6O5gwM9KNwXRirKuumr+Kdj//Eb7wvj96u2tNd6H48ll2/F6GhDPXJM5yrzOvUC3di
      WBWZzmUNoCni/NH9HLtdXH9cyY5sa7oMCmLGouVM63mBQ5li+n0rzs7OJCUl8fvvv1NSUsKm
      TZt4/PHHefjhh43KmZub4+bmRlRUFNevX+fcuXNs3rwZd3f3anYa9DuA/Qsf8t3sNiTM9sNF
      JsN77Gr+sGoKjw7nw+UyDs/2w0Xmgt8nhYyJ/B8D7AC64z08n8/8XPDwncNP1h2qfMvWTvOB
      Ewky20yQmwzX4GjjNzS1tlk7dm5zWRf2DKmVdWen8kzYOua61VL50eHMm9ua7a/JcXEdwJSt
      J2/mmTvz+seTeGTPWwx2kSHzGMzU1Ucptr6NLetiDkYEMcBFhszFj0+vBzDlxfvzbdrfweef
      f45MJsPT09PwycjIoE2bNgQGBjJjxgzkcjl5eXlMmDABgOLiYt544w2SkpIA/Zukxx9/HB8f
      H/773//i4+NDjx76WVpVO2I1qOCBIDMzk82bNxMSEoKlZbV33bdFLIUQPBBkZGQQEBBwVw8/
      iP0AAhNHjAACk0Y4gMCkueMPYUVFRX9HPwSCfwQxAghMGuEAApNGOIDApBEOIDBphAMITJoG
      OoCWCwkfMdnPB7lcjo/fZCLT79O3RtrTxIT44yOXIw9LNMpKDJMjl1d+fPB/aw2pf+Ei1xzF
      hGp9EPwzNMgB1ImLmPRuFj3e28IepZKfv3yVJ0qv3qu+VaMhD07R7s9ZesGH1XFKlCHu1fI7
      Bm9EqVSijFPwavOfeOfdbYhNWQ8+DXCAI2xYEk+X2Ut4zbEZjQDLR3ri43J/7mXKz7sIT3ai
      w52Wilg+Qr+AYfwn5RCZdygq+PdTfwfIySDtcjd6O91mT3DqqpuhkX8IiqOVMUUiYfIwbn6P
      V73OQTFBzjurFYSMHYy3XI7PuEjSi/RhytjILNg1Vx+qTFCQU8c2q9W9q1FETeqqVxnsXREe
      hcRwWmtokFWT/fRhlY8/IYqjqKvcx9Swj3h1sLe+XlgsF7S3aSF1VUU5fb9jTt+moOCeU38H
      KC2hiEdoUdPWvUsxhL6TRrf3trBHuYctk2zZ+uYSdtdxelBs04Npn//I7riVvFioYHs6uIco
      2RjcEQaE60OVNQEYnRlQS5vV6tYQAhkoyyNe8R1nPV3oAVyKCeWTslfZGKtEuWcLk2zXMi8q
      C7hETOg7pHV7jy17lOzZMgnbrW+ypOpNPjWS5T/uZk/MR3hkf8hHO2sIqi7FEPpJGa9ujEVZ
      0e+186LIqtufStBA6r8n2MoaW/LIr2FPcNGhA6T1Hs0HFaFRM89ARrYfS3I6eNfy7FXSqlMX
      HrUFaIpDE6jLfLShbWZFjkUeCVg0oa3LGJbP9saWIvYdSOPUvjT8vq9SeMAlKDrFgbTejP7A
      kWb6Bgkc2Z6xyeng/bj+Ph5vh20joJkjvv3aM/ZQJgw27kzRoQOkndpHmnEDXAI61uG+BQ2j
      /g7QtguO9l9xIFWNn89d7JW9T+kYvJE1AW1rzHN881tWDm9pnFgUe1f2dVoNFuaNas50fJNv
      Vw6nZc25gr+QBkyCezBuWm8OrH4XRcYVtEBZXhqxyeew7d6bnge2sC7jClq0XEnYwNbTnrgY
      zg05T+55LZTlcWz7Xo7WsUW7xk0g+wQnywCtlqqR8p3brA+2dHdyJGPDCrbnlgFQdj2bpNQc
      sO1O754H2LIugyta0F5JYMPW03hWabC0tKJO7nbWfFdAvz6O1Vvo7oRjxgZWbM+lTN8A2Ump
      1eY3gr+Ghu0J9nkPxYxW7Js/Gi+5HN+JX3DKqim09OPdxT05Mn80XnIvRn9WxMjls/C2BehG
      35cK+HK0Fz4jQ9lu/VSdh/rmzwcRYPYtwf3leE/7wXhPcK1t1p+WQ/7He33yiRzXH7lcju/Y
      JcRfAWiJ37uL6XlkPqO95HiN/oyikcuZVaXB5OUj8ZHL6T9uA7rAj5nlXkNnWg7hf+/1IT9y
      HP3lcuS+Y1mib0DwN3DHHWFiOXR9yEExYSynxyupbb4t+OcRSyEEJo0YAQQmjRgBBCaNcACB
      SSOORRGYNGIEEJg0wgEEJo1wAIFJIxxAYNIIBxCYNEInGL2InkxW+fHAZ/wyki4LhZZ/O8nJ
      yQwbNgyZTMagQYNIT08H4MyZM0yePBlXV1ehEyxJkpQQ6iSNqRT4Lb0oKcOHSE4TvpYu3LlH
      0roxTlI9uyT4Czl+/LgUGBgoHTlyRNJqtdKlS5ek/Px8SZIkKS0tTVIqlVJJSYlU//0ABp3g
      XUzpUbEfoKWMF+7TRe16nWC/GnSCb8GyJR7+Q3h6eAqphaN5oQ4KM4L7j127djFixAi6du0K
      wCOPPGLIq1SKgYaEQA+MTvCdqVnzV8kC2XD0ZvXhU0DUmTrd3wKlmpRl/nhUpCsXyBgd9hXh
      433wkMlw9Z1OzJmb9xTo5VrR9ggWCgHhO1IpnSqTyWotp9PphE5wNcr+5KdVm8j29KaPHbVo
      /spZqIpGb1avBKkIand7u1U4uSaUTW1C2ZW8kMqeFBW3YeTHP/NrcizvPLWPb/aeAU6weVE8
      PSIS9G3HLOKl+/PQjfsKjUZDWVkZS5Yswd3dHWdnZwIDA8nOzjaUiYuLw9nZWegEV3J8xXBk
      KwBs+E/fN4gKfwF7qIPmbz3wnMZHo580+uPbd+xMB3tLwIHmTStTH6N9h3zeXzidywP7MqhP
      X3oJAeE60ahRI1555RUWL15Mo0aN2Lt3LytXriQsLAwbGxv69++PSqUSOsGVPD01GlX8akY/
      AQ8/0ZlWVecKtWr+3j0dOjxZx28eOwZ8sJv1/xtEx+IUPps6nGHLUhHvp2rHzs6Oli1bYmVl
      hYWFBWZmZvTu3RtLS0uuX79uVFboBFfF3plZa8LosGMKU1dl6E+jqFXztzH6Lp1A36XKHtXv
      /qpzHOWObKy7DCJoxiKWT+vJhUOZCAXhO9O7d2/Wrl1Lfn4+Op2OAwcOYGlpiYODA9999x3H
      jh2jvLxc6ARXvyk58zeF0f7HYKZ+dYKyWjV/mzNwYhBmm4Nwk7kSHH2xQfdXHWuKD0YQNMAF
      mcwFv0+vEzDlRUxXQbju9OrVCw8PD/z9/XFxcWHjxo1MnjwZc3NzWrRoQXh4OO7u7mI5tMC0
      EUshBCaNcACBSSMcQGDSCAcQmDRCJ1hg0ogRQGDSCAcQmDTCAQQmjXAAgUkjHEBg0jRgR5j+
      CPDISjEr62Y86/MWC2Z40uo2QigCQUPQ6XRkZ2fzzTffcPz4cT766COjnV5VKS8vZ926dXz9
      9ddYWFgwbtw4Ro4ciZmZGTk5OURERHDkyJGGjwADwpUolUriFAvodSqMgNe3GNRNchQTalRz
      /OfQqzcKjep/J5mZmXz55ZcMHz78jru9EhISOHv2LDExMaxbt46kpCQOHz4MwNWrVxk1ahTb
      t2+/dyGQ5SM9GR8+k94nN/Btql68qG3AmupqjgJBPenSpQuLFi3i6aef5qGHHrptOY1Gw4ED
      BwgICKBx48a0atWKkSNHkpycDICjoyNubm5YWVnd4zmAvTcD5GoO//YncIuyu/Y0MSH+ek1d
      uQ9+kzcapEDVRxWE+Ov1fb0Hv8rGLNDr807Gz6dSn1fBTanhMGOt36rXiWHIg5aw/qOKut4j
      mL0tB70esT5k2zVXjlwuZ4Li/hmbBPeO0tJSrKysaNWqlSGtQ4cOlJaWotPpDGk6na4hc4C7
      JDueLclq2vUZRV8Pd/p4OtIOKIqdh+/evuzcHMtNBa0iYuf5srfvTmJiK1JzFEzwDWO8MoQ7
      qg6Zt6HvzFm8PBO9Q3z1KzmDAwhRbqS9kC4SVGBmZnaPR4CivcQp7Xnu2cer53Ucz7qvlzBB
      ZsMfvyzm1SGz2XbpnrYuEABgZWVFaWkpFy5cMKSdPHlSH/KYGT/y98wByvLSUISuIKnbq4x1
      qv4aqCA9FtX1x+k5bAKhi+byYtN0jmZXypuuZll8HmXoZUhz82zp3rsnB7asI0OvQUrChq2c
      rlBvB+B8Lnql1WNs31tnoVX0Sqsn0Sutau9YQ/Dvw9zcnN69e6NQKLhx4wYXLlxg69atuLi4
      APDjjz+SmZlJeXl5w0OgXXPl7AKwfgyZ3wwUkzxrFHy24Rzfhv6X+TnXKbdoQluXabzfC2jk
      x7vLb/BhWAD9/68EiyZPM+7jLxjr9y6Lz85m/mgvrpRY85hHUIV6O9CtLy+tXMhory9p9qwP
      b3p2hD/q0tvmPB8UwM//C6b/Wuj25gZWDRfnjPxb2LNnDwsWLDBcf/PNNwAsXLgQV1dXQkJC
      GDVqFL1798bT05NTp07h5+eHhYUFr7/+Os899xwAzZs3Z+nSpWRlZQmRPMGDwYkTJ/j222+Z
      NWsWFhYWda4nfgkWPBD89ttvjBw58q4efhAyqQITR4wAApNGOIDApBHnAglMGjECCEwa4QAC
      k0Y4gMCkEQ4gMGmEAwhMmgY4gF7vyiAv6upFYOg2shug3nBTDyuAqFsFwAQPDBqNBoVCwaBB
      g5DJZLi7uxMREUFZWRmFhYWMGzeuimytjJdeeolLly6h0+n48ccfDfV8fX1JTKx5e9/Vq1eZ
      NWsWrq6uuLq6EhYWZvhR9x7JpBpLhJYXHpPWvOwi+UQcqqe936SVvl7SvFi95Kok6eVLncas
      k/QCpglSqNMYqVLNVPDvpbCwUIqOjpYuXLggabVa6dq1a1JISIgUExNTrezhw4elpUuXSlqt
      VtqzZ480f/58KTc3V9JqtVJGRoY0efJkqaCgoFq98PBwSaFQSGVlZVJhYaEUEREhffLJJ5Ik
      3TOZVGPMbTvzclA/Vq85xBme4+4VhPK5dL41nTo5GJaoyheqUN2rDgruG2xtbRk2bJjh2t7e
      nj59+nD58uVqZePj43nhhRcwMzNDLtfv5Ktc0//ss8/y5JNPVlHm0VNUVIRaraZ///5YWFhg
      YWHBqFGj2Lx5M3CvZFLvgHKBjICobLKjp+PrWhHSaLKJnjkCL9eKkCk8nvMa4EwUAbK32MZx
      VgyXGUKgM1EBeknTavky7lLpVHCfUlpays6dO9m1axf9+/evln/jxg06dOgAVOzgqrKhJSkp
      CTMzMxwcHIzq2Nra0rVrV6KjoykvL6eoqIgffviB7t27G5XT6XT3PgQa+tlxSZL04Yvvy+Ol
      VxcrpYulkiRJ5ZJqsY/k9dZ3Uk6pJEmlx43K1xTiGCvDixDoQeLGjRvSK6+8Ijk5OUkzZsyQ
      Ll68WK2MVquVVCpVtfTi4mJp1apV0qpVq6TS0tIa7Wu1WunLL7+UnJ2dJVdXV2n9+vWSVqs1
      5P/yyy+Sk5OT1OARoFIk2mXAm+x7JoxVEzoZ8gr/E8BHszxoaQlwgmSlJcMnDOVxS8CyE+Mn
      +JCj3F9N8Frw4GNnZ8fatWvZv38/EydOZOnSpRw6dMiozNmzZ+nSpYtR2tWrV3n//ffp2bMn
      r7/+OpaWltyKTqcjKiqKxo0bs2/fPuLi4igqKmLjxo2GMg2XSa2gUiRa9WssX83tR+sqs4rW
      nZ6iZh15gUCPhYUFXbp0ISAggB07dhjlxcXFYWNjY7guLi7m008/ZeLEiYbtjTWRn59PVlYW
      vr6+WFhYYGtry9ChQzl27BiFhcZq7X/j7wCdcJGXEb3me/4sA8pO8NWaWNrKXes4Ybajsf15
      TpzQy6BqhFjuv5bs7Gx++uknw6S3qKiI3bt307hxY0OZvLw8zp8/b1QvNTWVdu3a0b59+1rt
      N2nSBI1Gg1KppLy8nPLycuLj43nooYewsrK6dzKpd4c5TjM+ZcpDCl72lCHzDGbPLSFT7Tgx
      6s2e/PauDy4yL5ak/qWdFfyFODg48PvvvzNixAhkMhnPP/88xcXFTJgwwVBm165ddOvWzaje
      iRMniIiIMPqNwNPTk4yMDIqLi3njjTdISkrCxsaGGTNm8PPPP+Pu7o5cLiclJYUZM2YImVTB
      g0lmZiabN28mJCSkxnnB7RBLIQQPBBkZGQQEBNzVww9iQ4zAxBEjgMCkEQ4gMGmETKrApBEj
      gMCkEQ4gMGmEAwhMGuEAApNGOIDApGngjjA1RxUfsmhTMjnXoUlbF8bMmU1AV7EGVFB/Dh8+
      zMqVK8nKyqJLly6EhobSqlUrFixYwJ49e4zKNm7cmKVLl9K5c2dDWl5eHpMmTSIvL8+orKOj
      I4sXL+bDDz802GnQ6dA5W4IZt7klb6+azwuPQe7295iy9BL+ayMZ/ZdJQyYSJv+K9hvXENC2
      atpcCK/Q/koMQ/5VezYKhcp/JXv37uWRRx6hU6dOxMbGkpKSwvz58zE3N/6+Pn/+PFFRUUyf
      Ph1ra+tabcbFxXHlyhVGjhxplN6AECid7zecxG3qXF54zBKw5LEX/o/5g3PZ8G0qf6/4kDsh
      SiF896DQt29fnn32WSwsLHBycsLKyqpGOat9+/bRp0+fOz78JSUlpKen4+XlVS2v/g6Qc4wM
      dW88XG2rJDaic1dH1L9lkgu1y5kW7CX8Fb+bsqlvrSezYrDJUUxA/s5qFCFjGewtR+4zjsj0
      Ir1SpHwuu8gicqx+g7TeXCJh8gkocirqzt0FWZGMlcuRy8NI1Gby+Rg502MKDF0piJmO97xY
      1AjuV3Q6HStWrMDT0xMrKyujvIKCAn7//XccHR3vaCc1NZVmzZrRokWLann1d4DSEoqww87W
      ONnWzg6yTvPnHQ20YnDoRn5WKlHu2cJE8y9Z9tO5m9nFNvSY9jk/7o5j5YuFKLanQ9sA1ijD
      GUBHgjfqFepv/dZvG7AGZfgA6BjMRqUSpTIE90bPMGS4I2m/7EUvTFnAvj1H6DfYW+xYu09Z
      u3Ytffv2ZcSIEfrze25h//799OrVC3v72v+D5eXl7N+/n4EDB9aYX38HsLLGlkIKb5kiFBUW
      Qsf21CCUaoyFhiNrJjPUW47cy48lyRgfb9GqE10etaURljR1aFLvblbScpA/A05H83MWULCP
      PScHM9Clupql4P5g3Lhx7N27l5SUFDZt2mQkcK1Wq0lLS8PZ2fmOdo4ePYqVlRVt2lQXQ1Sr
      1Q1wgLZdcLQ/wK/7q3qAlt+PZmDv2OWOk8/0tXPYbBnEuh36b/LwAfXuSd2wdWfUMIj7NYtL
      e3/h0rAXqUHNVXAfYWZmxtixY/njjz8oKLgZvqakpNC5c2eaN29ea32NRkNCQgIDBgyopg9c
      aacBk+AeDA3sQNKKcLbnlgFl5G7/P97b9hiBQ28ePHQ7Pd/SkmJsHR7lYUstRWeSSMmua7u2
      NLa/yMmTV9CipUapX9vG2F88yckrWtBqDRPyjr7DcfhuDRF7YLhvx/rdtuAvpaioiO+//56c
      nBx0Oh2pqalcvXrVMAeobUJ7K9nZ2VhYWBjOFapKpZ0G/RDWdvQSlo/Usem1Qcjlg3h5aQJ2
      vsEMqvz679aXlwq+ZLSXDyNDt2P91M2Hrtfo12i9cwb9vV/izQ3nsardmavQg6GTnyNzkR9e
      8kEsS6upyFAmP5fJIj8v5IOWYSjSchBDexwkCS88ahIzFvzjWFpaYmlpyezZs+nXrx8KhYJp
      06YZYn2VSkXTpk2rTWhLSkp4++23OXDgAKCfQG/fvh03N7cav/0r7dxblUh1ImEvh5LuGsoX
      Mz1pdr+FGGUnWT/1dbJG/cB73rZ3Li/411BfnWCTkUnNUUxgbOSfPDU6nOVTnMTbnweM77//
      nq5du9Kx492FtibjAAJBTYjFcAKTRjiAwKQRx6IITBoxAghMGuEAApNGOIDApBEOIDBphAMI
      TJoGOYA6I4qZI7xwlclw9RrB68sqRO9qRa8vLETuHjxKSkr44osv6NevH87OzowePZoTJ07U
      WPbo0aOMGDECZ2dnhg0bRnJysiEvLS2NwMBAnJ2dGT9+vEEoQ6fTsX79eoP9wMBAsrNrXkVZ
      VlbG6tWrcXV1RS6Xo1AoDEuqq9qpv0jejZ3SLJeh0qIkva5v6bUsKfaD+dLXdxSxMxbXEzw4
      rF+/Xlq+fLl0+fJlSavVSrt375ZmzpwplZSUGJXLy8uT3njjDenIkSOSVquVsrOzpcmTJ0tn
      zpyRJEmS4uLipIyMDKmsrEz64YcfpDlz5kjl5eXSr7/+Ks2aNcvI/uTJk6Vr165V68uOHTuk
      OXPmSGq1WsrNzZWCg4MNgntV7dT/VIizp8gq74ava4Wur30Hnp/7br3NCf79+Pv7G21c79Wr
      F2lpaWg0GqMtjefOnaNHjx507doVgCeeeIIhQ4aQnp5O27Zt8fb2rmZDq9Vy4sQJfHx8aNas
      GaDfO6xSqSgpKTHaGabRaEhKSiIoKIgmTZrQpEkT/P39SUxMxMnJychO/UOg/3TB0T6WFe/9
      wqmiW+OeAuIW/hcfD72MjYfPFNYcK6zRDOoUlgXqwyiZxxBmRmejt6YmZVmgXlNY5orXiIXE
      FdRsQnB/UPXh1+l0xMbG0rJlS+zs7IzKNW3alP379/PHH38Aeq3g0tJSzp49a1ROp9MRERGB
      t7c3VlZW9OnThx07dpCfn49Op2Pv3r2Ym5tX0wkuLS3F2tqa1q1bG9I6duxISUkJOp3OyE4D
      dIIlqfzcbilisp/Ux8lF6jt2vvT14cqhKF/6LS1LulahD1zw3TTJ6eWN0llJkoxDoAvSt5NG
      GsKo8oLdUqjPUOmz45IkHf9MGuq7VEorlSRJKpWuZaVJv+U3pLeCvwu1Wi0tWLBAio6ONtLm
      rUp8fLw0cOBAycnJSfLy8pKCg4Ol0NBQQ35kZKTk5OQkHTx40MhGWlqa9Pzzz0tOTk7SW2+9
      JV25cqWa7WvXrknh4eHSjRs3DGkXL16UZs+ebUirtNOgg7HMW/djxup+TC06z6GtHxASPBXN
      11EEtLNAk/EZ499K5PT1cn3hp3tSbX5cmErSwWwSDvqwtUry4AuAU3s65L/PwumXGdh3EH36
      9qJrnTfNCP4pTp8+zerVq5k0aRJPPvnkbct5eXkZ7eqKj483jAgAr732GhMnTmTVqlUcOXKE
      oKAgMjIy+Pnnn9myZQsPP/ww+/btY8mSJcybN89olGnUqBE6nc5oj7lGo8HBwcfdKjUAAAJy
      SURBVAEbGxsOHTpksHNPXoOa27ZGFjSTMU/+Ruy+XEiNZHqUFRO2JOg1hCMG11K7O7O2VWgN
      V3wWygG7AXywez3/G9SR4pTPmDp8GMtShTbq/Ux+fj7r169n3rx5tT78t6LT6UhOTqZTJ2PF
      UDMzM8aPH09WVhb5+fns2LEDPz8/fexuZoZcLsfa2trIcQCsrKwoKSkxklnNysrC2toaMzMz
      Yzv1vtukFUyP/JWT6jJAQ9Hvu4nPbk73ro9BaQnFds1p1dQSTdEpft1/smYbdk44dz/EV0t/
      0msHU4b65K8cPAMcV7Ij25oug4KYsWg503pe4FDmxXp3V/DXEx8fj6enJ02bNq21XOWEtrS0
      FJ1Ox9atWzl79iwymYyioiK++eYbzpw5g06n48CBA1y9ehVra2vatWvHtm3bUKvV6HQ6jh49
      yqlTp6q1Z25ujpubG1FRUVy/fp1z586xefNm3N31Z+hUtVP/EKiDCz12fsrrg2dwuRhsHBx5
      IWwdU58DNAG88dgEXnfbinXn55kkq34gkZ5HGf7eYrJDFjHGbSHF2ODg6MXbCzzAupiDHwax
      OONyRXoA77/4WL27K/jrycjIYOfOnUZpLVu2ZN26dTz00EPMnTuXOXPm0KFDB+Lj49mwYQPl
      5eV07dqVsLAw7OzsDG+Mpk+fTm5uLp07d2bBggXY29szYsQIIiMj8fX1paSkhLZt2zJz5kza
      tm1LcXExs2bNYsyYMbi5udGvXz+ys7Px8fHBwsKC6dOn06OH/rCGqnbEcmjB30JCQgIZGRlM
      mTKlxk3qDUXoBAvuW3Q6HcePH8ff3/8vefih/jrB/w8dGdBn2H45FQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='P2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Parameter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Positive Set' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Region Wise Count Of Orders' width='192'>
      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
    </thumbnail>
    <thumbnail height='24' name='RelativeDateFiltering' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADoElEQVRYhe1WQUgyWxg9z9SFVCpUO6VVFEERmClEZguJCAxsE1I0RLaRVpVEUCIWLQpa
      tQqCQCIowjBEMLCNFdkii8oWFRKVaUalpqFz3yLe8MTiX2TMg+eB2Zzz3fude+43zPxFCCH4
      H4PDtgG2UQiAbQNsoxAA2wbYRiEAtg2wjUIAbBtgG4UA2DbANgoBsG2AbeQtAL/fD5VKBZlM
      xjxutzurJp1Ow2w2o6OjA4+PjwAAmqaxsrKCtrY2yOVy9Pb24urq6ts+8Xgcg4ODoCgK8Xg8
      R19aWoJarYbf72e4RCKB6elpKJVKKJVKmM1mpFIpAAA3H4cHgEgkgv7+flAU9W3N0dEREokE
      qqurGc7r9eL09BQbGxsQCoXweDyYm5vD4uLil3u4XC5IJBLEYrEc7ebmBhcXF2hsbGQ4mqax
      sLAAgUCAnZ0d8Hg83N/fo6ioCEAeJ+Dh4QESieRb/fX1FXa7HRRFgc/nM/zl5SU0Gg3EYjE4
      HA5aW1tRWVn55R7BYBA+nw89PT3gcLKtf3x8wGazQa/Xo6SkhOFvb28RDocxMDAAgUAAHo8H
      qVQKLvfz7vMWwNvbGyoqKr7VHQ4H5HI5pFJpFt/c3Ayn04lIJAKapuHxeBhz/wZN01hfX4dW
      q4VQKMzR9/f3IRQKUV9fn8UHg0HU1NSgtLT0S195C2BoaAh1dXUAgHA4jKmpKaytrSGdTmN+
      fh4ymQxdXV056xKJBEQiETOSXC4XT09PWTXxeBxWqxV9fX1oamrK2WN5eRkAYDQacyYjmUwi
      mUwiGo0CAJ6fnzE2Nobd3d3Pfj8895coLy+HTqfD9vY2AoEAHA4HVldXs2rcbjdmZ2dxeHgI
      rVYLsVgMAGhpaWHM/YODgwM4HA5sbW1l8Xt7e7BYLNjc3MTd3V2WZrfbYTAYoFarcXZ2BpFI
      BAAQi8XQaDQIBAJQqVQAyQNCoRCxWq3k+vqaZDIZEo1GyejoKLHb7Tm1sViMmEwmEgqFCCGE
      2Gw2MjMzQ15eXkgmkyEnJyeEoqg/9jOZTCQWi32pWywWcnx8TAghJJVKkYmJCeJ0Ohlv4+Pj
      xOfzEUIIycsrUFZWBrVajZGRESgUCmi1WlRVVaG9vf2Pa7u7u1FcXIzOzk4oFAqYzWYYDAa8
      v7/DaDTC6/X+yBufz8fw8DBcLhcUCgV0Oh1qa2vR0NDwWfCTm/9NnJ+fk8nJSZJKpX61z3/2
      T9Dv90Ov12d9Mn8DfwNFaP0M/oL6RAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top/Bottom Set' width='192'>
      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
      KD62/g8KA5KIVVIZ9gAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
